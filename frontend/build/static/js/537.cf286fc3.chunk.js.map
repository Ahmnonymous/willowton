{"version":3,"file":"static/js/537.cf286fc3.chunk.js","mappings":"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","sources":["components/lov.js","pages/Drawer/StudentDetailDrawer.js","pages/Drawer/AboutUsDrawer.js","pages/Drawer/ParentsDrawer.js","pages/Drawer/UniversityDetailsDrawer.js","pages/Drawer/AttachmentsDrawer.js","pages/Drawer/ExpenseDetailsDrawer.js","pages/Drawer/AssetsLiabilitiesDrawer.js","pages/Drawer/AcademicResultsDrawer.js","pages/Drawer/VoluntaryServiceDrawer.js","pages/Drawer/PaymentDrawer.js","pages/Drawer/InterviewDrawer.js","pages/Drawer/TaskDetailsDrawer.js","pages/StudentPDFDocument.js","pages/StudentDetails.js"],"sourcesContent":["export const races = [\r\n  \"Black\",\r\n  \"Indian\",\r\n  \"Caucasian\",\r\n  \"Coloured\"\r\n];\r\n\r\nexport const provinces = [\r\n  \"Eastern Cape\",\r\n  \"Free State\",\r\n  \"Gauteng\",\r\n  \"KwaZulu-Natal\",\r\n  \"Limpopo\",\r\n  \"Mpumalanga\",\r\n  \"Northern Cape\",\r\n  \"North West\",\r\n  \"Western Cape\"\r\n];\r\n\r\nexport const maritalStatus = [\r\n  \"Divorced\",\r\n  \"Married\",\r\n  \"Single\",\r\n  \"Widowed\"\r\n];\r\n\r\nexport const yes_no = [\r\n  \"Yes\",\r\n  \"No\"\r\n];\r\n\r\nexport const employmentStatus = [\r\n  \"Disabled Grant\",\r\n  \"Full Time Employed\",\r\n  \"Part-Time Employed\",\r\n  \"Pensioner\",\r\n  \"Self Employed\",\r\n  \"Student\",\r\n  \"Unemployed\"\r\n];\r\n\r\nexport const highestEducation = [\r\n  \"NQF 5 - Matric/Higher Certificate\",\r\n  \"NQF 6 - Diploma\",\r\n  \"NQF 7 - Degree\",\r\n  \"NQF 8 - Honors/Postgraduate\",\r\n  \"NQF 9 - Masters\",\r\n  \"NQF 10 - PhD/Doctorate\"\r\n];\r\n\r\nexport const semesters = [\r\n  \"1st Semester (January-June)\",\r\n  \"2nd Semester (July-December)\"\r\n];\r\n\r\nexport const financeType = [\r\n  \"Staff Bursary\",\r\n  \"Student Loan\",\r\n  \"Zakah\",\r\n  \"Willowton Group Family Member\",\r\n  \"Willowton Group Director Referral\"\r\n];\r\n\r\nexport const religions = [\r\n  \"African beliefs\",\r\n  \"Christianity\",\r\n  \"Hinduism\",\r\n  \"Islam\",\r\n  \"Judaism\"\r\n];\r\n\r\nexport const studentType = [\r\n  \"Currently in matric\",\r\n  \"Completed Matric\",\r\n  \"Currently in university\"\r\n];\r\n\r\nexport const nationality = [\r\n  \"Angola\",\r\n  \"Congo\",\r\n  \"Equatorial Guinea\",\r\n  \"Kenya\",\r\n  \"Mozambique\",\r\n  \"Nigeria\",\r\n  \"Uganda\",\r\n  \"India\",\r\n  \"Botswana\",\r\n  \"Central African Republic\",\r\n  \"Ghana\",\r\n  \"Malawi\",\r\n  \"Pakistan\",\r\n  \"South African\",\r\n  \"Bangladesh\",\r\n  \"Somalian\",\r\n  \"Lesotho\",\r\n  \"Ivory Coast\",\r\n  \"Burundi\"\r\n];\r\n\r\nexport const emergencyContactRelationship = [\r\n  \"Mother\",\r\n  \"Father\",\r\n  \"Brother\",\r\n  \"Sister\",\r\n  \"Aunty\",\r\n  \"Uncle\",\r\n  \"Grand Mother\",\r\n  \"Grand Father\"\r\n];\r\n\r\nexport const parentRelationship = [\r\n  \"Mother\",\r\n  \"Father\"\r\n];","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport {\r\n  studentType,\r\n  religions,\r\n  financeType,\r\n  races,\r\n  maritalStatus,\r\n  employmentStatus,\r\n  highestEducation,\r\n  nationality,\r\n  provinces,\r\n  yes_no,\r\n} from \"../../components/lov\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { format, parse } from 'date-fns';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst StudentDetailDrawer = ({ open, onClose, studentId, onSave, onDelete }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [whatsappError, setWhatsappError] = useState(\"\");\r\n  const [alternativeError, setAlternativeError] = useState(\"\");\r\n  const [emergencyError, setEmergencyError] = useState(\"\");\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [surnameError, setSurnameError] = useState(\"\");\r\n  const [emergencyContactOption, setEmergencyContactOption] = useState(\"\");\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [deleteAttachmentConfirmationOpen, setDeleteAttachmentConfirmationOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userType = user?.user_type;\r\n  const isAdmin = userType === \"admin\";\r\n\r\n  const relationshipTypes = [\r\n    \"Staff\",\r\n    \"Dependent of Staff\",\r\n    \"Family\",\r\n    \"Referral\",\r\n    \"Director/Board Member or stakeholder\"\r\n  ];\r\n\r\n  const [formData, setFormData] = useState({\r\n    student_name: \"\",\r\n    student_surname: \"\",\r\n    student_nationality: \"\",\r\n    student_id_passport_number: \"\",\r\n    student_type: \"\",\r\n    student_religion: \"\",\r\n    student_finance_type: \"\",\r\n    student_whatsapp_number: \"\",\r\n    student_alternative_number: \"\",\r\n    student_email_address: \"\",\r\n    student_highest_education: \"\",\r\n    student_home_address: \"\",\r\n    student_suburb: \"\",\r\n    student_area_code: \"\",\r\n    student_province: \"\",\r\n    student_date_of_birth: \"\",\r\n    student_race: \"\",\r\n    student_marital_status: \"\",\r\n    student_employment_status: \"\",\r\n    student_job_title: \"\",\r\n    student_company_of_employment: \"\",\r\n    student_current_salary: \"\",\r\n    student_number_of_siblings: \"\",\r\n    student_siblings_bursary: \"\",\r\n    student_willow_relationship: \"\",\r\n    relation_type: \"\",\r\n    relation_hr_contact: \"\",\r\n    relation_branch: \"\",\r\n    relation_name: \"\",\r\n    relation_surname: \"\",\r\n    relation_employee_code: \"\",\r\n    relation_reference: \"\",\r\n    student_emergency_contact_name: \"\",\r\n    student_emergency_contact_number: \"\",\r\n    student_emergency_contact_relationship: \"\",\r\n    student_emergency_contact_address: \"\",\r\n    student_status: \"Pending\",\r\n    student_status_comment: \"\",\r\n    employment_status_attachment: null,\r\n    employment_status_attachment_name: \"\",\r\n  });\r\n\r\n  const statusOptions = [\"Received\", \"Pending\", \"Approved\", \"Declined\"];\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateNumber = (number) => {\r\n    const numberRegex = /^\\d{10}$/;\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (studentId) {\r\n        const fetchStudentData = async () => {\r\n          setIsLoading(true);\r\n          try {\r\n            const response = await fetch(`${API_BASE_URL}/student-details/${studentId}`);\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to fetch student data: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            const dates = data.student_date_of_birth ? parse(data.student_date_of_birth, 'dd/MM/yyyy', new Date()) : null;\r\n            setSelectedDate(dates);\r\n            setFormData((prev) => ({\r\n              ...prev,\r\n              ...data,\r\n              student_date_of_birth: dates,\r\n              student_status: data.student_status || \"Pending\",\r\n              student_status_comment: data.student_status_comment || \"\",\r\n              relation_type: data.relation_type || \"\",\r\n              relation_hr_contact: data.relation_hr_contact || \"\",\r\n              relation_branch: data.relation_branch || \"\",\r\n              relation_name: data.relation_name || \"\",\r\n              relation_surname: data.relation_surname || \"\",\r\n              relation_employee_code: data.relation_employee_code || \"\",\r\n              relation_reference: data.relation_reference || \"\",\r\n              employment_status_attachment: null,\r\n              employment_status_attachment_name: data.employment_status_attachment_name || \"\",\r\n            }));\r\n            setEmergencyContactOption(data.student_emergency_contact_name ? \"Add new\" : \"\");\r\n            setEmailError(data.student_email_address && !validateEmail(data.student_email_address) ? \"Please enter a valid email address\" : \"\");\r\n            setWhatsappError(data.student_whatsapp_number && !validateNumber(data.student_whatsapp_number) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n            setAlternativeError(data.student_alternative_number && !validateNumber(data.student_alternative_number) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n            setEmergencyError(data.student_emergency_contact_number && !validateNumber(data.student_emergency_contact_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n            setNameError(data.student_name ? \"\" : \"Student name is required\");\r\n            setSurnameError(data.student_surname ? \"\" : \"Student surname is required\");\r\n          } catch (error) {\r\n            console.error(\"Error fetching student data:\", error);\r\n            setErrorMessage(\"Failed to load student data. Please try again.\");\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        };\r\n        fetchStudentData();\r\n      } else {\r\n        setSelectedDate(null);\r\n        setFormData({\r\n          student_name: '',\r\n          student_surname: '',\r\n          student_nationality: '',\r\n          student_id_passport_number: '',\r\n          student_type: '',\r\n          student_religion: '',\r\n          student_finance_type: '',\r\n          student_whatsapp_number: '',\r\n          student_alternative_number: '',\r\n          student_email_address: '',\r\n          student_highest_education: '',\r\n          student_home_address: '',\r\n          student_suburb: '',\r\n          student_area_code: '',\r\n          student_province: '',\r\n          student_date_of_birth: '',\r\n          student_race: '',\r\n          student_marital_status: '',\r\n          student_employment_status: '',\r\n          student_job_title: '',\r\n          student_company_of_employment: '',\r\n          student_current_salary: '',\r\n          student_number_of_siblings: '',\r\n          student_siblings_bursary: '',\r\n          student_willow_relationship: '',\r\n          relation_type: '',\r\n          relation_hr_contact: '',\r\n          relation_branch: '',\r\n          relation_name: '',\r\n          relation_surname: '',\r\n          relation_employee_code: '',\r\n          relation_reference: '',\r\n          student_emergency_contact_name: '',\r\n          student_emergency_contact_number: '',\r\n          student_emergency_contact_relationship: '',\r\n          student_emergency_contact_address: '',\r\n          student_status: 'Pending',\r\n          student_status_comment: '',\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: '',\r\n        });\r\n        setEmergencyContactOption(\"\");\r\n        setEmailError(\"\");\r\n        setWhatsappError(\"\");\r\n        setAlternativeError(\"\");\r\n        setEmergencyError(\"\");\r\n        setNameError(\"\");\r\n        setSurnameError(\"\");\r\n        setErrorMessage(\"\");\r\n      }\r\n    }\r\n  }, [open, studentId]);\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, student_date_of_birth: formattedDate }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let sanitizedValue = value;\r\n\r\n    if ([\"student_whatsapp_number\", \"student_alternative_number\", \"student_emergency_contact_number\"].includes(name)) {\r\n      sanitizedValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n    }\r\n\r\n    setFormData((prevState) => ({ ...prevState, [name]: sanitizedValue }));\r\n\r\n    if (name === \"student_name\") {\r\n      setNameError(sanitizedValue ? \"\" : \"Student name is required\");\r\n    }\r\n\r\n    if (name === \"student_surname\") {\r\n      setSurnameError(sanitizedValue ? \"\" : \"Student surname is required\");\r\n    }\r\n\r\n    if (name === \"student_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_whatsapp_number\") {\r\n      setWhatsappError(sanitizedValue && !validateNumber(sanitizedValue) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_alternative_number\") {\r\n      setAlternativeError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_emergency_contact_number\") {\r\n      setEmergencyError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_willow_relationship\") {\r\n      if (value === \"No\") {\r\n        setFormData((prevState) => ({\r\n          ...prevState,\r\n          relation_type: \"\",\r\n          relation_hr_contact: \"\",\r\n          relation_branch: \"\",\r\n          relation_name: \"\",\r\n          relation_surname: \"\",\r\n          relation_employee_code: \"\",\r\n          relation_reference: \"\",\r\n        }));\r\n      }\r\n    }\r\n    if (name === \"relation_type\" && formData.student_willow_relationship === \"Yes\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        relation_hr_contact: \"\",\r\n        relation_branch: \"\",\r\n        relation_name: \"\",\r\n        relation_surname: \"\",\r\n        relation_employee_code: \"\",\r\n        relation_reference: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        employment_status_attachment_name: fileNameWithoutExtension,\r\n        employment_status_attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (studentId) {\r\n      window.open(`${API_BASE_URL}/student-details/view-attachment/${studentId}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentClick = () => {\r\n    setDeleteAttachmentConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteAttachmentConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/student-details/delete-attachment/${studentId}`, {\r\n        method: \"PUT\",\r\n      });\r\n      if (response.ok) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: \"\",\r\n        }));\r\n        setDeleteAttachmentConfirmationOpen(false);\r\n      } else {\r\n        setErrorMessage(\"Failed to delete attachment. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting attachment:\", err);\r\n      setErrorMessage(\"Error deleting attachment. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentCancel = () => {\r\n    setDeleteAttachmentConfirmationOpen(false);\r\n  };\r\n\r\n  const handleEmergencyContactChange = (e, newValue) => {\r\n    setEmergencyContactOption(newValue);\r\n    if (newValue === \"Same as above\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: formData.student_name,\r\n        student_emergency_contact_number: formData.student_whatsapp_number,\r\n        student_emergency_contact_relationship: \"Self\",\r\n        student_emergency_contact_address: formData.student_home_address,\r\n      }));\r\n      setEmergencyError(formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    } else {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: \"\",\r\n        student_emergency_contact_number: \"\",\r\n        student_emergency_contact_relationship: \"\",\r\n        student_emergency_contact_address: \"\",\r\n      }));\r\n      setEmergencyError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Validate required fields\r\n    if (!formData.student_name) {\r\n      setNameError(\"Student name is required\");\r\n      return;\r\n    }\r\n    if (!formData.student_surname) {\r\n      setSurnameError(\"Student surname is required\");\r\n      return;\r\n    }\r\n    if (formData.student_email_address && !validateEmail(formData.student_email_address)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n    if (formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number)) {\r\n      setWhatsappError(\"WhatsApp number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n    if (formData.student_alternative_number && !validateNumber(formData.student_alternative_number)) {\r\n      setAlternativeError(\"Alternative number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n    if (formData.student_emergency_contact_number && !validateNumber(formData.student_emergency_contact_number)) {\r\n      setEmergencyError(\"Emergency contact number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n\r\n    const userId = user?.user_id;\r\n    const url = studentId\r\n      ? `${API_BASE_URL}/student-details/update/${studentId}`\r\n      : `${API_BASE_URL}/student-details/insert`;\r\n    const method = studentId ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    Object.keys(formData).forEach((key) => {\r\n      if (key !== \"employment_status_attachment\" && formData[key] !== null && formData[key] !== undefined) {\r\n        body.append(key, formData[key]);\r\n      }\r\n    });\r\n    if (formData.employment_status_attachment) {\r\n      body.append(\"employment_status_attachment\", formData.employment_status_attachment);\r\n    }\r\n    if (!studentId) {\r\n      body.append(\"user_id\", userId);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const savedStudent = await response.json();\r\n        const cleanStudent = {\r\n          ...savedStudent,\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: savedStudent.employment_status_attachment_name || \"\",\r\n        };\r\n        onSave(cleanStudent);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save data:\", response.statusText);\r\n        setErrorMessage(\"Failed to save data. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving student data:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/student-details/delete/${studentId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete student: ${response.statusText}`);\r\n      }\r\n\r\n      onDelete(studentId);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n      setErrorMessage(\"Failed to delete student. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const filteredFinanceType = formData.student_religion === \"Islam\" \r\n    ? financeType \r\n    : financeType.filter(type => type !== \"Zakah\");\r\n\r\n  const renderField = (key, index) => {\r\n    const fieldStyles = {\r\n      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      borderRadius: '8px',\r\n      '& .MuiInputBase-input': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n      '&& .MuiFormLabel-root': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n    };\r\n    const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n    const relationFields = [\r\n      \"relation_type\",\r\n      \"relation_hr_contact\",\r\n      \"relation_branch\",\r\n      \"relation_name\",\r\n      \"relation_surname\",\r\n      \"relation_employee_code\",\r\n      \"relation_reference\",\r\n    ];\r\n\r\n    if (relationFields.includes(key)) {\r\n      if (formData.student_willow_relationship !== \"Yes\") {\r\n        return null;\r\n      }\r\n      if (key === \"relation_type\") {\r\n        return (\r\n          <Grid item xs={12} key={index}>\r\n            <Autocomplete\r\n              value={formData[key] || \"\"}\r\n              onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n              options={relationshipTypes}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Relationship Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n              )}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n      if (!formData.relation_type) {\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Staff\" || formData.relation_type === \"Dependent of Staff\") {\r\n        if ([\"relation_hr_contact\", \"relation_branch\", \"relation_name\", \"relation_surname\", \"relation_employee_code\"].includes(key)) {\r\n          const labels = {\r\n            relation_hr_contact: \"HR Contact\",\r\n            relation_branch: \"Branch\",\r\n            relation_name: \"Name\",\r\n            relation_surname: \"Surname\",\r\n            relation_employee_code: \"Employee Code\",\r\n          };\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label={labels[key]}\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Family\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Who are you related to\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"How are you related\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Director/Board Member or stakeholder\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Referral\") {\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Reference Relation\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const employmentFields = [\"student_job_title\", \"student_company_of_employment\", \"student_current_salary\"];\r\n    if (employmentFields.includes(key)) {\r\n      const validEmploymentStatuses = [\"Full Time Employed\", \"Part-Time Employed\", \"Self Employed\"];\r\n      if (!validEmploymentStatuses.includes(formData.student_employment_status)) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (key === \"student_date_of_birth\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              wrapperClassName={\"datepicker\"}\r\n              className={\"datepicker\"}\r\n              label=\"Student Date of Birth\"\r\n              name=\"student_date_of_birth\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              format=\"MM/dd/yyyy\"\r\n              sx={fieldStyles}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          </LocalizationProvider>\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_number_of_siblings\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Number of Siblings\"\r\n            name=\"student_number_of_siblings\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={formData.student_number_of_siblings || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_siblings_bursary\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={yes_no}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Have any of your siblings received or are receiving assistance from this bursary fund?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_id_passport_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student ID/Passport Number\"\r\n            name=\"student_id_passport_number\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={formData.student_id_passport_number || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_email_address\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Email Address\"\r\n            name=\"student_email_address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={formData.student_email_address || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emailError}\r\n            helperText={emailError}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_whatsapp_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student WhatsApp Number\"\r\n            name=\"student_whatsapp_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_whatsapp_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!whatsappError}\r\n            helperText={whatsappError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_alternative_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Alternative Number\"\r\n            name=\"student_alternative_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_alternative_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!alternativeError}\r\n            helperText={alternativeError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_name\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Name\"\r\n            name=\"student_name\"\r\n            fullWidth\r\n            required\r\n            value={formData.student_name || \"\"}\r\n            onChange={handleChange}\r\n            error={!!nameError}\r\n            helperText={nameError}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_surname\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Surname\"\r\n            name=\"student_surname\"\r\n            fullWidth\r\n            required\r\n            value={formData.student_surname || \"\"}\r\n            onChange={handleChange}\r\n            error={!!surnameError}\r\n            helperText={surnameError}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_name\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={emergencyContactOption}\r\n            onChange={handleEmergencyContactChange}\r\n            options={[\"Same as above\", \"Add new\"]}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Emergency Contact\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          {emergencyContactOption === \"Add new\" && (\r\n            <TextField\r\n              label=\"Student Emergency Contact Name\"\r\n              name=\"student_emergency_contact_name\"\r\n              fullWidth\r\n              value={formData.student_emergency_contact_name || \"\"}\r\n              onChange={handleChange}\r\n              sx={{ ...fieldStyles, marginTop: 2 }}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_number\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Number\"\r\n            name=\"student_emergency_contact_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emergencyError}\r\n            helperText={emergencyError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_relationship\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Relationship\"\r\n            name=\"student_emergency_contact_relationship\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_relationship || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_address\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Address\"\r\n            name=\"student_emergency_contact_address\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_address || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"Pending\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={statusOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status_comment\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Status Comment\"\r\n            name=\"student_status_comment\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={formData.student_status_comment || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_willow_relationship\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={yes_no}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Does the student have any relationship to the Willowton Group?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_nationality\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={nationality}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Nationality\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_province\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={provinces}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Province\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={studentType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_religion\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={religions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Religion\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_finance_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={filteredFinanceType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Finance Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_race\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={races}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Race\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_marital_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={maritalStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Marital Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_employment_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={employmentStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Employment Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          <TextField\r\n            label=\"Employment Status Attachment Name\"\r\n            name=\"employment_status_attachment_name\"\r\n            fullWidth\r\n            disabled\r\n            value={formData.employment_status_attachment_name || \"\"}\r\n            sx={{\r\n              ...fieldStyles,\r\n              marginTop: 2,\r\n              '& .MuiInputBase-input.Mui-disabled': {\r\n                WebkitTextFillColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              },\r\n            }}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"label\"\r\n            sx={{ ...fieldStyles, width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n          >\r\n            Upload Employment Status Attachment\r\n            <input type=\"file\" hidden onChange={handleFileChange} />\r\n          </Button>\r\n          {formData.employment_status_attachment_name && studentId && (\r\n            <>\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={handleViewFile}\r\n                startIcon={<VisibilityIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              >\r\n                View/Download Attachment\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                onClick={handleDeleteAttachmentClick}\r\n                startIcon={<DeleteIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n              >\r\n                Delete Attachment\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_highest_education\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Highest Education\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_date_stamp\" || key === \"id\" || key === \"user_id\" || key === \"student_industry\" || key === \"employment_status_attachment\" || key === \"employment_status_attachment_name\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \").toLowerCase().split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          label={label}\r\n          name={key}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        <Box sx={{ padding: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Student Details\r\n          </Typography>\r\n          {errorMessage && (\r\n            <Typography variant=\"body2\" color=\"error.main\" sx={{ mt: 1 }}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", padding: 2 }}>\r\n          {isLoading ? (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\" }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ padding: 2, borderTop: \"1px solid #ccc\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              startIcon={<CloseIcon />}\r\n              disabled={isLoading}\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            {studentId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n                startIcon={<DeleteIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            {!studentId ? (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Create\"}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<SaveIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Save\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Dialog\r\n          open={deleteConfirmationOpen}\r\n          onClose={handleDeleteCancel}\r\n        >\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={deleteAttachmentConfirmationOpen}\r\n          onClose={handleDeleteAttachmentCancel}\r\n        >\r\n          <DialogTitle>Confirm Attachment Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete the employment status attachment?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteAttachmentCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteAttachmentConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default StudentDetailDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AboutusDrawer = ({ open, onClose, studentId, aboutMeId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Custom questions\r\n  const questions = [\r\n    \"What inspired you to pursue your chosen field of study?*\",\r\n    \"How do you plan to use your education and skills to make a significant impact in this field?*\",\r\n    \"What special projects or initiatives have you undertaken in your academic life?*\",\r\n    \"Can you tell me about any academic awards or scholarships you have received?*\",\r\n    \"Provide examples or specific skills you have developed that demonstrates your commitment.*\",\r\n    \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?*\",\r\n    \"Once you have completed your studies, how will others benefit from it?*\",\r\n    \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?*\",\r\n    \"Have you previously been awarded a bursary?*\",\r\n    \"What do you think has been your most notable contribution to society thus far?*\",\r\n    \"Why do you think serving the community is important?*\",\r\n    \"Will you be doing any volunteer work during your studies?*\",\r\n    \"Are you willing to assist someone in need?*\",\r\n    \"Describe yourself in three words.*\",\r\n    \"What is your greatest strength?*\",\r\n    \"Describe your biggest mistake and what steps you have taken to rectify it.*\",\r\n    \"What personal achievement makes you proud?*\",\r\n    \"Are you self-motivated? Explain*\",\r\n    \"1st choice of study.*\",\r\n    \"2nd choice of study*\",\r\n    \"3rd choice of study.*\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (aboutMeId) {\r\n        // Editing mode\r\n        fetch(`${API_BASE_URL}/about-me/id/${aboutMeId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        // Creating new entry\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n        };\r\n        for (let i = 1; i <= 21; i++) {\r\n          initialData[`about_me_q${i.toString().padStart(2, \"0\")}`] = \"\";\r\n        }\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      // Cleanup when drawer closes\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, aboutMeId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/about-me/update/${formData.id}`\r\n      : `${API_BASE_URL}/about-me/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const dataToSend = { ...formData };\r\n    if (!isUpdate) delete dataToSend.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save About Me data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving About Me data:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open the dialog\r\n  };\r\n\r\n  // Handle the confirmation delete\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/about-me/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n      } else {\r\n        console.error(\"Failed to delete About Me entry\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting About Me entry:\", err);\r\n    }\r\n  };\r\n\r\n  // Handle cancel delete\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          width: drawerWidth,\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            About Me\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, i) => {\r\n              const qNum = (i + 1).toString().padStart(2, \"0\");\r\n              const key = `about_me_q${qNum}`;\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={key}\r\n                    fullWidth\r\n                    multiline\r\n                    value={formData[key] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff', // Dark/Light background\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n                      borderRadius: '8px', // Apply border-radius\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Input text color\r\n                      },\r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: '8px', // Apply border-radius to root element\r\n                      },\r\n                      '& .MuiFormLabel-root': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Label color\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }} // Label color for dark/light mode\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            borderTop: \"1px solid #ccc\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Border color for dark/light mode\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Red border color for delete button\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this entry?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AboutusDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\nimport { parentRelationship, employmentStatus, highestEducation } from \"../../components/lov\"; // Import LOVs\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ParentsDrawer = ({ open, onClose, studentId, parentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\"); // State for email validation error\r\n  const [cellNumberError, setCellNumberError] = useState(\"\"); // State for cell number validation error\r\n\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Email validation function\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Cell number validation function\r\n  const validateCellNumber = (number) => {\r\n    const cellRegex = /^\\d{10}$/;\r\n    return cellRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (parentId) {\r\n        fetch(`${API_BASE_URL}/parents-details/id/${parentId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n            // Validate email and cell number on load\r\n            if (data.parent_email_address) {\r\n              setEmailError(validateEmail(data.parent_email_address) ? \"\" : \"Please enter a valid email address\");\r\n            } else {\r\n              setEmailError(\"\");\r\n            }\r\n            if (data.parent_cell_number) {\r\n              setCellNumberError(validateCellNumber(data.parent_cell_number) ? \"\" : \"Cell number must be exactly 10 digits\");\r\n            } else {\r\n              setCellNumberError(\"\");\r\n            }\r\n          });\r\n      } else {\r\n        setFormData({\r\n          student_details_portal_id: studentId,\r\n          parent_relationship: \"\",\r\n          parent_name: \"\",\r\n          parent_surname: \"\",\r\n          parent_cell_number: \"\",\r\n          parent_email_address: \"\",\r\n          parent_employment_status: \"\",\r\n          parent_industry: \"\",\r\n          parent_highest_education: \"\",\r\n          parent_salary: \"\",\r\n          parent_grant: \"\",\r\n          parent_other_income: \"\",\r\n        });\r\n        setEmailError(\"\");\r\n        setCellNumberError(\"\");\r\n      }\r\n    } else {\r\n      setFormData({});\r\n      setEmailError(\"\");\r\n      setCellNumberError(\"\");\r\n    }\r\n  }, [open, parentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // Validate email on change\r\n    if (name === \"parent_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    // Validate cell number on change\r\n    if (name === \"parent_cell_number\") {\r\n      // Allow only digits and limit to 10\r\n      const numericValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n      setFormData((prev) => ({ ...prev, [name]: numericValue }));\r\n      setCellNumberError(numericValue && !validateCellNumber(numericValue) ? \"Cell number must be exactly 10 digits\" : \"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Prevent save if email or cell number is invalid\r\n    if (formData.parent_email_address && !validateEmail(formData.parent_email_address)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n    if (formData.parent_cell_number && !validateCellNumber(formData.parent_cell_number)) {\r\n      setCellNumberError(\"Cell number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/parents-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/parents-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setsuccessmessage(isUpdate ? \"Parent details updated successfully!\" : \"Parent details created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save parent data\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!formData.id) return;\r\n    setDeleteConfirmationOpen(false);\r\n    const res = await fetch(`${API_BASE_URL}/parents-details/delete/${formData.id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (res.ok) {\r\n      onSave(null);\r\n      // setsuccessmessage(\"Parent details deleted successfully!\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Parent Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.entries(formData).map(([key, value]) => {\r\n              if (key === \"id\" || key === \"student_details_portal_id\" || key === \"parent_date_stamp\") return null;\r\n\r\n              let label = key.replace(/_/g, \" \");\r\n              label = label\r\n                .split(\" \")\r\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                .join(\" \");\r\n\r\n              if (key === \"parent_relationship\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={parentRelationship}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_employment_status\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={employmentStatus}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_highest_education\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={highestEducation}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_email_address\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"email\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!emailError}\r\n                      helperText={emailError}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_cell_number\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"tel\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!cellNumberError}\r\n                      helperText={cellNumberError}\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                        pattern: \"[0-9]*\",\r\n                      }}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    name={key}\r\n                    label={label}\r\n                    fullWidth\r\n                    value={value || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={() => setDeleteConfirmationOpen(true)}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={() => setDeleteConfirmationOpen(false)}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDeleteConfirmationOpen(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ParentsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { semesters, highestEducation } from \"../../components/lov\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst UniversityDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  universityDetailsId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (universityDetailsId) {\r\n        fetch(`${API_BASE_URL}/university-details/id/${universityDetailsId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            const normalizedData = {\r\n              ...data,\r\n            };\r\n            setFormData(normalizedData);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          Institution_name: \"\",\r\n          name_of_Course: \"\",\r\n          intake_year: \"\",\r\n          Semester: \"\",\r\n          NQF_Level: \"\",\r\n          Current_Year: \"\",\r\n          Student_Number: \"\",\r\n          previously_funded: \"\",\r\n          previously_funded_amount: \"\",\r\n          tuition: \"\",\r\n          tuition_amount: \"\",\r\n          accommodation: \"\",\r\n          accommodation_fee: \"\",\r\n          textbooks: \"\",\r\n          textbooks_fee: \"\",\r\n          travel: \"\",\r\n          travel_fee: \"\",\r\n          total_university_expense: \"\",\r\n          previous_bursary_org_1: \"\",\r\n          previous_bursary_org_1_name: \"\",\r\n          previous_bursary_org_1_amount: \"\",\r\n          previous_bursary_org_1_contact: \"\",\r\n          previous_bursary_org_2: \"\",\r\n          previous_bursary_org_2_name: \"\",\r\n          previous_bursary_org_2_amount: \"\",\r\n          previous_bursary_org_2_contact: \"\",\r\n          previous_bursary_org_3: \"\",\r\n          previous_bursary_org_3_name: \"\",\r\n          previous_bursary_org_3_amount: \"\",\r\n          previous_bursary_org_3_contact: \"\",\r\n          Application_Process_Status: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, universityDetailsId]);\r\n\r\n  // Calculate total university expense whenever relevant fields change\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => {\r\n      const newFormData = { ...prev, [name]: value };\r\n      const conditionalField = conditionalFields.find(field => field.select === name);\r\n      if (conditionalField && value === \"No\") {\r\n        newFormData[conditionalField.amount] = \"\";\r\n      }\r\n\r\n      // Handle Previous Bursary Org fields\r\n      const bursaryFields = bursaryConditionalFields.find(field => field.select === name);\r\n      if (bursaryFields && value !== \"Yes\") {\r\n        newFormData[bursaryFields.name] = \"\";\r\n        newFormData[bursaryFields.amount] = \"\";\r\n        newFormData[bursaryFields.contact] = \"\";\r\n      }\r\n\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/university-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/university-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = {\r\n      ...formData,\r\n    };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save University Details\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/university-details/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete University Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting University Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const yesNoOptions = [\"Yes\", \"No\"];\r\n  const intakeYearOptions = [\"2025\", \"2026\"];\r\n\r\n  const conditionalFields = [\r\n    { select: \"previously_funded\", amount: \"previously_funded_amount\" },\r\n    { select: \"tuition\", amount: \"tuition_amount\" },\r\n    { select: \"accommodation\", amount: \"accommodation_fee\" },\r\n    { select: \"textbooks\", amount: \"textbooks_fee\" },\r\n    { select: \"travel\", amount: \"travel_fee\" },\r\n  ];\r\n\r\n  const bursaryConditionalFields = [\r\n    {\r\n      select: \"previous_bursary_org_1\",\r\n      name: \"previous_bursary_org_1_name\",\r\n      amount: \"previous_bursary_org_1_amount\",\r\n      contact: \"previous_bursary_org_1_contact\"\r\n    },\r\n    {\r\n      select: \"previous_bursary_org_2\",\r\n      name: \"previous_bursary_org_2_name\",\r\n      amount: \"previous_bursary_org_2_amount\",\r\n      contact: \"previous_bursary_org_2_contact\"\r\n    },\r\n    {\r\n      select: \"previous_bursary_org_3\",\r\n      name: \"previous_bursary_org_3_name\",\r\n      amount: \"previous_bursary_org_3_amount\",\r\n      contact: \"previous_bursary_org_3_contact\"\r\n    }\r\n  ];\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const renderField = (key, index) => {\r\n    if (\r\n      key === \"id\" ||\r\n      key === \"student_details_portal_id\" ||\r\n      key === \"university_details_date_stamp\"\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    const isConditionalSelect = conditionalFields.some(field => field.select === key);\r\n    const isConditionalamount = conditionalFields.some(field => field.amount === key);\r\n    const isBursarySelect = bursaryConditionalFields.some(field => field.select === key);\r\n    const isBursaryField = bursaryConditionalFields.some(field =>\r\n      field.name === key || field.amount === key || field.contact === key\r\n    );\r\n\r\n    if (isConditionalSelect) {\r\n      let customLabel = label;\r\n      if (key === \"tuition\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your tuition fees?\";\r\n      } else if (key === \"accommodation\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your accommodation fees?\";\r\n      } else if (key === \"textbooks\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your textbooks fees?\";\r\n      } else if (key === \"travel\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your travel fees?\";\r\n      } else if (key === \"previously_funded\") {\r\n        customLabel = \"Were you previously Funded by the Willowton SANZAF Bursary Fund?\";\r\n      }\r\n\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={yesNoOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={customLabel} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (isBursarySelect) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={yesNoOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Were you funded by an organization previously?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (isBursaryField) {\r\n      const relatedBursary = bursaryConditionalFields.find(field =>\r\n        field.name === key || field.amount === key || field.contact === key\r\n      );\r\n      if (formData[relatedBursary.select] !== \"Yes\") return null;\r\n    }\r\n\r\n    if (isConditionalamount) {\r\n      const relatedSelect = conditionalFields.find(field => field.amount === key).select;\r\n      if (formData[relatedSelect] !== \"Yes\") return null;\r\n    }\r\n\r\n    if (key === \"Semester\" || key === \"semester\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={semesters}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"NQF_Level\" || key === \"nqf_level\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"Intake_Year\" || key === \"intake_year\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={intakeYearOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"My request for funding is for year\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"total_university_expense\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            name={key}\r\n            label={label}\r\n            fullWidth\r\n            value={formData[key] || \"\"}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n            InputProps={{ readOnly: true }}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            University Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default UniversityDetailsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AttachmentsDrawer = ({ open, onClose, studentId, attachmentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!attachmentId) {\r\n      setFormData({\r\n        Attachments_Name: \"\",\r\n        Attachments_Description: \"\",\r\n        Attachment: null,\r\n        Student_Details_Portal_id: studentId,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Editing mode\r\n    fetch(`${API_BASE_URL}/attachments/id/${attachmentId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setFormData({\r\n          Attachments_Name: data.attachments_name || \"\",\r\n          Attachments_Description: data.attachments_description || \"\",\r\n          Attachment: null, // Don't preload binary data\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId,\r\n        });\r\n      });\r\n  }, [open, attachmentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        Attachments_Name: fileNameWithoutExtension,\r\n        Attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/attachments/update/${formData.id}`\r\n      : `${API_BASE_URL}/attachments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Attachments_Name\", formData.Attachments_Name);\r\n    body.append(\"Attachments_Description\", formData.Attachments_Description);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Attachment) {\r\n      body.append(\"Attachment\", formData.Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setSuccessMessage(isUpdate ? \"Updated successfully!\" : \"Created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save attachment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/attachments/delete/${formData.id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage(\"Deleted successfully!\");\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete attachment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/attachments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Attachment Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n               <TextField\r\n                label=\"Description\"\r\n                name=\"Attachments_Description\"\r\n                fullWidth\r\n                value={formData.Attachments_Description || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Attachments_Name\"\r\n                fullWidth\r\n                disabled\r\n                value={formData.Attachments_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\", borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                color=\"error\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AttachmentsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ExpenseDetailsDrawer = ({ open, onClose, studentId, expenseDetailsId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Father_Monthly_Salary: '',\r\n    Mother_Monthly_Salary: '',\r\n    Spouse_Monthly_Salary: '',\r\n    Applicant_Monthly_Salary: '',\r\n    Rent_Income: '',\r\n    Grants: '',\r\n    Other_Income: '',\r\n    Rent_Bond_Expense: '',\r\n    Rates_Expense: '',\r\n    Utilities_Expense: '',\r\n    Groceries_Expense: '',\r\n    Transport_Petrol_Expense: '',\r\n    Telephone_Expense: '',\r\n    Medical_Aid_Expense: '',\r\n    Insurance_Expense: '',\r\n    Other_Expense: '',\r\n    total_income: 0,\r\n    total_expenses: 0,\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && expenseDetailsId) {\r\n      fetch(`${API_BASE_URL}/expense-details/id/${expenseDetailsId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Father_Monthly_Salary: data.father_monthly_salary || '',\r\n              Mother_Monthly_Salary: data.mother_monthly_salary || '',\r\n              Spouse_Monthly_Salary: data.spouse_monthly_salary || '',\r\n              Applicant_Monthly_Salary: data.applicant_monthly_salary || '',\r\n              Rent_Income: data.rent_income || '',\r\n              Grants: data.grants || '',\r\n              Other_Income: data.other_income || '',\r\n              Rent_Bond_Expense: data.rent_bond_expense || '',\r\n              Rates_Expense: data.rates_expense || '',\r\n              Utilities_Expense: data.utilities_expense || '',\r\n              Groceries_Expense: data.groceries_expense || '',\r\n              Transport_Petrol_Expense: data.transport_petrol_expense || '',\r\n              Telephone_Expense: data.telephone_expense || '',\r\n              Medical_Aid_Expense: data.medical_aid_expense || '',\r\n              Insurance_Expense: data.insurance_expense || '',\r\n              Other_Expense: data.other_expense || '',\r\n              total_income: Number(data.total_income) || 0,\r\n              total_expenses: Number(data.total_expenses) || 0,\r\n            });\r\n          }\r\n        })\r\n        .catch(error => console.error('Error fetching expense details:', error));\r\n    } else {\r\n      setFormData({\r\n        Father_Monthly_Salary: '',\r\n        Mother_Monthly_Salary: '',\r\n        Spouse_Monthly_Salary: '',\r\n        Applicant_Monthly_Salary: '',\r\n        Rent_Income: '',\r\n        Grants: '',\r\n        Other_Income: '',\r\n        Rent_Bond_Expense: '',\r\n        Rates_Expense: '',\r\n        Utilities_Expense: '',\r\n        Groceries_Expense: '',\r\n        Transport_Petrol_Expense: '',\r\n        Telephone_Expense: '',\r\n        Medical_Aid_Expense: '',\r\n        Insurance_Expense: '',\r\n        Other_Expense: '',\r\n        total_income: 0,\r\n        total_expenses: 0,\r\n      });\r\n    }\r\n  }, [open, expenseDetailsId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Update form data\r\n    setFormData(prev => {\r\n      const newFormData = { ...prev, [name]: value };\r\n\r\n      // Recalculate total income and total expenses\r\n      const incomeFields = [\r\n        'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',\r\n        'Applicant_Monthly_Salary', 'Rent_Income', 'Grants', 'Other_Income'\r\n      ];\r\n      const expenseFields = [\r\n        'Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense',\r\n        'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'\r\n      ];\r\n\r\n      const totalIncome = incomeFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n      const totalExpenses = expenseFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n\r\n      newFormData.total_income = totalIncome;\r\n      newFormData.total_expenses = totalExpenses;\r\n\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Calculate total income and total expenses if not already set\r\n    const totalIncome = Object.keys(formData)\r\n      .filter(key => key.includes(\"Salary\") || key.includes(\"Income\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const totalExpenses = Object.keys(formData)\r\n      .filter(key => key.includes(\"Expense\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const updatedFormData = {\r\n      ...formData,\r\n      total_income: totalIncome.toString(),\r\n      total_expenses: totalExpenses.toString()\r\n    };\r\n\r\n    const stringFormData = Object.keys(updatedFormData).reduce((acc, key) => {\r\n      const value = updatedFormData[key];\r\n      acc[key] = value !== '' ? value.toString() : value;  // Convert to string\r\n      return acc;\r\n    }, {});\r\n\r\n    const url = expenseDetailsId\r\n      ? `${API_BASE_URL}/expense-details/update/${expenseDetailsId}`\r\n      : `${API_BASE_URL}/expense-details/insert`;\r\n\r\n    const method = expenseDetailsId ? 'PUT' : 'POST';\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...stringFormData, student_details_portal_id: studentId }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        onClose();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving expense details:', error);\r\n      });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!expenseDetailsId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/expense-details/delete/${expenseDetailsId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error('Error deleting expense details:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Financial Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {/* Income Fields */}\r\n            {['Applicant_Monthly_Salary', 'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',  'Rent_Income', 'Grants', 'Other_Income'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Expense Fields */}\r\n            {['Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense', 'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Read-only Total Income and Total Expenses Fields */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Income\"\r\n                value={formData.total_income.toFixed(2)} // Display total income\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Income field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Expenses\"\r\n                value={formData.total_expenses.toFixed(2)} // Display total expenses\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Expenses field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {expenseDetailsId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={expenseDetailsId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {expenseDetailsId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ExpenseDetailsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AssetsLiabilitiesDrawer = ({ open, onClose, studentId, assetLiabilityId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Gold_Silver: '',\r\n    Cash_in_Bank: '',\r\n    Investments: '',\r\n    Liabilities: ''\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (open && assetLiabilityId) {\r\n      fetch(`${API_BASE_URL}/assets-liabilities/id/${assetLiabilityId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Gold_Silver: data.gold_silver || '',\r\n              Cash_in_Bank: data.cash_in_bank || '',\r\n              Investments: data.investments || '',\r\n              Liabilities: data.liabilities || ''\r\n            });\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      setFormData({\r\n        Gold_Silver: '',\r\n        Cash_in_Bank: '',\r\n        Investments: '',\r\n        Liabilities: ''\r\n      });\r\n    }\r\n  }, [open, assetLiabilityId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const url = assetLiabilityId\r\n      ? `${API_BASE_URL}/assets-liabilities/update/${assetLiabilityId}`\r\n      : `${API_BASE_URL}/assets-liabilities/insert`;\r\n    const method = assetLiabilityId ? \"PUT\" : \"POST\";\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...formData, student_details_portal_id: studentId })\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        // setSuccessMessage(assetLiabilityId ? 'Updated successfully!' : 'Created successfully!');\r\n        onClose();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!assetLiabilityId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/assets-liabilities/delete/${assetLiabilityId}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage('Deleted successfully!');\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Error deleting asset/liability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Assets & Liabilities\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, idx) => {\r\n              const label = key\r\n                .replace(/_/g, ' ')  // Replace underscores with spaces\r\n                .replace(/\\b\\w/g, char => char.toUpperCase()); // Capitalize the first letter of each word\r\n\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    type=\"number\" // Allow numbers only (including decimals)\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      inputMode: 'decimal', // Enable decimal input mode for numbers\r\n                    }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {assetLiabilityId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={assetLiabilityId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {assetLiabilityId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AssetsLiabilitiesDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AcademicResultsDrawer = ({ open, onClose, studentId, resultId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!resultId) {\r\n      setFormData({\r\n        Results_Module: \"\",\r\n        Results_Percentage: \"\",\r\n        Results_Attachment: null,\r\n        Results_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch(`${API_BASE_URL}/academic-results/id/${resultId}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setFormData({\r\n          Results_Module: data.results_module || \"\",\r\n          Results_Percentage: data.results_percentage || \"\",\r\n          Results_Attachment: null,\r\n          Results_Attachment_Name: data.results_attachment_name || \"\",\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n        });\r\n      });\r\n  }, [open, resultId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Results_Attachment: file,\r\n        Results_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/academic-results/update/${formData.id}`\r\n      : `${API_BASE_URL}/academic-results/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Results_Module\", formData.Results_Module);\r\n    body.append(\"Results_Percentage\", formData.Results_Percentage);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Results_Attachment) {\r\n      body.append(\"Results_Attachment\", formData.Results_Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save academic result\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/academic-results/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete academic result\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/academic-results/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Academic Result Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Module Name\"\r\n                name=\"Results_Module\"\r\n                fullWidth\r\n                value={formData.Results_Module || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Percentage\"\r\n                name=\"Results_Percentage\"\r\n                fullWidth\r\n                value={formData.Results_Percentage || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Results_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Results_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\" }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Results_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AcademicResultsDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst VoluntaryServiceDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Organisation: \"\",\r\n        Contact_Person: \"\",\r\n        Contact_Person_Number: \"\",\r\n        Hours_Contributed: \"\",\r\n        Proof_of_Service: null,\r\n        Service_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/voluntary-service/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Organisation: data.organisation || \"\",\r\n            Contact_Person: data.contact_person || \"\",\r\n            Contact_Person_Number: data.contact_person_number || \"\",\r\n            Hours_Contributed: data.hours_contributed || \"\",\r\n            Proof_of_Service: null,\r\n            Service_Attachment_Name: data.service_attachment_name || \"\",\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Service: file,\r\n        Service_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/voluntary-service/update/${formData.id}`\r\n      : `${API_BASE_URL}/voluntary-service/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n  \r\n    const body = new FormData();\r\n    body.append(\"Organisation\", formData.Organisation);\r\n    body.append(\"Contact_Person\", formData.Contact_Person);\r\n    body.append(\"Contact_Person_Number\", formData.Contact_Person_Number);\r\n    body.append(\"Hours_Contributed\", formData.Hours_Contributed);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    \r\n    // If a new file is selected, append it\r\n    if (formData.Proof_of_Service) {\r\n      body.append(\"Proof_of_Service\", formData.Proof_of_Service);\r\n    }\r\n  \r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save voluntary service\");\r\n    }\r\n  };  \r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/voluntary-service/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete voluntary service\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/voluntary-service/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Voluntary Service\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Organisation\"\r\n                name=\"Organisation\"\r\n                fullWidth\r\n                value={formData.Organisation || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Contact Person\"\r\n                name=\"Contact_Person\"\r\n                fullWidth\r\n                value={formData.Contact_Person || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                label=\"Contact Number\"\r\n                name=\"Contact_Person_Number\"\r\n                fullWidth\r\n                value={formData.Contact_Person_Number || \"\"}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  type: 'tel', // Allows for easier entry of phone numbers\r\n                  maxLength: 10, // Restrict input to 10 digits\r\n                  pattern: \"[0-9]{10}\", // Only allow numbers, exactly 10 digits\r\n                }}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Hours Contributed\"\r\n                name=\"Hours_Contributed\"\r\n                fullWidth\r\n                value={formData.Hours_Contributed || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Service_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Service_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Service_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default VoluntaryServiceDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { format, parse } from 'date-fns';\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst PaymentDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Payments_Expense_Type: \"\",\r\n        Payments_Vendor: \"\",\r\n        Payments_Expense_Amount: \"\",\r\n        Payments_Date: \"\",\r\n        Payments_ET_Number: \"\",\r\n        Payments_Attachment_Name: \"\",\r\n        Proof_of_Payment: null,\r\n        Payment_Created_By: createdBy,\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      setSelectedDate(null);\r\n    } else {\r\n      fetch(`${API_BASE_URL}/payments/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const date = data.payments_date ? parse(data.payments_date, 'MM/dd/yyyy', new Date()) : null;\r\n          setSelectedDate(date);\r\n          setFormData({\r\n            Payments_Expense_Type: data.payments_expense_type || \"\",\r\n            Payments_Vendor: data.payments_vendor || \"\",\r\n            Payments_Expense_Amount: data.payments_expense_amount || \"\",\r\n            Payments_Date: data.payments_date || \"\",\r\n            Payments_ET_Number: data.payments_et_number || \"\",\r\n            Payments_Attachment_Name: data.payments_attachment_name || \"\",\r\n            Proof_of_Payment: null,\r\n            Payment_Created_By: data.payment_created_by || createdBy,\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Payment: file,\r\n        Payments_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/payments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/payments/update/${formData.id}`\r\n      : `${API_BASE_URL}/payments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Payments_Expense_Type\", formData.Payments_Expense_Type);\r\n    body.append(\"Payments_Vendor\", formData.Payments_Vendor);\r\n    body.append(\"Payments_Expense_Amount\", formData.Payments_Expense_Amount);\r\n    body.append(\"Payments_Date\", formData.Payments_Date);\r\n    body.append(\"Payments_ET_Number\", formData.Payments_ET_Number);\r\n    body.append(\"Payments_Attachment_Name\", formData.Payments_Attachment_Name);\r\n    body.append(\"Payment_Created_By\", formData.Payment_Created_By);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Proof_of_Payment) {\r\n      body.append(\"Proof_of_Payment\", formData.Proof_of_Payment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save payment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/payments/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (err) {\r\n      console.error(\"Failed to delete payment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, Payments_Date: formattedDate }));\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Payment Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Expense Type\"\r\n                name=\"Payments_Expense_Type\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Type || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Vendor\"\r\n                name=\"Payments_Vendor\"\r\n                fullWidth\r\n                value={formData.Payments_Vendor || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Amount\"\r\n                name=\"Payments_Expense_Amount\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Amount || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {/* Date Picker Field */}\r\n            <Grid item xs={12}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  wrapperClassName={\"datepicker\"}\r\n                  className={\"datepicker\"}\r\n                  label=\"Payments Date\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  format=\"MM/dd/yyyy\"\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"ET Number\"\r\n                name=\"Payments_ET_Number\"\r\n                fullWidth\r\n                value={formData.Payments_ET_Number || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Payments_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Payments_Attachment_Name || \"\"}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Payments_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Confirmation Dialog for Deletion */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PaymentDrawer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst InterviewDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Get the first name and last name from localStorage (assuming the user object is stored there)\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // const createdBy = user.first_name + ' ' + user.last_name; // Concatenate first name and last name\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  const questions = [\r\n    \"Briefly describe the applicant's family & social financial conditions?\",\r\n    \"Employment Status Score\",\r\n    \"Year of Study\",\r\n    \"Degree/Diploma Name\",\r\n    \"Number of Years to Qualify\",\r\n    \"Reason for Choosing the Course\",\r\n    \"Field of Study Score\",\r\n    \"APS Score (Matric) or University Average\",\r\n    \"Number of Failed Modules\",\r\n    \"Academic Results Score\",\r\n    \"Have you worked on any special projects or initiatives?\",\r\n    \"What extracurricular activities have you participated in?\",\r\n    \"How do you plan to contribute to your community post-graduation?\",\r\n    \"How would you inspire others to make an impact?\",\r\n    \"Community Work Involvement Score\",\r\n    \"How will you use your education and skills to make an impact?\",\r\n    \"Can you share academic awards or scholarships received?\",\r\n    \"Describe a role model and why they inspire you?\",\r\n    \"Why do you believe you deserve this bursary?\",\r\n    \"If not awarded this bursary, what are your plans?\",\r\n    \"Motivation Score\",\r\n    \"Total Score\",\r\n    \"Comments Section\",\r\n    \"Overall Impression\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Interviewer_Name: '',\r\n        Year_of_Interview: '',\r\n        Interview_Q01: '',\r\n        Interview_Q02: '',\r\n        Interview_Q03: '',\r\n        Interview_Q04: '',\r\n        Interview_Q05: '',\r\n        Interview_Q06: '',\r\n        Interview_Q07: '',\r\n        Interview_Q08: '',\r\n        Interview_Q09: '',\r\n        Interview_Q10: '',\r\n        Interview_Q11: '',\r\n        Interview_Q12: '',\r\n        Interview_Q13: '',\r\n        Interview_Q14: '',\r\n        Interview_Q15: '',\r\n        Interview_Q16: '',\r\n        Interview_Q17: '',\r\n        Interview_Q18: '',\r\n        Interview_Q19: '',\r\n        Interview_Q20: '',\r\n        Interview_Q21: '',\r\n        Interview_Q22: '',\r\n        Interview_Q23: '',\r\n        Interview_Q24: '',\r\n        Interview_Created_By: createdBy,  // Set created_by field to first and last name of logged-in user\r\n        Date_Stamp: '',\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/interviews/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Interviewer_Name: data.interviewer_name || '',\r\n            Year_of_Interview: data.year_of_interview || '',\r\n            Interview_Q01: data.interview_q01 || '',\r\n            Interview_Q02: data.interview_q02 || '',\r\n            Interview_Q03: data.interview_q03 || '',\r\n            Interview_Q04: data.interview_q04 || '',\r\n            Interview_Q05: data.interview_q05 || '',\r\n            Interview_Q06: data.interview_q06 || '',\r\n            Interview_Q07: data.interview_q07 || '',\r\n            Interview_Q08: data.interview_q08 || '',\r\n            Interview_Q09: data.interview_q09 || '',\r\n            Interview_Q10: data.interview_q10 || '',\r\n            Interview_Q11: data.interview_q11 || '',\r\n            Interview_Q12: data.interview_q12 || '',\r\n            Interview_Q13: data.interview_q13 || '',\r\n            Interview_Q14: data.interview_q14 || '',\r\n            Interview_Q15: data.interview_q15 || '',\r\n            Interview_Q16: data.interview_q16 || '',\r\n            Interview_Q17: data.interview_q17 || '',\r\n            Interview_Q18: data.interview_q18 || '',\r\n            Interview_Q19: data.interview_q19 || '',\r\n            Interview_Q20: data.interview_q20 || '',\r\n            Interview_Q21: data.interview_q21 || '',\r\n            Interview_Q22: data.interview_q22 || '',\r\n            Interview_Q23: data.interview_q23 || '',\r\n            Interview_Q24: data.interview_q24 || '',\r\n            Interview_Created_By: data.interview_created_by || createdBy,  // Ensure `created_by` is set\r\n            Date_Stamp: data.date_stamp || '',\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/interviews/update/${formData.id}`\r\n      : `${API_BASE_URL}/interviews/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData)\r\n    });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save interview\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/interviews/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete interview\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Interview Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Interviewer Name\"\r\n                name=\"Interviewer_Name\"\r\n                fullWidth\r\n                value={formData.Interviewer_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Year of Interview\"\r\n                name=\"Year_of_Interview\"\r\n                fullWidth\r\n                value={formData.Year_of_Interview || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {questions.map((question, i) => {\r\n              const questionNumber = (i + 1).toString().padStart(2, '0');\r\n              return (\r\n                <Grid item xs={12} key={i}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={`Interview_Q${questionNumber}`}\r\n                    fullWidth\r\n                    value={formData[`Interview_Q${questionNumber}`] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n            {/* Interview_Created_By field is not rendered here */}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default InterviewDrawer;\r\n","import React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst TaskDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  taskId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Memoize user to prevent new object reference on every render\r\n  const user = useMemo(() => JSON.parse(localStorage.getItem(\"user\")), []);\r\n  const isAdmin = user?.user_type === 'admin';\r\n  const isStudent = user?.user_type === 'student';\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (taskId) {\r\n        fetch(`${API_BASE_URL}/tasks/id/${taskId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          created_by: isAdmin ? user?.first_name || \"\" : \"\",\r\n          task_description: \"\",\r\n          task_status: \"\",\r\n          task_comment: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, taskId, isAdmin, user]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isAdmin) {\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/tasks/update/${formData.id}`\r\n      : `${API_BASE_URL}/tasks/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id || !isAdmin) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/tasks/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const taskStatusOptions = [\"Pending\", \"Completed\"];\r\n\r\n  const fieldOrder = [\"task_description\", \"task_status\", \"task_comment\"];\r\n\r\n  const renderField = (key, index) => {\r\n    if (key === \"id\" || key === \"student_details_portal_id\" || key === \"task_date_stamp\" || key === \"created_by\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    if (key === \"task_status\" && isAdmin) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={taskStatusOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={label}\r\n                name={key}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n          disabled={isStudent || (key === \"task_status\" && !isAdmin)}\r\n          InputProps={{\r\n            readOnly: key === \"task_status\" && !isAdmin,\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Task Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {fieldOrder.map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && isAdmin && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          {isAdmin && (\r\n            <Button\r\n              onClick={handleSave}\r\n              startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n            >\r\n              {formData.id ? \"Save\" : \"Create\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this task?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default TaskDetailsDrawer;","import React from 'react';\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image\r\n} from '@react-pdf/renderer';\r\nimport logo from '../images/willowton_logo.png';\r\n\r\n// About Me Custom Questions\r\nconst aboutMeQuestions = [\r\n  \"What inspired you to pursue your chosen field of study?\",\r\n  \"How do you plan to use your education and skills to make a significant impact in this field?\",\r\n  \"What special projects or initiatives have you undertaken in your academic life?\",\r\n  \"Can you tell me about any academic awards or scholarships you have received?\",\r\n  \"Provide examples or specific skills you have developed that demonstrates your commitment.\",\r\n  \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?\",\r\n  \"Once you have completed your studies, how will others benefit from it?\",\r\n  \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?\",\r\n  \"Have you previously been awarded a bursary?\",\r\n  \"What do you think has been your most notable contribution to society thus far?\",\r\n  \"Why do you think serving the community is important?\",\r\n  \"Will you be doing any volunteer work during your studies?\",\r\n  \"Are you willing to assist someone in need?\",\r\n  \"Describe yourself in three words.\",\r\n  \"What is your greatest strength?\",\r\n  \"Describe your biggest mistake and what steps you have taken to rectify it.\",\r\n  \"What personal achievement makes you proud?\",\r\n  \"Are you self-motivated? Explain\",\r\n  \"1st choice of study.\",\r\n  \"2nd choice of study\",\r\n  \"3rd choice of study.\"\r\n];\r\n\r\n// Interview Custom Questions\r\nconst interviewQuestions = [\r\n  \"Briefly describe the applicant's family & social financial conditions?\",\r\n  \"Employment Status Score\",\r\n  \"Year of Study\",\r\n  \"Degree/Diploma Name\",\r\n  \"Number of Years to Qualify\",\r\n  \"Reason for Choosing the Course\",\r\n  \"Field of Study Score\",\r\n  \"APS Score (Matric) or University Average\",\r\n  \"Number of Failed Modules\",\r\n  \"Academic Results Score\",\r\n  \"Have you worked on any special projects or initiatives?\",\r\n  \"What extracurricular activities have you participated in?\",\r\n  \"How do you plan to contribute to your community post-graduation?\",\r\n  \"How would you inspire others to make an impact?\",\r\n  \"Community Work Involvement Score\",\r\n  \"How will you use your education and skills to make an impact?\",\r\n  \"Can you share academic awards or scholarships received?\",\r\n  \"Describe a role model and why they inspire you?\",\r\n  \"Why do you believe you deserve this bursary?\",\r\n  \"If not awarded this bursary, what are your plans?\",\r\n  \"Motivation Score\",\r\n  \"Total Score\",\r\n  \"Comments Section\",\r\n  \"Overall Impression\"\r\n];\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    padding: 30,\r\n    fontSize: 8,\r\n    fontFamily: 'Helvetica',\r\n    lineHeight: 1.5\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1 solid #ccc',\r\n    marginBottom: 10,\r\n    paddingBottom: 4\r\n  },\r\n  logo: {\r\n    width: 60,\r\n    height: 60,\r\n    objectFit: 'contain'\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    flex: 1\r\n  },\r\n  headerTitle1: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginBottom: 1\r\n  },\r\n  headerTitle2: {\r\n    fontSize: 10,\r\n    fontStyle: 'italic'\r\n  },\r\n  reportTime: {\r\n    fontSize: 8,\r\n    textAlign: 'right'\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#2D3748',\r\n    color: 'white',\r\n    padding: 4,\r\n    marginTop: 10,\r\n    marginBottom: 4,\r\n    width: '100%',\r\n    borderRadius: 4\r\n  },\r\n  studentDetailsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    gap: 4,\r\n    marginBottom: 4\r\n  },\r\n  studentDetailsField: {\r\n    width: '49%',\r\n    flexDirection: 'column',\r\n    padding: 4,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    borderBottomStyle: 'solid'\r\n  },\r\n  studentDetailsLabel: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 2\r\n  },\r\n  studentDetailsValue: {\r\n    fontStyle: 'italic'\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: '100%',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    marginBottom: 4,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    minHeight: 20, // Ensure minimum height for content\r\n  },\r\n  tableCellLabel: {\r\n    width: '40%',\r\n    padding: 4,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#f5f5f5',\r\n    borderRightWidth: 1,\r\n    borderRightColor: '#ccc',\r\n    wordBreak: 'keep-all',   // Don't break in the middle of words\r\n    minWidth: 0,\r\n    overflow: 'hidden'\r\n  },\r\n  tableCellValue: {\r\n    width: 400,\r\n    padding: 4,\r\n    fontStyle: 'italic',\r\n    lineHeight: 0.7,\r\n  },\r\n\r\n\r\n});\r\n\r\n// Breaks long unbroken strings by inserting zero-width space every N characters\r\nconst breakLongWords = (str, maxLen = 20) => {\r\n  if (typeof str !== 'string') return str;\r\n\r\n  return str\r\n    .split(' ')\r\n    .map(word => {\r\n      if (word.length <= maxLen) return word;\r\n\r\n      // insert soft hyphen every maxLen chars\r\n      return word.match(new RegExp(`.{1,${maxLen}}`, 'g')).join('\\u00AD');\r\n    })\r\n    .join(' ');\r\n};\r\n\r\n\r\n// Converts snake_case or raw field names to Sentence Case\r\nconst toSentenceCase = (str) => {\r\n  return str\r\n    .replace(/_/g, ' ')\r\n    .split(' ')\r\n    .map(word =>\r\n      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\r\n    )\r\n    .join(' ');\r\n};\r\n\r\n// Removes section prefix from the field name\r\nconst removePrefix = (label, sectionTitle) => {\r\n  const cleanLabel = toSentenceCase(label);\r\n  const cleanSection = toSentenceCase(sectionTitle).replace(/s$/, '');\r\n  if (cleanLabel.startsWith(cleanSection + ' ')) {\r\n    return cleanLabel.slice(cleanSection.length + 1);\r\n  }\r\n  return cleanLabel;\r\n};\r\n\r\n// Map question to field name\r\nconst mapQuestion = (section, key) => {\r\n  const questionMap = {\r\n    'About Me': aboutMeQuestions,\r\n    'Interview': interviewQuestions\r\n  };\r\n  const questions = questionMap[section];\r\n  if (!questions) return removePrefix(key, section);\r\n\r\n  const match = key.match(/^(about_me_q|interview_q)(\\d+)/i);\r\n  if (match) {\r\n    const index = parseInt(match[2], 10) - 1; // Convert to 0-based index\r\n    return questions[index] || removePrefix(key, section);\r\n  }\r\n  return removePrefix(key, section);\r\n};\r\n\r\n// Get current date and time\r\nconst getCurrentDateTime = () => {\r\n  const now = new Date();\r\n  return now.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    hour12: true\r\n  });\r\n};\r\n\r\n// Student Details Section\r\nconst StudentDetailsSection = ({ data }) => {\r\n  const entries = Object.entries(data || {}).filter(([k, v]) => v !== null && v !== '');\r\n  const rows = [];\r\n  for (let i = 0; i < entries.length; i += 2) {\r\n    rows.push(entries.slice(i, i + 2));\r\n  }\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>Student Details</Text>\r\n      {rows.map((row, rowIdx) => (\r\n        <View key={rowIdx} style={styles.studentDetailsRow}>\r\n          {row.map(([key, value]) => (\r\n            <View key={key} style={styles.studentDetailsField}>\r\n              <Text style={styles.studentDetailsLabel}>{removePrefix(key, 'Student Details')}</Text>\r\n              <Text style={styles.studentDetailsValue}>{value || '—'}</Text>\r\n            </View>\r\n          ))}\r\n          {row.length < 2 && <View style={styles.studentDetailsField} />}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n// Single Object Section\r\nconst RenderSection = ({ title, data }) => {\r\n  if (!data || Object.keys(data).length === 0) return null;\r\n  const entries = Object.entries(data).filter(([k, v]) => v !== null && v !== '');\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>{toSentenceCase(title)}</Text>\r\n      <View style={styles.table}>\r\n        {entries.map(([key, value], idx) => (\r\n          <View key={idx} style={styles.tableRow} wrap={false}>\r\n            <Text style={styles.tableCellLabel}>{mapQuestion(title, key)}</Text>\r\n            <Text style={styles.tableCellValue}>{breakLongWords(value || '—')}</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Multiple Records Section\r\nconst RenderMultiple = ({ title, data }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const showNumbering = data.length > 1;\r\n\r\n  return (\r\n    <View>\r\n      {data.map((item, idx) => (\r\n        <View key={idx}>\r\n          <Text style={styles.sectionTitle}>\r\n            {toSentenceCase(title)}{showNumbering ? ` - ${idx + 1}` : ''}\r\n          </Text>\r\n          <View style={styles.table}>\r\n            {Object.entries(item).map(([key, val], i) => (\r\n              <View key={i} style={styles.tableRow}>\r\n                <Text style={styles.tableCellLabel}>\r\n                  {removePrefix(key, title)}\r\n                </Text>\r\n                {/* <Text style={styles.tableCellValue}>\r\n                  {val || '—'}\r\n                </Text> */}\r\n                <Text style={styles.tableCellValue}>{breakLongWords(val || '—')}</Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst StudentPDFDocument = ({ studentData }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Image src={logo} style={styles.logo} />\r\n        <View style={styles.headerText}>\r\n          <Text style={styles.headerTitle1}>WillowTon & SANZAF Bursary</Text>\r\n          <Text style={styles.headerTitle2}>Student Detailed Report</Text>\r\n        </View>\r\n        <Text style={styles.reportTime}>{getCurrentDateTime()}</Text>\r\n      </View>\r\n\r\n      {/* Sections */}\r\n      <StudentDetailsSection data={studentData.student_details} />\r\n      <RenderSection title=\"About Me\" data={studentData.about_me} />\r\n      <RenderSection title=\"Assets & Liabilities\" data={studentData.assets_liabilities} />\r\n      <RenderSection title=\"Expense Details\" data={studentData.expense_details} />\r\n      <RenderSection title=\"Interview\" data={studentData.interview} />\r\n      <RenderSection title=\"University Details\" data={studentData.university_details} />\r\n      <RenderMultiple title=\"Parents Details\" data={studentData.parents_details} />\r\n      <RenderMultiple title=\"Attachments\" data={studentData.attachments} />\r\n      <RenderMultiple title=\"Payments\" data={studentData.payments} />\r\n      <RenderMultiple title=\"Results\" data={studentData.results} />\r\n      <RenderMultiple title=\"Tasks\" data={studentData.tasks} />\r\n      <RenderMultiple title=\"Voluntary Service\" data={studentData.voluntary_service} />\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default StudentPDFDocument;","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  IconButton,\r\n  InputBase,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Divider,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select,\r\n  MenuItem as MuiMenuItem,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { useTheme, useMediaQuery } from \"@mui/material\";\r\nimport * as XLSX from \"xlsx\";\r\nimport DrawerForm from \"./Drawer/StudentDetailDrawer\";\r\nimport AboutusDrawer from \"./Drawer/AboutUsDrawer\";\r\nimport ParentsDrawer from \"./Drawer/ParentsDrawer\";\r\nimport UniversityDetailsDrawer from \"./Drawer/UniversityDetailsDrawer\";\r\nimport AttachmentsDrawer from \"./Drawer/AttachmentsDrawer\";\r\nimport ExpenseDetailsDrawer from \"./Drawer/ExpenseDetailsDrawer\";\r\nimport AssetsLiabilitiesDrawer from \"./Drawer/AssetsLiabilitiesDrawer\";\r\nimport AcademicResultsDrawer from \"./Drawer/AcademicResultsDrawer\";\r\nimport VoluntaryServiceDrawer from \"./Drawer/VoluntaryServiceDrawer\";\r\nimport PaymentDrawer from \"./Drawer/PaymentDrawer\";\r\nimport InterviewDrawer from \"./Drawer/InterviewDrawer\";\r\nimport TaskDetailsDrawer from \"./Drawer/TaskDetailsDrawer\";\r\nimport { ThemeContext } from \"../config/ThemeContext\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport StudentPDFDocument from \"./StudentPDFDocument\";\r\nimport '../css/GenericTable.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst SectionTable = ({ data, sectionKey, sectionLabel, isDarkMode, selectedStudentid, onEdit, onAdd }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [columns, setColumns] = useState([]);\r\n  const [visibleColumns, setVisibleColumns] = useState([]);\r\n  const [columnWidths, setColumnWidths] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [columnSearchTerm, setColumnSearchTerm] = useState('');\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(true); // Add loading state\r\n  const searchRef = useRef(null);\r\n  const resizingRef = useRef(null);\r\n  const open = Boolean(anchorEl);\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const sentenceCase = useCallback((str) => {\r\n    if (str === 'student_id_passport_number') return 'Student ID/Passport Number';\r\n    if (str === 'student_willow_relationship') return 'Willowton Group Relationship';\r\n    return str.replace(/^student /i, '').replace(/_/g, ' ').replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n  }, []);\r\n\r\n  const calculateColumnWidth = useCallback((col) => {\r\n    const headerText = sentenceCase(col);\r\n    const charCount = headerText.length;\r\n    const pixelsPerChar = 10;\r\n    const minWidth = 50;\r\n    const calculatedWidth = charCount * pixelsPerChar + 40;\r\n    return Math.max(minWidth, calculatedWidth);\r\n  }, [sentenceCase]);\r\n\r\n  useEffect(() => {\r\n    // Simulate data loading with a delay to ensure spinner is visible\r\n    const loadData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (data && data.length > 0) {\r\n          const cols = Object.keys(data[0]).filter((c) => c !== 'id' && c !== 'student_details_portal_id');\r\n          setColumns(cols);\r\n          setVisibleColumns(cols);\r\n          setColumnWidths(cols.reduce((acc, col) => ({\r\n            ...acc,\r\n            [col]: calculateColumnWidth(col),\r\n          }), {}));\r\n          setTotalRecords(data.length);\r\n        } else {\r\n          setColumns([]);\r\n          setVisibleColumns([]);\r\n          setColumnWidths({});\r\n          setTotalRecords(0);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadData();\r\n  }, [data, calculateColumnWidth]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\r\n        setShowSearch(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (resizingRef.current) {\r\n      const { col, startX, startWidth } = resizingRef.current;\r\n      const newWidth = Math.max(50, startWidth + (e.clientX - startX));\r\n      setColumnWidths((prev) => ({ ...prev, [col]: newWidth }));\r\n    }\r\n  }, []);\r\n\r\n  const stopResizing = useCallback(() => {\r\n    resizingRef.current = null;\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', stopResizing);\r\n    document.body.style.userSelect = '';\r\n  }, [handleMouseMove]);\r\n\r\n  const startResizing = useCallback(\r\n    (e, col) => {\r\n      e.preventDefault();\r\n      resizingRef.current = { col, startX: e.clientX, startWidth: columnWidths[col] || calculateColumnWidth(col) };\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', stopResizing);\r\n      document.body.style.userSelect = 'none';\r\n    },\r\n    [columnWidths, calculateColumnWidth, handleMouseMove, stopResizing]\r\n  );\r\n\r\n  const formatDate = (date) => (date ? new Date(date).toLocaleDateString() : 'N/A');\r\n\r\n  const toggleColumn = (col) => {\r\n    if (visibleColumns.includes(col)) {\r\n      setVisibleColumns((prev) => prev.filter((c) => c !== col));\r\n    } else {\r\n      const idx = columns.indexOf(col);\r\n      const updated = [...visibleColumns];\r\n      updated.splice(idx, 0, col);\r\n      setVisibleColumns(updated);\r\n    }\r\n  };\r\n\r\n  const resetColumns = () => {\r\n    setVisibleColumns(columns);\r\n    setColumnWidths(columns.reduce((acc, col) => ({\r\n      ...acc,\r\n      [col]: calculateColumnWidth(col),\r\n    }), {}));\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const exportData = data.map((s) =>\r\n      Object.fromEntries(visibleColumns.map((col) => [sentenceCase(col), s[col]]))\r\n    );\r\n    const ws = XLSX.utils.json_to_sheet(exportData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, sectionKey);\r\n    XLSX.writeFile(wb, `${sectionKey}_report.xlsx`);\r\n  };\r\n\r\n  const handleSort = (col) => {\r\n    setSortConfig((prev) => {\r\n      if (prev.key === col) {\r\n        return {\r\n          key: col,\r\n          direction: prev.direction === 'asc' ? 'desc' : prev.direction === 'desc' ? null : 'asc',\r\n        };\r\n      } else {\r\n        return { key: col, direction: 'asc' };\r\n      }\r\n    });\r\n    setPage(0);\r\n  };\r\n\r\n  const filteredData = data\r\n    .filter((item) =>\r\n      visibleColumns.some((col) => {\r\n        const val = item[col];\r\n        return val != null && val.toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n      })\r\n    )\r\n    .sort((a, b) => {\r\n      if (!sortConfig.key || !sortConfig.direction) return 0;\r\n      const aVal = a[sortConfig.key];\r\n      const bVal = b[sortConfig.key];\r\n      if (aVal == null || bVal == null) return 0;\r\n      return sortConfig.direction === 'asc'\r\n        ? aVal.toString().localeCompare(bVal.toString())\r\n        : bVal.toString().localeCompare(aVal.toString());\r\n    });\r\n\r\n  const paginatedData = filteredData.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    setTotalRecords(filteredData.length);\r\n  }, [filteredData]);\r\n\r\n  const filteredColumns = columns.filter((col) => {\r\n    const lowerTerm = columnSearchTerm.toLowerCase();\r\n    const raw = col.toLowerCase();\r\n    const formatted = sentenceCase(col).toLowerCase();\r\n    return raw.includes(lowerTerm) || formatted.includes(lowerTerm);\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{ backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC', p: 2 }}\r\n      className={isDarkMode ? 'dark-mode' : ''}\r\n    >\r\n      <Box sx={{ padding: \"12px\", backgroundColor: isDarkMode ? '#1e293b' : '#e1f5fe', borderRadius: \"8px\", marginBottom: \"12px\", border: '1px solid #ccc', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" sx={{ color: isDarkMode ? 'white' : 'black', fontWeight: \"bold\" }}>\r\n          {sectionLabel}\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Box\r\n            ref={searchRef}\r\n            sx={{\r\n              width: showSearch ? (isSmallScreen ? 120 : 220) : 0,\r\n              height: 36,\r\n              overflow: 'hidden',\r\n              transition: 'width 0.3s ease-in-out, opacity 0.3s ease-in-out',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              opacity: showSearch ? 1 : 0,\r\n            }}\r\n          >\r\n            <InputBase\r\n              placeholder=\"Search\"\r\n              value={searchTerm}\r\n              onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n                setPage(0);\r\n              }}\r\n              sx={{\r\n                backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n                color: isDarkMode ? 'white' : 'black',\r\n                px: 1.5,\r\n                height: '100%',\r\n                fontSize: '0.85rem',\r\n                borderRadius: 1,\r\n                border: `1px solid ${isDarkMode ? '#4A5568' : '#CBD5E0'}`,\r\n                width: '100%',\r\n                minWidth: 0,\r\n              }}\r\n              startAdornment={<SearchIcon sx={{ mr: 1 }} fontSize=\"small\" />}\r\n              endAdornment={\r\n                searchTerm && (\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setSearchTerm('');\r\n                      setPage(0);\r\n                    }}\r\n                    sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n                  >\r\n                    <ClearIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                )\r\n              }\r\n            />\r\n          </Box>\r\n          <Tooltip title={showSearch ? 'Close Search' : 'Search'}>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => setShowSearch((prev) => !prev)}\r\n              sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n            >\r\n              {showSearch ? <ClearIcon fontSize=\"small\" /> : <SearchIcon fontSize=\"small\" />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          {!(isSmallScreen && showSearch) && (\r\n            <>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Column Visibility\">\r\n                <IconButton size=\"small\" onClick={(e) => setAnchorEl(e.currentTarget)} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <ViewColumnIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Export to Excel\">\r\n                <IconButton size=\"small\" onClick={exportToExcel} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <DownloadIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              {onAdd && (\r\n                <>\r\n                  <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n                  <Tooltip title=\"Add New\">\r\n                    <IconButton size=\"small\" onClick={onAdd} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                      <AddIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={() => setAnchorEl(null)}\r\n        PaperProps={{\r\n          sx: {\r\n            minWidth: 200,\r\n            maxHeight: 300,\r\n            p: 1,\r\n            backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n            boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.15)',\r\n            borderRadius: 2,\r\n          },\r\n        }}\r\n      >\r\n        <InputBase\r\n          autoFocus\r\n          placeholder=\"Search Columns\"\r\n          value={columnSearchTerm}\r\n          onChange={(e) => setColumnSearchTerm(e.target.value)}\r\n          onKeyDown={(e) => e.stopPropagation()}\r\n          sx={{\r\n            mb: 1,\r\n            px: 1,\r\n            fontSize: '0.7rem',\r\n            backgroundColor: isDarkMode ? '#334155' : '#f1f5f9',\r\n            borderRadius: 1,\r\n            width: '100%',\r\n            height: '28px',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n          }}\r\n        />\r\n        {filteredColumns.map((col) => (\r\n          <MenuItem key={col} dense>\r\n            <FormControlLabel\r\n              control={<Checkbox size=\"small\" checked={visibleColumns.includes(col)} onChange={() => toggleColumn(col)} />}\r\n              label={<span style={{ fontSize: '0.7rem' }}>{sentenceCase(col)}</span>}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n        <Divider sx={{ my: 1 }} />\r\n        <MenuItem dense onClick={() => { resetColumns(); setAnchorEl(null); }}>\r\n          <ListItemIcon><RefreshIcon fontSize=\"small\" /></ListItemIcon>\r\n          <ListItemText primary=\"Reset Columns\" primaryTypographyProps={{ fontSize: '0.7rem' }} />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <div className=\"generic-table-container\">\r\n        {loading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n            <CircularProgress sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }} />\r\n          </Box>\r\n        ) : (\r\n          <table className=\"generic-table\" style={{ backgroundColor: isDarkMode ? '#1e293b' : '#fff', tableLayout: 'fixed' }}>\r\n            <thead>\r\n              <tr>\r\n                {onEdit && <th style={{ width: 50, color: isDarkMode ? 'white' : '#1e293b' }}></th>}\r\n                {visibleColumns.map((col) => (\r\n                  <th\r\n                    key={col}\r\n                    style={{\r\n                      color: isDarkMode ? 'white' : '#1e293b',\r\n                      cursor: 'pointer',\r\n                      position: 'relative',\r\n                      width: columnWidths[col] || calculateColumnWidth(col),\r\n                      minWidth: 50,\r\n                    }}\r\n                    onClick={(e) => {\r\n                      if (e.target.className !== 'resize-handle') {\r\n                        handleSort(col);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', paddingRight: '10px' }}>\r\n                      <span>{sentenceCase(col)}</span>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        {sortConfig.key === col && sortConfig.direction === 'asc' && <ArrowDropUpIcon fontSize=\"small\" />}\r\n                        {sortConfig.key === col && sortConfig.direction === 'desc' && <ArrowDropDownIcon fontSize=\"small\" />}\r\n                        {sortConfig.key === col && sortConfig.direction === null}\r\n                      </Box>\r\n                    </Box>\r\n                    <span\r\n                      className=\"resize-handle\"\r\n                      onMouseDown={(e) => startResizing(e, col)}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 0,\r\n                        height: '100%',\r\n                        width: '5px',\r\n                        cursor: 'col-resize',\r\n                        background: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        userSelect: 'none',\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: '12px', color: isDarkMode ? '#F7FAFC' : '#1e293b' }}>|</span>\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginatedData.length > 0 ? (\r\n                paginatedData.map((row, i) => (\r\n                  <tr key={i}>\r\n                    {onEdit && (\r\n                      <td style={{ width: 50 }}>\r\n                        <EditIcon\r\n                          sx={{ cursor: 'pointer', fontSize: 'large', color: isDarkMode ? 'white' : 'black' }}\r\n                          onClick={() => onEdit(row.id)}\r\n                        />\r\n                      </td>\r\n                    )}\r\n                    {visibleColumns.map((col) => (\r\n                      <td\r\n                        key={col}\r\n                        style={{\r\n                          color: isDarkMode ? 'white' : '#1e293b',\r\n                          width: columnWidths[col] || calculateColumnWidth(col),\r\n                          minWidth: 50,\r\n                          overflow: 'hidden',\r\n                          textOverflow: 'ellipsis',\r\n                          whiteSpace: 'nowrap',\r\n                        }}\r\n                      >\r\n                        {col.includes('date') ? formatDate(row[col]) :\r\n                          typeof row[col] === 'object' && row[col] !== null ?\r\n                            col.toLowerCase().includes('attachment') ||\r\n                              col.toLowerCase().includes('proof_of_service') ||\r\n                              col.toLowerCase().includes('proof_of_payment') ?\r\n                              '📎 File attached' :\r\n                              JSON.stringify(row[col]) :\r\n                            row[col] || 'N/A'}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr><td colSpan={visibleColumns.length + (onEdit ? 1 : 0)} className=\"no-matching-records\">No matching records found</td></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {!loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\r\n          <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 2,\r\n            border: '1px solid',\r\n            borderColor: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n            borderRadius: '8px',\r\n            padding: '6px 12px',\r\n            backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n          }}>\r\n            <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n              Rows per page:\r\n            </Typography>\r\n            <Select\r\n              value={rowsPerPage}\r\n              onChange={(e) => {\r\n                setRowsPerPage(parseInt(e.target.value));\r\n                setPage(0);\r\n              }}\r\n              size=\"small\"\r\n              sx={{\r\n                color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n                '.MuiSelect-icon': { color: isDarkMode ? '#F7FAFC' : '#1e293b' },\r\n                backgroundColor: isDarkMode ? '#4A5568' : '#E2E8F0',\r\n                borderRadius: '4px',\r\n                fontSize: '0.85rem',\r\n                minWidth: '60px',\r\n              }}\r\n            >\r\n              {[10, 15, 25, 50, 100].map((n) => (\r\n                <MuiMenuItem key={n} value={n}>{n}</MuiMenuItem>\r\n              ))}\r\n            </Select>\r\n            <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n              {page * rowsPerPage + 1}-{Math.min((page + 1) * rowsPerPage, totalRecords)} of {totalRecords}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => setPage((p) => Math.max(0, p - 1))}\r\n              disabled={page === 0}\r\n              size=\"small\"\r\n              sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n            >\r\n              <ArrowBackIosIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => setPage((p) => (p + 1) * rowsPerPage < totalRecords ? p + 1 : p)}\r\n              disabled={(page + 1) * rowsPerPage >= totalRecords}\r\n              size=\"small\"\r\n              sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n            >\r\n              <ArrowForwardIosIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StudentDetails = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [studentDetails, setStudentDetails] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [selectedStudentid, setSelectedStudentid] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [aboutMeDrawerOpen, setAboutMeDrawerOpen] = useState(false);\r\n  const [editingAboutMeId, setEditingAboutMeId] = useState(null);\r\n  const [parentsDrawerOpen, setParentsDrawerOpen] = useState(false);\r\n  const [editingParentId, setEditingParentId] = useState(null);\r\n  const [universityDetailsDrawerOpen, setUniversityDetailsDrawerOpen] = useState(false);\r\n  const [editingUniversityId, setEditingUniversityId] = useState(null);\r\n  const [attachmentsDrawerOpen, setAttachmentsDrawerOpen] = useState(false);\r\n  const [editingAttachmentId, setEditingAttachmentId] = useState(null);\r\n  const [expenseDetailsDrawerOpen, setExpensesSummaryDrawerOpen] = useState(false);\r\n  const [editingExpenseDetailsId, setEditingExpenseDetailsId] = useState(null);\r\n  const [assetsLiabilitiesDrawerOpen, setAssetsLiabilitiesDrawerOpen] = useState(false);\r\n  const [editingAssetLiabilityId, setEditingAssetLiabilityId] = useState(null);\r\n  const [academicResultsDrawerOpen, setAcademicResultsDrawerOpen] = useState(false);\r\n  const [editingAcademicResultId, setEditingAcademicResultId] = useState(null);\r\n  const [voluntaryServiceDrawerOpen, setVoluntaryServiceDrawerOpen] = useState(false);\r\n  const [editingVoluntaryServiceId, setEditingVoluntaryServiceId] = useState(null);\r\n  const [paymentDrawerOpen, setPaymentDrawerOpen] = useState(false);\r\n  const [editingPaymentId, setEditingPaymentId] = useState(null);\r\n  const [interviewDrawerOpen, setInterviewDrawerOpen] = useState(false);\r\n  const [editingInterviewId, setEditingInterviewId] = useState(null);\r\n  const [tasksDrawerOpen, setTasksDrawerOpen] = useState(false);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [aboutMe, setAboutMe] = useState(null);\r\n  const [parentsDetails, setParentsDetails] = useState(null);\r\n  const [universityDetails, setUniversityDetails] = useState(null);\r\n  const [attachments, setAttachments] = useState(null);\r\n  const [expensesSummary, setExpensesSummary] = useState(null);\r\n  const [assetsLiabilities, setAssetsLiabilities] = useState(null);\r\n  const [academicResults, setAcademicResults] = useState(null);\r\n  const [voluntaryServices, setVoluntaryServices] = useState(null);\r\n  const [payments, setPayments] = useState(null);\r\n  const [interviews, setInterviews] = useState(null);\r\n  const [tasks, setTasks] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\r\n  const isAdmin = user?.user_type === \"admin\";\r\n  const isStudent = user?.user_type === \"student\";\r\n\r\n  const pageStyle = {\r\n    backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n    color: isDarkMode ? \"#ffffff\" : \"#000000\",\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const options = {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    };\r\n    const formattedDate = date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n    return formattedDate.replace(/\\//g, \"/\");\r\n  };\r\n\r\n  const fetchStudentDetails = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const userId = user.user_id;\r\n      let response;\r\n      if (isAdmin) {\r\n        response = await fetch(`${API_BASE_URL}/student-details`);\r\n      } else if (isStudent && userId) {\r\n        response = await fetch(`${API_BASE_URL}/student-detail/${userId}`);\r\n      } else {\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n\r\n      if (!response.ok) {\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (\r\n        data &&\r\n        ((Array.isArray(data) && data.length > 0 && data[0]?.id) ||\r\n          (!Array.isArray(data) && data?.id))\r\n      ) {\r\n        if (isAdmin) {\r\n          const formattedData = data.map((student) => {\r\n            const updatedStudent = { ...student };\r\n            Object.keys(updatedStudent).forEach((key) => {\r\n              if (key.toLowerCase().includes(\"date_stamp\")) {\r\n                updatedStudent[key] = formatDate(updatedStudent[key]);\r\n              }\r\n            });\r\n            return updatedStudent;\r\n          });\r\n          setStudentDetails(formattedData);\r\n          setSelectedStudent(formattedData[0] || null);\r\n          setSelectedStudentid(formattedData[0]?.id || null);\r\n          return formattedData;\r\n        } else {\r\n          const updatedStudent = Array.isArray(data) ? data[0] : data;\r\n          Object.keys(updatedStudent).forEach((key) => {\r\n            if (key.toLowerCase().includes(\"date_stamp\")) {\r\n              updatedStudent[key] = formatDate(updatedStudent[key]);\r\n            }\r\n          });\r\n          setStudentDetails([updatedStudent]);\r\n          setSelectedStudent(updatedStudent);\r\n          setSelectedStudentid(updatedStudent.id);\r\n          return updatedStudent;\r\n        }\r\n      } else {\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      setStudentDetails([]);\r\n      setSelectedStudent(null);\r\n      setSelectedStudentid(null);\r\n      return [];\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isAdmin, isStudent, user.user_id]);\r\n\r\n  const fetchStudentData = useCallback(async (studentId) => {\r\n    if (!studentId) {\r\n      setStudentData(null);\r\n      return;\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/student-data/${studentId}`);\r\n      const data = await response.json();\r\n      setStudentData(data);\r\n    } catch (error) {\r\n      setStudentData(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchSectionData = useCallback(async (key, studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/${key}/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n          const updatedItem = { ...item };\r\n          Object.keys(updatedItem).forEach((key) => {\r\n            if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n              updatedItem[key] = formatDate(updatedItem[key]);\r\n            }\r\n          });\r\n          return updatedItem;\r\n        })\r\n        : [];\r\n      return formattedData;\r\n    } catch (error) {\r\n      return [];\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const initializeData = async () => {\r\n      setIsLoading(true);\r\n      if (isStudent) {\r\n        const data = await fetchStudentDetails();\r\n        if (mounted && data && data.id) {\r\n          setStudentDetails([data]);\r\n          setSelectedStudent(data);\r\n          setSelectedStudentid(data.id);\r\n          await fetchStudentData(data.id);\r\n\r\n          const sectionKeys = [\r\n            \"about-me\",\r\n            \"parents-details\",\r\n            \"university-details\",\r\n            \"attachments\",\r\n            \"expenses-summary\",\r\n            \"assets-liabilities\",\r\n            \"academic-results\",\r\n            \"voluntary-services\",\r\n            \"tasks\",\r\n          ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n\r\n          const responses = await Promise.all(\r\n            sectionKeys.map((key) => fetchSectionData(key, data.id))\r\n          );\r\n\r\n          if (mounted) {\r\n            setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n            setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n            setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n            setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n            setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n            setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n            setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n            setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n            setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n          }\r\n        } else if (mounted) {\r\n          setStudentDetails([]);\r\n          setSelectedStudent(null);\r\n          setSelectedStudentid(null);\r\n          setStudentData(null);\r\n        }\r\n      } else if (isAdmin) {\r\n        const data = await fetchStudentDetails();\r\n        if (mounted && Array.isArray(data) && data.length > 0) {\r\n          setStudentDetails(data);\r\n          setSelectedStudent(data[0]);\r\n          setSelectedStudentid(data[0].id);\r\n          await fetchStudentData(data[0].id);\r\n\r\n          const sectionKeys = [\r\n            \"about-me\",\r\n            \"parents-details\",\r\n            \"university-details\",\r\n            \"attachments\",\r\n            \"expenses-summary\",\r\n            \"assets-liabilities\",\r\n            \"academic-results\",\r\n            \"voluntary-services\",\r\n            \"payments\",\r\n            \"interviews\",\r\n            \"tasks\",\r\n          ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n\r\n          const responses = await Promise.all(\r\n            sectionKeys.map((key) => fetchSectionData(key, data[0].id))\r\n          );\r\n\r\n          if (mounted) {\r\n            setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n            setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n            setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n            setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n            setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n            setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n            setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n            setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n            if (isAdmin) {\r\n              setPayments(responses[sectionKeys.indexOf(\"payments\")]);\r\n              setInterviews(responses[sectionKeys.indexOf(\"interviews\")]);\r\n            }\r\n            setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n          }\r\n        } else if (mounted) {\r\n          setStudentDetails([]);\r\n          setSelectedStudent(null);\r\n          setSelectedStudentid(null);\r\n          setStudentData(null);\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    initializeData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [fetchStudentDetails, isAdmin, isStudent, fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAboutMe = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"about-me\", studentId);\r\n      setAboutMe(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchParentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"parents-details\", studentId);\r\n      setParentsDetails(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchUniversityDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"university-details\", studentId);\r\n      setUniversityDetails(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAttachmentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"attachments\", studentId);\r\n      setAttachments(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchExpenseDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"expenses-summary\", studentId);\r\n      setExpensesSummary(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAssetsLiabilities = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"assets-liabilities\", studentId);\r\n      setAssetsLiabilities(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAcademicResults = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"academic-results\", studentId);\r\n      setAcademicResults(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchVoluntaryServices = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"voluntary-services\", studentId);\r\n      setVoluntaryServices(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchPaymentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"payments\", studentId);\r\n      setPayments(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchInterviewsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"interviews\", studentId);\r\n      setInterviews(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchTasks = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"tasks\", studentId);\r\n      setTasks(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const handleDeleteStudent = async (studentId) => {\r\n    if (isStudent) {\r\n      setSelectedStudent(null);\r\n      setSelectedStudentid(null);\r\n      setStudentData(null);\r\n    } else if (isAdmin) {\r\n      const remainingStudents = studentDetails.filter((student) => student.id !== studentId);\r\n      if (remainingStudents.length > 0) {\r\n        const nextStudent = remainingStudents[0];\r\n        setSelectedStudent(nextStudent);\r\n        setSelectedStudentid(nextStudent.id);\r\n        await fetchStudentData(nextStudent.id);\r\n      } else {\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        setStudentData(null);\r\n      }\r\n      await fetchStudentDetails();\r\n    }\r\n  };\r\n\r\n  const renderDrawer = () => (\r\n    <DrawerForm\r\n      open={drawerOpen}\r\n      onClose={() => setDrawerOpen(false)}\r\n      studentId={selectedStudentid}\r\n      onSave={async (savedStudent) => {\r\n        if (savedStudent && typeof savedStudent === \"object\" && savedStudent.id) {\r\n          const formattedStudent = {\r\n            ...savedStudent,\r\n            ...Object.keys(savedStudent).reduce((acc, key) => {\r\n              if (key.toLowerCase().includes(\"date\") && savedStudent[key]) {\r\n                acc[key] = formatDate(savedStudent[key]);\r\n              } else {\r\n                acc[key] = savedStudent[key];\r\n              }\r\n              return acc;\r\n            }, {}),\r\n          };\r\n          setStudentDetails((prev) => {\r\n            const existingIndex = prev.findIndex((s) => s.id === savedStudent.id);\r\n            if (existingIndex >= 0) {\r\n              const updatedDetails = [...prev];\r\n              updatedDetails[existingIndex] = formattedStudent;\r\n              return updatedDetails;\r\n            } else {\r\n              return [...prev, formattedStudent];\r\n            }\r\n          });\r\n          setSelectedStudent(formattedStudent);\r\n          setSelectedStudentid(formattedStudent.id);\r\n          await fetchStudentData(formattedStudent.id);\r\n        }\r\n        setDrawerOpen(false);\r\n        await fetchStudentDetails();\r\n      }}\r\n      onDelete={handleDeleteStudent}\r\n    />\r\n  );\r\n\r\n  const tabSections = [\r\n    { label: \"Show all\", key: \"show_all\" },\r\n    { label: \"About Me\", key: \"about-me\" },\r\n    { label: \"Parents Details\", key: \"parents-details\" },\r\n    { label: \"University Details\", key: \"university-details\" },\r\n    { label: \"Attachments\", key: \"attachments\" },\r\n    { label: \"Financial Details\", key: \"expenses-summary\" },\r\n    { label: \"Assets & Liabilities\", key: \"assets-liabilities\" },\r\n    { label: \"Academic Results\", key: \"academic-results\" },\r\n    { label: \"Voluntary Services\", key: \"voluntary-services\" },\r\n    { label: \"Tasks\", key: \"tasks\" },\r\n  ];\r\n\r\n  if (isAdmin) {\r\n    tabSections.splice(9, 0, { label: \"Payments\", key: \"payments\" }, { label: \"Interviews\", key: \"interviews\" });\r\n  }\r\n\r\n  const capitalizeWords = (str) => {\r\n    if (str.toLowerCase() === \"student id passport number\") {\r\n      return \"ID/Passport Number\";\r\n    }\r\n    if (str.toLowerCase() === \"student willow relationship\") {\r\n      return \"Willowton Group Relationship\";\r\n    }\r\n    const formattedStr = str.replace(/^student /i, \"\").replace(/_/g, \"\");\r\n    return formattedStr.replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n  };\r\n\r\n  const dataForSection = (key) => {\r\n    const mapping = {\r\n      \"about-me\": aboutMe,\r\n      \"parents-details\": parentsDetails,\r\n      \"university-details\": universityDetails,\r\n      \"attachments\": attachments,\r\n      \"expenses-summary\": expensesSummary,\r\n      \"assets-liabilities\": assetsLiabilities,\r\n      \"academic-results\": academicResults,\r\n      \"voluntary-services\": voluntaryServices,\r\n      \"payments\": payments,\r\n      \"interviews\": interviews,\r\n      \"tasks\": tasks,\r\n    };\r\n    return mapping[key] || [];\r\n  };\r\n\r\n  const renderRegion = (sectionKey, data) => {\r\n    if (!data) return null;\r\n\r\n    const isAboutMe = sectionKey === \"about-me\";\r\n    const isParents = sectionKey === \"parents-details\";\r\n    const isUniversityDetails = sectionKey === \"university-details\";\r\n    const isAttachments = sectionKey === \"attachments\";\r\n    const isExpenses = sectionKey === \"expenses-summary\";\r\n    const isAssetsLiabilities = sectionKey === \"assets-liabilities\";\r\n    const isAcademicResults = sectionKey === \"academic-results\";\r\n    const isVoluntaryServices = sectionKey === \"voluntary-services\";\r\n    const isPayments = sectionKey === \"payments\";\r\n    const isInterview = sectionKey === \"interviews\";\r\n    const isTasks = sectionKey === \"tasks\";\r\n\r\n    if ((isPayments || isInterview) && !isAdmin) return null;\r\n\r\n    const section = tabSections.find((sec) => sec.key === sectionKey);\r\n    const sectionLabel = section ? section.label : sectionKey;\r\n\r\n    const handleEdit = (id) => {\r\n      if (isAboutMe) {\r\n        setEditingAboutMeId(id);\r\n        setAboutMeDrawerOpen(true);\r\n      }\r\n      if (isParents) {\r\n        setEditingParentId(id);\r\n        setParentsDrawerOpen(true);\r\n      }\r\n      if (isUniversityDetails) {\r\n        setEditingUniversityId(id);\r\n        setUniversityDetailsDrawerOpen(true);\r\n      }\r\n      if (isAttachments) {\r\n        setEditingAttachmentId(id);\r\n        setAttachmentsDrawerOpen(true);\r\n      }\r\n      if (isExpenses) {\r\n        setEditingExpenseDetailsId(id);\r\n        setExpensesSummaryDrawerOpen(true);\r\n      }\r\n      if (isAssetsLiabilities) {\r\n        setEditingAssetLiabilityId(id);\r\n        setAssetsLiabilitiesDrawerOpen(true);\r\n      }\r\n      if (isAcademicResults) {\r\n        setEditingAcademicResultId(id);\r\n        setAcademicResultsDrawerOpen(true);\r\n      }\r\n      if (isVoluntaryServices) {\r\n        setEditingVoluntaryServiceId(id);\r\n        setVoluntaryServiceDrawerOpen(true);\r\n      }\r\n      if (isPayments) {\r\n        setEditingPaymentId(id);\r\n        setPaymentDrawerOpen(true);\r\n      }\r\n      if (isInterview) {\r\n        setEditingInterviewId(id);\r\n        setInterviewDrawerOpen(true);\r\n      }\r\n      if (isTasks) {\r\n        setEditingTaskId(id);\r\n        setTasksDrawerOpen(true);\r\n      }\r\n    };\r\n\r\n    const handleAdd = () => {\r\n      if (isAboutMe) {\r\n        setEditingAboutMeId(null);\r\n        setAboutMeDrawerOpen(true);\r\n      }\r\n      if (isParents) {\r\n        setEditingParentId(null);\r\n        setParentsDrawerOpen(true);\r\n      }\r\n      if (isUniversityDetails) {\r\n        setEditingUniversityId(null);\r\n        setUniversityDetailsDrawerOpen(true);\r\n      }\r\n      if (isAttachments) {\r\n        setEditingAttachmentId(null);\r\n        setAttachmentsDrawerOpen(true);\r\n      }\r\n      if (isExpenses) {\r\n        setEditingExpenseDetailsId(null);\r\n        setExpensesSummaryDrawerOpen(true);\r\n      }\r\n      if (isAssetsLiabilities) {\r\n        setEditingAssetLiabilityId(null);\r\n        setAssetsLiabilitiesDrawerOpen(true);\r\n      }\r\n      if (isAcademicResults) {\r\n        setEditingAcademicResultId(null);\r\n        setAcademicResultsDrawerOpen(true);\r\n      }\r\n      if (isVoluntaryServices) {\r\n        setEditingVoluntaryServiceId(null);\r\n        setVoluntaryServiceDrawerOpen(true);\r\n      }\r\n      if (isPayments) {\r\n        setEditingPaymentId(null);\r\n        setPaymentDrawerOpen(true);\r\n      }\r\n      if (isInterview) {\r\n        setEditingInterviewId(null);\r\n        setInterviewDrawerOpen(true);\r\n      }\r\n      if (isTasks) {\r\n        setEditingTaskId(null);\r\n        setTasksDrawerOpen(true);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <SectionTable\r\n        data={data}\r\n        sectionKey={sectionKey}\r\n        sectionLabel={sectionLabel}\r\n        isDarkMode={isDarkMode}\r\n        selectedStudentid={selectedStudentid}\r\n        onEdit={selectedStudent ? handleEdit : null}\r\n        onAdd={selectedStudent ? handleAdd : null}\r\n      />\r\n    );\r\n  };\r\n\r\n  const TabContent = ({ sectionKey, data }) => renderRegion(sectionKey, data);\r\n\r\n  const renderTabContent = (tabValue) => {\r\n    const section = tabSections[tabValue];\r\n    return section.key === \"show_all\"\r\n      ? tabSections\r\n        .filter((s) => s.key !== \"show_all\")\r\n        .map((sec, i) => (\r\n          (isAdmin || (sec.key !== \"payments\" && sec.key !== \"interviews\")) && (\r\n            <TabContent key={i} sectionKey={sec.key} data={dataForSection(sec.key)} />\r\n          )\r\n        ))\r\n      : <TabContent sectionKey={section.key} data={dataForSection(section.key)} />;\r\n  };\r\n\r\n  const handleDownloadPDF = (async () => {\r\n    if (!selectedStudent || !studentData) {\r\n      return;\r\n    }\r\n    try {\r\n      const blob = await pdf(<StudentPDFDocument studentData={studentData} />).toBlob();\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      const firstName = selectedStudent.student_name || \"Unknown\";\r\n      const lastName = selectedStudent.student_surname || \"User\";\r\n      a.download = `${firstName} ${lastName} - Student Details PDF.pdf`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n    }\r\n  });\r\n\r\n  const isStudentWithNoData = isStudent && !isLoading && !selectedStudent;\r\n  const isUserWithData = (isAdmin || isStudent) && selectedStudent;\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          padding: \"12px\",\r\n          backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n          borderRadius: \"8px\",\r\n          marginBottom: \"12px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          border: \"1px solid #ccc\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"black\" }}\r\n        >\r\n          Student Details\r\n        </Typography>\r\n        {isStudentWithNoData && (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setSelectedStudentid(null);\r\n              setDrawerOpen(true);\r\n            }}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n              color: isDarkMode ? \"black\" : \"white\",\r\n              padding: \"2px 6px\",\r\n              textTransform: \"none\",\r\n            }}\r\n          >\r\n            <AddIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n            Start Application\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {isAdmin && (\r\n          <Grid item xs={12} sm={3} md={2}>\r\n            <Paper\r\n              sx={{\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                color: pageStyle.color,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                  padding: \"6px\",\r\n                  borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    marginLeft: 1,\r\n                  }}\r\n                >\r\n                  Search\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ padding: 2 }}>\r\n                <TextField\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  sx={{\r\n                    mb: 1,\r\n                    borderRadius: 1,\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                      \"& fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                    },\r\n                    \"& .MuiInputBase-input\": {\r\n                      color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    },\r\n                    \"& .MuiInputBase-input::placeholder\": {\r\n                      color: isDarkMode ? \"#B0B0B0\" : \"#666\",\r\n                    },\r\n                  }}\r\n                  placeholder=\"Search\"\r\n                  InputLabelProps={{ style: { color: isDarkMode ? \"#ffffff\" : \"#000000\" } }}\r\n                />\r\n                {isLoading ? (\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n                    <CircularProgress sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }} />\r\n                  </Box>\r\n                ) : (\r\n                  <div style={{ maxHeight: \"300px\", overflowY: \"auto\" }}>\r\n                    {studentDetails\r\n                      .filter(\r\n                        (s) =>\r\n                          s.student_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                          s.student_surname.toLowerCase().includes(searchQuery.toLowerCase())\r\n                      )\r\n                      .map((student, idx) => (\r\n                        <Card\r\n                          key={idx}\r\n                          sx={{\r\n                            mb: 0.5,\r\n                            boxShadow: 0,\r\n                            height: 55,\r\n                            cursor: \"pointer\",\r\n                            backgroundColor:\r\n                              selectedStudent?.id === student.id\r\n                                ? isDarkMode\r\n                                  ? \"white\"\r\n                                  : \"#1e293b\"\r\n                                : \"transparent\",\r\n                            color:\r\n                              selectedStudent?.id === student.id\r\n                                ? isDarkMode\r\n                                  ? \"#1e293b\"\r\n                                  : \"white\"\r\n                                : \"inherit\",\r\n                            \"&:hover\": {\r\n                              backgroundColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                              color: isDarkMode ? \"#1e293b\" : \"white\",\r\n                            },\r\n                          }}\r\n                          onClick={async () => {\r\n                            setSelectedStudent(student);\r\n                            setSelectedStudentid(student.id);\r\n                            setIsLoading(true);\r\n                            await fetchStudentData(student.id);\r\n                            const sectionKeys = [\r\n                              \"about-me\",\r\n                              \"parents-details\",\r\n                              \"university-details\",\r\n                              \"attachments\",\r\n                              \"expenses-summary\",\r\n                              \"assets-liabilities\",\r\n                              \"academic-results\",\r\n                              \"voluntary-services\",\r\n                              \"payments\",\r\n                              \"interviews\",\r\n                              \"tasks\",\r\n                            ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n                            const responses = await Promise.all(\r\n                              sectionKeys.map((key) => fetchSectionData(key, student.id))\r\n                            );\r\n                            setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n                            setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n                            setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n                            setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n                            setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n                            setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n                            setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n                            setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n                            if (isAdmin) {\r\n                              setPayments(responses[sectionKeys.indexOf(\"payments\")]);\r\n                              setInterviews(responses[sectionKeys.indexOf(\"interviews\")]);\r\n                            }\r\n                            setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n                          }}\r\n                        >\r\n                          <CardContent sx={{ padding: \"10px\" }}>\r\n                            <Typography variant=\"body1\" sx={{ fontWeight: \"bold\" }}>\r\n                              {student.student_name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">{student.student_surname}</Typography>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                  </div>\r\n                )}\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n\r\n        {(isAdmin || selectedStudent) && (\r\n          <Grid item xs={12} sm={9} md={isStudent ? 12 : 10}>\r\n            <Paper\r\n              sx={{\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                color: pageStyle.color,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                  borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                  padding: \"6px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"#1e293b\", marginLeft: 1 }}\r\n                >\r\n                  Student Details Portal\r\n                </Typography>\r\n                {isUserWithData && (\r\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0, margin: 0, padding: 0 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        setDrawerOpen(false);\r\n                        setTimeout(() => setDrawerOpen(true), 50);\r\n                        setSelectedStudentid(selectedStudent?.id);\r\n                      }}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                        color: isDarkMode ? \"black\" : \"white\",\r\n                        padding: \"2px 6px\",\r\n                        margin: 0,\r\n                        textTransform: \"none\",\r\n                      }}\r\n                    >\r\n                      <EditIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                      Edit\r\n                    </Button>\r\n                    {isAdmin && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={handleDownloadPDF}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                        color: isDarkMode ? \"black\" : \"white\",\r\n                        padding: \"2px 6px\",\r\n                        margin: 0,\r\n                        textTransform: \"none\",\r\n                        marginLeft: 1,\r\n                      }}\r\n                    >\r\n                      <DownloadIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                      Download PDF\r\n                    </Button>\r\n                  )}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              {isLoading ? (\r\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: 4 }}>\r\n                  <CircularProgress sx={{ color: isDarkMode ? \"white\" : \"black\" }} />\r\n                  <Typography variant=\"body1\" sx={{ ml: 2, color: isDarkMode ? \"white\" : \"black\" }}>\r\n                    Loading...\r\n                  </Typography>\r\n                </Box>\r\n              ) : selectedStudent ? (\r\n                <Box sx={{ padding: 1.5 }}>\r\n                  <Grid container spacing={1}>\r\n                    {Object.entries(selectedStudent).map(([key, value], i) => (\r\n                      key !== \"id\" &&\r\n                      key !== \"user_id\" &&\r\n                      key !== \"employment_status_attachment\" && (\r\n                        <React.Fragment key={i}>\r\n                          <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                            <Typography variant=\"body1\">\r\n                              <strong>{capitalizeWords(key.replace(/_/g, \" \"))}</strong>\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                            <Typography variant=\"body1\">{value}</Typography>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      )\r\n                    ))}\r\n                  </Grid>\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body1\" sx={{ m: 2, fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"black\" }}>\r\n                  No Record Selected\r\n                </Typography>\r\n              )}\r\n\r\n              {!isLoading && selectedStudent && (\r\n                <Box sx={{ p: 1, overflowX: \"auto\" }}>\r\n                  <Tabs\r\n                    value={tabValue}\r\n                    onChange={(event, newValue) => setTabValue(newValue)}\r\n                    aria-label=\"tabs\"\r\n                    sx={{\r\n                      \"& .MuiTab-root\": {\r\n                        fontWeight: \"600\",\r\n                        textTransform: \"capitalize\",\r\n                        mr: -2,\r\n                        color: isDarkMode ? \"white\" : \"black\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    {tabSections.map((section, i) => (\r\n                      <Tab key={i} label={section.label} />\r\n                    ))}\r\n                  </Tabs>\r\n                </Box>\r\n              )}\r\n\r\n              {!isLoading && selectedStudent && (\r\n                <Box sx={{ p: 2 }}>{renderTabContent(tabValue)}</Box>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {renderDrawer()}\r\n\r\n      <AboutusDrawer\r\n        open={aboutMeDrawerOpen}\r\n        onClose={() => {\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        aboutMeId={editingAboutMeId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAboutMe(selectedStudentid);\r\n          }\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n      />\r\n\r\n      <ParentsDrawer\r\n        open={parentsDrawerOpen}\r\n        onClose={() => {\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        parentId={editingParentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchParentsDetails(selectedStudentid);\r\n          }\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n      />\r\n\r\n      <UniversityDetailsDrawer\r\n        open={universityDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        universityDetailsId={editingUniversityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchUniversityDetails(selectedStudentid);\r\n          }\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n      />\r\n\r\n      <AttachmentsDrawer\r\n        open={attachmentsDrawerOpen}\r\n        onClose={() => {\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        attachmentId={editingAttachmentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAttachmentsDetails(selectedStudentid);\r\n          }\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n      />\r\n\r\n      <ExpenseDetailsDrawer\r\n        open={expenseDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        expenseDetailsId={editingExpenseDetailsId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchExpenseDetails(selectedStudentid);\r\n          }\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n      />\r\n\r\n      <AssetsLiabilitiesDrawer\r\n        open={assetsLiabilitiesDrawerOpen}\r\n        onClose={() => {\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        assetLiabilityId={editingAssetLiabilityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAssetsLiabilities(selectedStudentid);\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n      />\r\n\r\n      <AcademicResultsDrawer\r\n        open={academicResultsDrawerOpen}\r\n        onClose={() => {\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        resultId={editingAcademicResultId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAcademicResults(selectedStudentid);\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n      />\r\n\r\n      <VoluntaryServiceDrawer\r\n        open={voluntaryServiceDrawerOpen}\r\n        onClose={() => {\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        recordId={editingVoluntaryServiceId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchVoluntaryServices(selectedStudentid);\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n      />\r\n\r\n      <PaymentDrawer\r\n        open={paymentDrawerOpen}\r\n        onClose={() => setPaymentDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingPaymentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchPaymentsDetails(selectedStudentid);\r\n          }\r\n          setPaymentDrawerOpen(false);\r\n          setEditingPaymentId(null);\r\n        }}\r\n      />\r\n\r\n      <InterviewDrawer\r\n        open={interviewDrawerOpen}\r\n        onClose={() => setInterviewDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingInterviewId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchInterviewsDetails(selectedStudentid);\r\n          }\r\n          setInterviewDrawerOpen(false);\r\n          setEditingInterviewId(null);\r\n        }}\r\n      />\r\n\r\n      <TaskDetailsDrawer\r\n        open={tasksDrawerOpen}\r\n        onClose={() => {\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        taskId={editingTaskId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchTasks(selectedStudentid);\r\n          }\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;"],"names":["races","provinces","maritalStatus","yes_no","employmentStatus","highestEducation","semesters","financeType","religions","studentType","nationality","parentRelationship","API_BASE_URL","process","_ref","open","onClose","studentId","onSave","onDelete","isDarkMode","useContext","ThemeContext","selectedDate","setSelectedDate","useState","emailError","setEmailError","whatsappError","setWhatsappError","alternativeError","setAlternativeError","emergencyError","setEmergencyError","nameError","setNameError","surnameError","setSurnameError","emergencyContactOption","setEmergencyContactOption","deleteConfirmationOpen","setDeleteConfirmationOpen","deleteAttachmentConfirmationOpen","setDeleteAttachmentConfirmationOpen","errorMessage","setErrorMessage","isLoading","setIsLoading","drawerWidth","useMediaQuery","user","JSON","parse","localStorage","getItem","isAdmin","user_type","relationshipTypes","formData","setFormData","student_name","student_surname","student_nationality","student_id_passport_number","student_type","student_religion","student_finance_type","student_whatsapp_number","student_alternative_number","student_email_address","student_highest_education","student_home_address","student_suburb","student_area_code","student_province","student_date_of_birth","student_race","student_marital_status","student_employment_status","student_job_title","student_company_of_employment","student_current_salary","student_number_of_siblings","student_siblings_bursary","student_willow_relationship","relation_type","relation_hr_contact","relation_branch","relation_name","relation_surname","relation_employee_code","relation_reference","student_emergency_contact_name","student_emergency_contact_number","student_emergency_contact_relationship","student_emergency_contact_address","student_status","student_status_comment","employment_status_attachment","employment_status_attachment_name","statusOptions","validateEmail","email","test","validateNumber","number","useEffect","async","response","fetch","concat","ok","Error","statusText","data","json","dates","Date","prev","_objectSpread","error","console","fetchStudentData","handleDateChange","newDate","formattedDate","format","handleChange","e","name","value","target","sanitizedValue","includes","replace","slice","prevState","handleFileChange","file","files","fileNameWithoutExtension","handleViewFile","window","handleDeleteAttachmentClick","handleDeleteAttachmentCancel","handleEmergencyContactChange","newValue","handleSave","userId","user_id","url","method","body","FormData","Object","keys","forEach","key","undefined","append","savedStudent","cleanStudent","handleDeleteCancel","filteredFinanceType","filter","type","_jsx","Drawer","anchor","children","_jsxs","Box","sx","width","height","display","flexDirection","backgroundColor","padding","borderBottom","Typography","variant","fontWeight","color","mt","flex","overflowY","justifyContent","alignItems","CircularProgress","Grid","container","spacing","map","index","renderField","fieldStyles","borderRadius","inputLabelProps","style","item","xs","Autocomplete","onChange","options","renderInput","params","TextField","label","InputLabelProps","labels","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","wrapperClassName","className","helperText","inputProps","maxLength","pattern","required","marginTop","disabled","multiline","rows","WebkitTextFillColor","Button","component","borderColor","hidden","_Fragment","onClick","startIcon","VisibilityIcon","DeleteIcon","toLowerCase","split","word","charAt","toUpperCase","join","Divider","borderTop","gap","size","CloseIcon","handleDeleteClick","SaveIcon","AddIcon","Dialog","DialogTitle","DialogContent","DialogActions","err","aboutMeId","then","res","initialData","student_details_portal_id","i","toString","padStart","p","question","qNum","id","isUpdate","dataToSend","headers","stringify","result","parentId","cellNumberError","setCellNumberError","validateCellNumber","parent_email_address","parent_cell_number","parent_relationship","parent_name","parent_surname","parent_employment_status","parent_industry","parent_highest_education","parent_salary","parent_grant","parent_other_income","numericValue","entries","_ref2","universityDetailsId","normalizedData","Institution_name","name_of_Course","intake_year","Semester","NQF_Level","Current_Year","Student_Number","previously_funded","previously_funded_amount","tuition","tuition_amount","accommodation","accommodation_fee","textbooks","textbooks_fee","travel","travel_fee","total_university_expense","previous_bursary_org_1","previous_bursary_org_1_name","previous_bursary_org_1_amount","previous_bursary_org_1_contact","previous_bursary_org_2","previous_bursary_org_2_name","previous_bursary_org_2_amount","previous_bursary_org_2_contact","previous_bursary_org_3","previous_bursary_org_3_name","previous_bursary_org_3_amount","previous_bursary_org_3_contact","Application_Process_Status","handleAutocompleteChange","newFormData","conditionalField","conditionalFields","find","field","select","amount","bursaryFields","bursaryConditionalFields","contact","yesNoOptions","intakeYearOptions","isConditionalSelect","some","isConditionalamount","isBursarySelect","isBursaryField","customLabel","relatedBursary","relatedSelect","InputProps","readOnly","attachmentId","Attachments_Name","attachments_name","Attachments_Description","attachments_description","Attachment","Student_Details_Portal_id","expenseDetailsId","Father_Monthly_Salary","Mother_Monthly_Salary","Spouse_Monthly_Salary","Applicant_Monthly_Salary","Rent_Income","Grants","Other_Income","Rent_Bond_Expense","Rates_Expense","Utilities_Expense","Groceries_Expense","Transport_Petrol_Expense","Telephone_Expense","Medical_Aid_Expense","Insurance_Expense","Other_Expense","total_income","total_expenses","father_monthly_salary","mother_monthly_salary","spouse_monthly_salary","applicant_monthly_salary","rent_income","grants","other_income","rent_bond_expense","rates_expense","utilities_expense","groceries_expense","transport_petrol_expense","telephone_expense","medical_aid_expense","insurance_expense","other_expense","Number","catch","totalIncome","reduce","total","parseFloat","totalExpenses","idx","char","inputMode","toFixed","updatedFormData","stringFormData","acc","savedData","assetLiabilityId","Gold_Silver","Cash_in_Bank","Investments","Liabilities","gold_silver","cash_in_bank","investments","liabilities","resultId","Results_Module","results_module","Results_Percentage","results_percentage","Results_Attachment","Results_Attachment_Name","results_attachment_name","recordId","Organisation","organisation","Contact_Person","contact_person","Contact_Person_Number","contact_person_number","Hours_Contributed","hours_contributed","Proof_of_Service","Service_Attachment_Name","service_attachment_name","createdBy","first_name","last_name","date","payments_date","Payments_Expense_Type","payments_expense_type","Payments_Vendor","payments_vendor","Payments_Expense_Amount","payments_expense_amount","Payments_Date","Payments_ET_Number","payments_et_number","Payments_Attachment_Name","payments_attachment_name","Proof_of_Payment","Payment_Created_By","payment_created_by","Interviewer_Name","interviewer_name","Year_of_Interview","year_of_interview","Interview_Q01","interview_q01","Interview_Q02","interview_q02","Interview_Q03","interview_q03","Interview_Q04","interview_q04","Interview_Q05","interview_q05","Interview_Q06","interview_q06","Interview_Q07","interview_q07","Interview_Q08","interview_q08","Interview_Q09","interview_q09","Interview_Q10","interview_q10","Interview_Q11","interview_q11","Interview_Q12","interview_q12","Interview_Q13","interview_q13","Interview_Q14","interview_q14","Interview_Q15","interview_q15","Interview_Q16","interview_q16","Interview_Q17","interview_q17","Interview_Q18","interview_q18","Interview_Q19","interview_q19","Interview_Q20","interview_q20","Interview_Q21","interview_q21","Interview_Q22","interview_q22","Interview_Q23","interview_q23","Interview_Q24","interview_q24","Interview_Created_By","interview_created_by","Date_Stamp","date_stamp","questionNumber","taskId","useMemo","isStudent","created_by","task_description","task_status","task_comment","taskStatusOptions","aboutMeQuestions","interviewQuestions","styles","StyleSheet","create","page","fontSize","fontFamily","lineHeight","header","marginBottom","paddingBottom","logo","objectFit","headerText","textAlign","headerTitle1","headerTitle2","fontStyle","reportTime","sectionTitle","studentDetailsRow","studentDetailsField","borderBottomWidth","borderBottomColor","borderBottomStyle","studentDetailsLabel","studentDetailsValue","table","borderStyle","borderWidth","tableRow","minHeight","tableCellLabel","borderRightWidth","borderRightColor","wordBreak","minWidth","overflow","tableCellValue","breakLongWords","str","maxLen","arguments","length","match","RegExp","toSentenceCase","removePrefix","cleanLabel","cleanSection","startsWith","mapQuestion","section","questions","parseInt","StudentDetailsSection","k","v","push","View","Text","row","rowIdx","_ref3","RenderSection","_ref4","title","_ref5","_ref6","wrap","RenderMultiple","_ref7","showNumbering","_ref8","val","_ref9","studentData","Document","Page","Image","src","toLocaleString","year","month","day","hour","minute","hour12","student_details","about_me","assets_liabilities","expense_details","interview","university_details","parents_details","attachments","payments","results","tasks","voluntary_service","SectionTable","sectionKey","sectionLabel","selectedStudentid","onEdit","onAdd","searchTerm","setSearchTerm","columns","setColumns","visibleColumns","setVisibleColumns","columnWidths","setColumnWidths","anchorEl","setAnchorEl","showSearch","setShowSearch","sortConfig","setSortConfig","direction","setPage","rowsPerPage","setRowsPerPage","columnSearchTerm","setColumnSearchTerm","totalRecords","setTotalRecords","loading","setLoading","searchRef","useRef","resizingRef","Boolean","theme","useTheme","isSmallScreen","breakpoints","down","sentenceCase","useCallback","c","calculateColumnWidth","col","calculatedWidth","Math","max","cols","loadData","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","handleMouseMove","startX","startWidth","newWidth","clientX","stopResizing","userSelect","startResizing","preventDefault","filteredData","sort","a","b","aVal","bVal","localeCompare","paginatedData","filteredColumns","lowerTerm","raw","formatted","border","ref","transition","opacity","InputBase","placeholder","px","startAdornment","SearchIcon","mr","endAdornment","IconButton","ClearIcon","Tooltip","currentTarget","ViewColumnIcon","exportToExcel","exportData","s","fromEntries","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","DownloadIcon","Menu","PaperProps","maxHeight","boxShadow","autoFocus","onKeyDown","stopPropagation","mb","MenuItem","dense","FormControlLabel","control","Checkbox","checked","indexOf","updated","splice","toggleColumn","my","ListItemIcon","RefreshIcon","ListItemText","primary","primaryTypographyProps","tableLayout","cursor","position","handleSort","paddingRight","ArrowDropUpIcon","ArrowDropDownIcon","onMouseDown","right","top","background","EditIcon","textOverflow","whiteSpace","toLocaleDateString","colSpan","Select","n","MuiMenuItem","min","ArrowBackIosIcon","ArrowForwardIosIcon","StudentDetails","searchQuery","setSearchQuery","studentDetails","setStudentDetails","selectedStudent","setSelectedStudent","setSelectedStudentid","tabValue","setTabValue","drawerOpen","setDrawerOpen","aboutMeDrawerOpen","setAboutMeDrawerOpen","editingAboutMeId","setEditingAboutMeId","parentsDrawerOpen","setParentsDrawerOpen","editingParentId","setEditingParentId","universityDetailsDrawerOpen","setUniversityDetailsDrawerOpen","editingUniversityId","setEditingUniversityId","attachmentsDrawerOpen","setAttachmentsDrawerOpen","editingAttachmentId","setEditingAttachmentId","expenseDetailsDrawerOpen","setExpensesSummaryDrawerOpen","editingExpenseDetailsId","setEditingExpenseDetailsId","assetsLiabilitiesDrawerOpen","setAssetsLiabilitiesDrawerOpen","editingAssetLiabilityId","setEditingAssetLiabilityId","academicResultsDrawerOpen","setAcademicResultsDrawerOpen","editingAcademicResultId","setEditingAcademicResultId","voluntaryServiceDrawerOpen","setVoluntaryServiceDrawerOpen","editingVoluntaryServiceId","setEditingVoluntaryServiceId","paymentDrawerOpen","setPaymentDrawerOpen","editingPaymentId","setEditingPaymentId","interviewDrawerOpen","setInterviewDrawerOpen","editingInterviewId","setEditingInterviewId","tasksDrawerOpen","setTasksDrawerOpen","editingTaskId","setEditingTaskId","setStudentData","aboutMe","setAboutMe","parentsDetails","setParentsDetails","universityDetails","setUniversityDetails","setAttachments","expensesSummary","setExpensesSummary","assetsLiabilities","setAssetsLiabilities","academicResults","setAcademicResults","voluntaryServices","setVoluntaryServices","setPayments","interviews","setInterviews","setTasks","pageStyle","formatDate","dateString","fetchStudentDetails","_data$","Array","isArray","_formattedData$","formattedData","student","updatedStudent","fetchSectionData","updatedItem","endsWith","mounted","sectionKeys","responses","Promise","all","initializeData","fetchAboutMe","fetchParentsDetails","fetchUniversityDetails","fetchAttachmentsDetails","fetchExpenseDetails","fetchAssetsLiabilities","fetchAcademicResults","fetchVoluntaryServices","fetchPaymentsDetails","fetchInterviewsDetails","fetchTasks","handleDeleteStudent","remainingStudents","nextStudent","tabSections","capitalizeWords","dataForSection","TabContent","renderRegion","isAboutMe","isParents","isUniversityDetails","isAttachments","isExpenses","isAssetsLiabilities","isAcademicResults","isVoluntaryServices","isPayments","isInterview","isTasks","sec","handleAdd","isStudentWithNoData","isUserWithData","textTransform","marginRight","sm","md","Paper","marginLeft","Card","CardContent","margin","setTimeout","blob","pdf","StudentPDFDocument","toBlob","URL","createObjectURL","createElement","href","firstName","lastName","download","click","revokeObjectURL","ml","React","pb","m","overflowX","Tabs","Tab","renderTabContent","DrawerForm","formattedStudent","existingIndex","findIndex","updatedDetails","AboutusDrawer","ParentsDrawer","UniversityDetailsDrawer","AttachmentsDrawer","ExpenseDetailsDrawer","AssetsLiabilitiesDrawer","AcademicResultsDrawer","VoluntaryServiceDrawer","PaymentDrawer","InterviewDrawer","TaskDetailsDrawer"],"sourceRoot":""}