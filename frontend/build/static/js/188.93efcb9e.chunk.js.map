{"version":3,"file":"static/js/188.93efcb9e.chunk.js","mappings":"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","sources":["pages/CreateAdmin.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  InputBase,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Divider,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select,\r\n  MenuItem as MuiMenuItem,\r\n  Drawer,\r\n  TextField,\r\n  Grid,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  CircularProgress, // Added for loading spinner\r\n} from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowUpward\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useTheme, useMediaQuery } from \"@mui/material\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { ThemeContext } from '../config/ThemeContext';\r\nimport '../css/GenericTable.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Validation Schema for Form\r\nconst validationSchema = yup.object({\r\n  first_name: yup.string().required(\"First name is required\"),\r\n  last_name: yup.string().required(\"Last name is required\"),\r\n  email_address: yup\r\n    .string()\r\n    .email(\"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  password: yup.string().min(6, \"Password should be at least 6 characters\").required(\"Password is required\"),\r\n  user_type: yup.string().required(\"Please select user type\"),\r\n});\r\n\r\nconst UserReport = () => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [users, setUsers] = useState([]);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [editUser, setEditUser] = useState(null);\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [columns, setColumns] = useState(['first_name', 'last_name', 'email_address', 'user_type']);\r\n  const [visibleColumns, setVisibleColumns] = useState(['first_name', 'last_name', 'email_address', 'user_type']);\r\n  const [columnWidths, setColumnWidths] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [columnSearchTerm, setColumnSearchTerm] = useState('');\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false); // Added loading state\r\n  const searchRef = useRef(null);\r\n  const resizingRef = useRef(null);\r\n  const open = Boolean(anchorEl);\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const userType = JSON.parse(localStorage.getItem(\"user\"))?.user_type;\r\n\r\n  const sentenceCase = useCallback((str) => {\r\n    return str.replace(/_/g, ' ').replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n  }, []);\r\n\r\n  const calculateColumnWidth = useCallback((col) => {\r\n    const headerText = sentenceCase(col);\r\n    const charCount = headerText.length;\r\n    const pixelsPerChar = 10;\r\n    const minWidth = 50;\r\n    const calculatedWidth = charCount * pixelsPerChar + 40;\r\n    return Math.max(minWidth, calculatedWidth);\r\n  }, [sentenceCase]);\r\n\r\n  const fetchUsers = useCallback(async () => {\r\n    setLoading(true); // Set loading to true before fetching\r\n    let apiUrl = userType === \"admin\" ? `${API_BASE_URL}/users` : `${API_BASE_URL}/users/${JSON.parse(localStorage.getItem(\"user\"))?.user_id}`;\r\n    try {\r\n      const response = await fetch(apiUrl);\r\n      const data = await response.json();\r\n      const records = userType === \"admin\" ? (Array.isArray(data) ? data : []) : [data];\r\n      setUsers(records);\r\n      if (records.length > 0) {\r\n        const cols = ['first_name', 'last_name', 'email_address', 'user_type'];\r\n        setColumns(cols);\r\n        setVisibleColumns(cols);\r\n        setColumnWidths(cols.reduce((acc, col) => ({\r\n          ...acc,\r\n          [col]: calculateColumnWidth(col),\r\n        }), {}));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n      setUsers([]);\r\n    } finally {\r\n      setLoading(false); // Set loading to false after fetching\r\n    }\r\n  }, [userType, calculateColumnWidth]);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [fetchUsers]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\r\n        setShowSearch(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (resizingRef.current) {\r\n      const { col, startX, startWidth } = resizingRef.current;\r\n      const newWidth = Math.max(50, startWidth + (e.clientX - startX));\r\n      setColumnWidths((prev) => ({ ...prev, [col]: newWidth }));\r\n    }\r\n  }, []);\r\n\r\n  const stopResizing = useCallback(() => {\r\n    resizingRef.current = null;\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', stopResizing);\r\n    document.body.style.userSelect = '';\r\n  }, [handleMouseMove]);\r\n\r\n  const startResizing = useCallback(\r\n    (e, col) => {\r\n      e.preventDefault();\r\n      resizingRef.current = { col, startX: e.clientX, startWidth: columnWidths[col] || calculateColumnWidth(col) };\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', stopResizing);\r\n      document.body.style.userSelect = 'none';\r\n    },\r\n    [columnWidths, calculateColumnWidth, handleMouseMove, stopResizing]\r\n  );\r\n\r\n  const fetchUserById = async (id) => {\r\n    setLoading(true); // Set loading to true before fetching\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users/${id}`);\r\n      const data = await response.json();\r\n      setEditUser(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching user by ID:\", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false after fetching\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      first_name: editUser ? editUser.first_name : \"\",\r\n      last_name: editUser ? editUser.last_name : \"\",\r\n      email_address: editUser ? editUser.email_address : \"\",\r\n      password: \"\",\r\n      user_type: \"admin\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values) => {\r\n      setLoading(true); // Set loading to true before saving\r\n      try {\r\n        const response = editUser\r\n          ? await fetch(`${API_BASE_URL}/users/${editUser.user_id}`, {\r\n              method: \"PUT\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(values),\r\n            })\r\n          : await fetch(`${API_BASE_URL}/users`, {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(values),\r\n            });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setUsers((prevUsers) =>\r\n            editUser\r\n              ? prevUsers.map((user) => (user.user_id === data.user_id ? data : user))\r\n              : [...prevUsers, data]\r\n          );\r\n          setDrawerOpen(false);\r\n        } else {\r\n          console.error(\"Failed to save data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error saving user:\", error);\r\n      } finally {\r\n        setLoading(false); // Set loading to false after saving\r\n      }\r\n    },\r\n  });\r\n\r\n  const handleCreateClick = () => {\r\n    setEditUser(null);\r\n    setDrawerOpen(true);\r\n  };\r\n\r\n  const handleEditClick = (user) => {\r\n    fetchUserById(user.user_id);\r\n    setDrawerOpen(true);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!editUser) return;\r\n    setLoading(true); // Set loading to true before deleting\r\n    try {\r\n      await fetch(`${API_BASE_URL}/users/${editUser.user_id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      setUsers((prevUsers) => prevUsers.filter((user) => user.user_id !== editUser.user_id));\r\n      setDeleteConfirmationOpen(false);\r\n      setDrawerOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete user:\", error);\r\n    } finally {\r\n      setLoading(false); // Set loading to false after deleting\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const handleCloseDrawer = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  const toggleColumn = (col) => {\r\n    if (visibleColumns.includes(col)) {\r\n      setVisibleColumns((prev) => prev.filter((c) => c !== col));\r\n    } else {\r\n      const idx = columns.indexOf(col);\r\n      const updated = [...visibleColumns];\r\n      updated.splice(idx, 0, col);\r\n      setVisibleColumns(updated);\r\n    }\r\n  };\r\n\r\n  const resetColumns = () => {\r\n    setVisibleColumns(columns);\r\n    setColumnWidths(columns.reduce((acc, col) => ({\r\n      ...acc,\r\n      [col]: calculateColumnWidth(col),\r\n    }), {}));\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const data = filteredUsers.map((user) =>\r\n      Object.fromEntries(visibleColumns.map((col) => [sentenceCase(col), user[col]]))\r\n    );\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'UserReport');\r\n    XLSX.writeFile(wb, 'user_report.xlsx');\r\n  };\r\n\r\n  const handleSort = (col) => {\r\n    setSortConfig((prev) => {\r\n      if (prev.key === col) {\r\n        return {\r\n          key: col,\r\n          direction:\r\n            prev.direction === 'asc' ? 'desc' : prev.direction === 'desc' ? null : 'asc',\r\n        };\r\n      } else {\r\n        return { key: col, direction: 'asc' };\r\n      }\r\n    });\r\n    setPage(0);\r\n  };\r\n\r\n  const filteredUsers = users\r\n    .filter((user) =>\r\n      visibleColumns.some((col) => {\r\n        const val = user[col];\r\n        return val != null && val.toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n      })\r\n    )\r\n    .sort((a, b) => {\r\n      if (!sortConfig.key || !sortConfig.direction) return 0;\r\n      const aVal = a[sortConfig.key];\r\n      const bVal = b[sortConfig.key];\r\n      if (aVal == null || bVal == null) return 0;\r\n      return sortConfig.direction === 'asc'\r\n        ? aVal.toString().localeCompare(bVal.toString())\r\n        : bVal.toString().localeCompare(aVal.toString());\r\n    });\r\n\r\n  const paginatedUsers = filteredUsers.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    setTotalRecords(filteredUsers.length);\r\n  }, [filteredUsers]);\r\n\r\n  const filteredColumns = columns.filter((col) => {\r\n    const lowerTerm = columnSearchTerm.toLowerCase();\r\n    const raw = col.toLowerCase();\r\n    const formatted = sentenceCase(col).toLowerCase();\r\n    return raw.includes(lowerTerm) || formatted.includes(lowerTerm);\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{ backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC', minHeight: '100vh', p: 2 }}\r\n      className={isDarkMode ? 'dark-mode' : ''}\r\n    >\r\n      {/* Header Section with Search and Icons */}\r\n      <Box sx={{ padding: \"12px\", backgroundColor: isDarkMode ? '#1e293b' : '#e1f5fe', borderRadius: \"8px\", marginBottom: \"12px\", border: '1px solid #ccc', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" sx={{ color: isDarkMode ? 'white' : 'black', fontWeight: \"bold\" }}>\r\n          User Information\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          {/* Search input field */}\r\n          <Box\r\n            ref={searchRef}\r\n            sx={{\r\n              width: showSearch ? (isSmallScreen ? 120 : 220) : 0,\r\n              height: 36,\r\n              overflow: 'hidden',\r\n              transition: 'width 0.3s ease-in-out, opacity 0.3s ease-in-out',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              opacity: showSearch ? 1 : 0,\r\n            }}\r\n          >\r\n            <InputBase\r\n              placeholder=\"Search\"\r\n              value={searchTerm}\r\n              onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n                setPage(0);\r\n              }}\r\n              sx={{\r\n                backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n                color: isDarkMode ? 'white' : 'black',\r\n                px: 1.5,\r\n                height: '100%',\r\n                fontSize: '0.85rem',\r\n                borderRadius: 1,\r\n                border: `1px solid ${isDarkMode ? '#4A5568' : '#CBD5E0'}`,\r\n                width: '100%',\r\n                minWidth: 0,\r\n              }}\r\n              startAdornment={<SearchIcon sx={{ mr: 1 }} fontSize=\"small\" />}\r\n              endAdornment={\r\n                searchTerm && (\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setSearchTerm('');\r\n                      setPage(0);\r\n                    }}\r\n                    sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n                  >\r\n                    <ClearIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                )\r\n              }\r\n            />\r\n          </Box>\r\n\r\n          {/* Search icon toggle */}\r\n          <Tooltip title={showSearch ? 'Close Search' : 'Search'}>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => setShowSearch((prev) => !prev)}\r\n              sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n            >\r\n              {showSearch ? <ClearIcon fontSize=\"small\" /> : <SearchIcon fontSize=\"small\" />}\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          {/* Other icons – hidden on small screen when search is open */}\r\n          {!(isSmallScreen && showSearch) && (\r\n            <>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Column Visibility\">\r\n                <IconButton size=\"small\" onClick={(e) => setAnchorEl(e.currentTarget)} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <ViewColumnIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Export to Excel\">\r\n                <IconButton size=\"small\" onClick={exportToExcel} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <DownloadIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              {userType === \"admin\" && (\r\n                <>\r\n                  <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n                  <Tooltip title=\"Create User\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={handleCreateClick}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: isDarkMode ? 'white' : 'black',\r\n                        color: isDarkMode ? 'black' : 'white',\r\n                        padding: \"2px 6px\",\r\n                        textTransform: \"none\",\r\n                        fontSize: '0.85rem',\r\n                      }}\r\n                    >\r\n                      <AddIcon sx={{ mr: 0.5, fontSize: 15 }} />\r\n                      Create\r\n                    </Button>\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Column Visibility Menu */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={() => setAnchorEl(null)}\r\n        PaperProps={{\r\n          sx: {\r\n            minWidth: 200,\r\n            maxHeight: 300,\r\n            p: 1,\r\n            backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n            boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.15)',\r\n            borderRadius: 2,\r\n          },\r\n        }}\r\n      >\r\n        <InputBase\r\n          autoFocus\r\n          placeholder=\"Search Columns\"\r\n          value={columnSearchTerm}\r\n          onChange={(e) => setColumnSearchTerm(e.target.value)}\r\n          onKeyDown={(e) => e.stopPropagation()}\r\n          sx={{\r\n            mb: 1,\r\n            px: 1,\r\n            fontSize: '0.7rem',\r\n            backgroundColor: isDarkMode ? '#334155' : '#f1f5f9',\r\n            borderRadius: 1,\r\n            width: '100%',\r\n            height: '28px',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n          }}\r\n        />\r\n        {filteredColumns.map((col) => (\r\n          <MenuItem key={col} dense>\r\n            <FormControlLabel\r\n              control={<Checkbox size=\"small\" checked={visibleColumns.includes(col)} onChange={() => toggleColumn(col)} />}\r\n              label={<span style={{ fontSize: '0.7rem' }}>{sentenceCase(col)}</span>}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n        <Divider sx={{ my: 1 }} />\r\n        <MenuItem dense onClick={() => { resetColumns(); setAnchorEl(null); }}>\r\n          <ListItemIcon><RefreshIcon fontSize=\"small\" /></ListItemIcon>\r\n          <ListItemText primary=\"Reset Columns\" primaryTypographyProps={{ fontSize: '0.7rem' }} />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      {/* Table with Loading Spinner */}\r\n      <div className=\"generic-table-container\">\r\n        {loading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '200px' }}>\r\n            <CircularProgress sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }} />\r\n          </Box>\r\n        ) : (\r\n          <table className=\"generic-table\" style={{ backgroundColor: isDarkMode ? '#1e293b' : '#fff', tableLayout: 'fixed' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: isDarkMode ? 'white' : '#1e293b', width: 50, minWidth: 50 }}></th>\r\n                {visibleColumns.map((col) => (\r\n                  <th\r\n                    key={col}\r\n                    style={{\r\n                      color: isDarkMode ? 'white' : '#1e293b',\r\n                      cursor: 'pointer',\r\n                      position: 'relative',\r\n                      width: columnWidths[col] || calculateColumnWidth(col),\r\n                      minWidth: 50,\r\n                    }}\r\n                    onClick={(e) => {\r\n                      if (e.target.className !== 'resize-handle') {\r\n                        handleSort(col);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', paddingRight: '10px' }}>\r\n                      <span>{sentenceCase(col)}</span>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        {sortConfig.key === col && sortConfig.direction === 'asc' && <ArrowDropUpIcon fontSize=\"small\" />}\r\n                        {sortConfig.key === col && sortConfig.direction === 'desc' && <ArrowDropDownIcon fontSize=\"small\" />}\r\n                        {sortConfig.key === col && sortConfig.direction === null}\r\n                      </Box>\r\n                    </Box>\r\n                    <span\r\n                      className=\"resize-handle\"\r\n                      onMouseDown={(e) => startResizing(e, col)}\r\n                      style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 0,\r\n                        height: '100%',\r\n                        width: '5px',\r\n                        cursor: 'col-resize',\r\n                        background: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        userSelect: 'none',\r\n                      }}\r\n                    >\r\n                      <span style={{ fontSize: '12px', color: isDarkMode ? '#F7FAFC' : '#1e293b' }}>|</span>\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {paginatedUsers.length > 0 ? (\r\n                paginatedUsers.map((user) => (\r\n                  <tr key={user.user_id}>\r\n                    <td style={{ color: isDarkMode ? 'white' : '#1e293b', width: 50, minWidth: 50 }}>\r\n                      <Button\r\n                        onClick={() => handleEditClick(user)}\r\n                        size=\"small\"\r\n                        sx={{ color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n                      >\r\n                        <EditIcon fontSize=\"small\" />\r\n                      </Button>\r\n                    </td>\r\n                    {visibleColumns.map((col) => {\r\n                      const isUserTypeCol = col === 'user_type';\r\n                      return (\r\n                        <td\r\n                          key={col}\r\n                          style={{\r\n                            color: isDarkMode ? 'white' : '#1e293b',\r\n                            width: columnWidths[col] || calculateColumnWidth(col),\r\n                            minWidth: 50,\r\n                            overflow: 'hidden',\r\n                            textOverflow: 'ellipsis',\r\n                            whiteSpace: 'nowrap',\r\n                          }}\r\n                        >\r\n                          {isUserTypeCol ? (\r\n                            <span\r\n                              style={{\r\n                                backgroundColor: user[col] === 'student' ? '#1e88e5' : user[col] === 'admin' ? '#43a047' : '#9e9e9e',\r\n                                color: '#fff',\r\n                                padding: '2px 8px',\r\n                                borderRadius: '12px',\r\n                                fontSize: '0.75rem',\r\n                                display: 'inline-block',\r\n                                textTransform: 'capitalize',\r\n                                whiteSpace: 'nowrap',\r\n                              }}\r\n                            >\r\n                              {user[col]}\r\n                            </span>\r\n                          ) : (\r\n                            user[col]\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={visibleColumns.length + 1} className=\"no-matching-records\">\r\n                    {users.length === 0 ? 'No records found' : 'No matching records found'}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {!loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\r\n          <Box sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            gap: 2,\r\n            border: '1px solid',\r\n            borderColor: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n            borderRadius: '8px',\r\n            padding: '6px 12px',\r\n            backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n          }}>\r\n            <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n              Rows per page:\r\n            </Typography>\r\n            <Select\r\n              value={rowsPerPage}\r\n              onChange={(e) => {\r\n                setRowsPerPage(parseInt(e.target.value));\r\n                setPage(0);\r\n              }}\r\n              size=\"small\"\r\n              sx={{\r\n                color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n                '.MuiSelect-icon': { color: isDarkMode ? '#F7FAFC' : '#1e293b' },\r\n                backgroundColor: isDarkMode ? '#4A5568' : '#E2E8F0',\r\n                borderRadius: '4px',\r\n                fontSize: '0.85rem',\r\n                minWidth: '60px',\r\n              }}\r\n            >\r\n              {[10, 15, 25, 50, 100].map((n) => (\r\n                <MuiMenuItem key={n} value={n}>{n}</MuiMenuItem>\r\n              ))}\r\n            </Select>\r\n            <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n              {page * rowsPerPage + 1}-{Math.min((page + 1) * rowsPerPage, totalRecords)} of {totalRecords}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={() => setPage((p) => Math.max(0, p - 1))}\r\n              disabled={page === 0}\r\n              size=\"small\"\r\n              sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n            >\r\n              <ArrowBackIosIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => setPage((p) => (p + 1) * rowsPerPage < totalRecords ? p + 1 : p)}\r\n              disabled={(page + 1) * rowsPerPage >= totalRecords}\r\n              size=\"small\"\r\n              sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n            >\r\n              <ArrowForwardIosIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Drawer for creating or editing user */}\r\n      <Drawer anchor=\"right\" open={drawerOpen} onClose={handleCloseDrawer}>\r\n        <Box sx={{ width: isSmallScreen ? 330 : 500, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#ffffff' }}>\r\n          <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\" }}>\r\n            <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>{editUser ? \"Edit User\" : \"Create User\"}</Typography>\r\n          </Box>\r\n          <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                    name=\"first_name\"\r\n                    value={formik.values.first_name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.first_name && Boolean(formik.errors.first_name)}\r\n                    helperText={formik.touched.first_name && formik.errors.first_name}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      '& .MuiInputBase-input': { color: isDarkMode ? 'white' : '#1e293b' },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                    name=\"last_name\"\r\n                    value={formik.values.last_name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.last_name && Boolean(formik.errors.last_name)}\r\n                    helperText={formik.touched.last_name && formik.errors.last_name}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      '& .MuiInputBase-input': { color: isDarkMode ? 'white' : '#1e293b' },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Email Address\"\r\n                    fullWidth\r\n                    name=\"email_address\"\r\n                    value={formik.values.email_address}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.email_address && Boolean(formik.errors.email_address)}\r\n                    helperText={formik.touched.email_address && formik.errors.email_address}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      '& .MuiInputBase-input': { color: isDarkMode ? 'white' : '#1e293b' },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Password\"\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      '& .MuiInputBase-input': { color: isDarkMode ? 'white' : '#1e293b' },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"User Type\"\r\n                    value={editUser ? editUser.user_type : \"admin\"}\r\n                    disabled\r\n                    fullWidth\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      '& .MuiInputBase-input': { color: isDarkMode ? 'white' : '#1E293B' },\r\n                      '& .MuiInputBase-input.Mui-disabled': { WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B' },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Box>\r\n          <Divider />\r\n          <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\", marginTop: \"auto\" }}>\r\n            <Box sx={{ display: \"flex\", gap: 1 }}>\r\n              <Button\r\n                onClick={handleCloseDrawer}\r\n                startIcon={<CloseIcon />}\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              >\r\n                Close\r\n              </Button>\r\n              {editUser && userType !== \"student\" && (\r\n                <Button\r\n                  onClick={handleDeleteClick}\r\n                  startIcon={<DeleteIcon />}\r\n                  size=\"small\"\r\n                  color=\"error\"\r\n                  variant=\"outlined\"\r\n                  sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              )}\r\n            </Box>\r\n            <Button\r\n              onClick={formik.handleSubmit}\r\n              startIcon={editUser ? <SaveIcon /> : <AddIcon />}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              sx={{ backgroundColor: '#1976d2', color: 'white' }}\r\n            >\r\n              {editUser ? \"Save\" : \"Create\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Drawer>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this user?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserReport;"],"names":["API_BASE_URL","process","validationSchema","yup","first_name","required","last_name","email_address","email","password","min","user_type","UserReport","_JSON$parse","isDarkMode","useContext","ThemeContext","users","setUsers","useState","drawerOpen","setDrawerOpen","editUser","setEditUser","deleteConfirmationOpen","setDeleteConfirmationOpen","searchTerm","setSearchTerm","columns","setColumns","visibleColumns","setVisibleColumns","columnWidths","setColumnWidths","anchorEl","setAnchorEl","showSearch","setShowSearch","sortConfig","setSortConfig","key","direction","page","setPage","rowsPerPage","setRowsPerPage","columnSearchTerm","setColumnSearchTerm","totalRecords","setTotalRecords","loading","setLoading","searchRef","useRef","resizingRef","open","Boolean","theme","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","userType","JSON","parse","localStorage","getItem","sentenceCase","useCallback","str","replace","c","toUpperCase","calculateColumnWidth","col","calculatedWidth","length","Math","max","fetchUsers","async","_JSON$parse2","apiUrl","user_id","response","fetch","data","json","records","Array","isArray","cols","reduce","acc","error","console","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleMouseMove","e","startX","startWidth","newWidth","clientX","prev","stopResizing","body","style","userSelect","startResizing","preventDefault","formik","useFormik","initialValues","enableReinitialize","onSubmit","method","headers","stringify","values","ok","prevUsers","map","user","handleEditClick","id","fetchUserById","handleDeleteCancel","handleCloseDrawer","filteredUsers","filter","some","val","toString","toLowerCase","includes","sort","a","b","aVal","bVal","localeCompare","paginatedUsers","slice","filteredColumns","lowerTerm","raw","formatted","_jsxs","Box","sx","backgroundColor","minHeight","p","className","children","padding","borderRadius","marginBottom","border","display","justifyContent","alignItems","_jsx","Typography","variant","color","fontWeight","gap","ref","width","height","overflow","transition","opacity","InputBase","placeholder","value","onChange","px","fontSize","minWidth","startAdornment","SearchIcon","mr","endAdornment","IconButton","size","onClick","ClearIcon","Tooltip","title","_Fragment","currentTarget","ViewColumnIcon","exportToExcel","Object","fromEntries","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","DownloadIcon","Button","handleCreateClick","textTransform","AddIcon","Menu","onClose","PaperProps","maxHeight","boxShadow","autoFocus","onKeyDown","stopPropagation","mb","MenuItem","dense","FormControlLabel","control","Checkbox","checked","idx","indexOf","updated","splice","toggleColumn","label","Divider","my","ListItemIcon","RefreshIcon","ListItemText","primary","primaryTypographyProps","CircularProgress","tableLayout","cursor","position","handleSort","paddingRight","ArrowDropUpIcon","ArrowDropDownIcon","onMouseDown","right","top","background","EditIcon","isUserTypeCol","textOverflow","whiteSpace","colSpan","mt","borderColor","Select","parseInt","n","MuiMenuItem","disabled","ArrowBackIosIcon","ArrowForwardIosIcon","Drawer","anchor","flexDirection","borderBottom","flex","overflowY","handleSubmit","Grid","container","spacing","item","xs","TextField","fullWidth","name","handleChange","touched","errors","helperText","InputLabelProps","type","WebkitTextFillColor","marginTop","startIcon","CloseIcon","handleDeleteClick","DeleteIcon","SaveIcon","Dialog","DialogTitle","DialogContent","DialogActions"],"sourceRoot":""}