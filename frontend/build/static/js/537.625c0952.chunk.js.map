{"version":3,"file":"static/js/537.625c0952.chunk.js","mappings":"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","sources":["components/lov.js","pages/Drawer/StudentDetailDrawer.js","pages/Drawer/AboutUsDrawer.js","pages/Drawer/ParentsDrawer.js","pages/Drawer/UniversityDetailsDrawer.js","pages/Drawer/AttachmentsDrawer.js","pages/Drawer/ExpenseDetailsDrawer.js","pages/Drawer/AssetsLiabilitiesDrawer.js","pages/Drawer/AcademicResultsDrawer.js","pages/Drawer/VoluntaryServiceDrawer.js","pages/Drawer/PaymentDrawer.js","pages/Drawer/InterviewDrawer.js","pages/Drawer/TaskDetailsDrawer.js","pages/StudentPDFDocument.js","pages/StudentDetails.js"],"sourcesContent":["export const races = [\r\n  \"Asian\",\r\n  \"Black\",\r\n  \"Caucasian\",\r\n  \"Multiracial\"\r\n];\r\n\r\nexport const provinces = [\r\n  \"Eastern Cape\",\r\n  \"Free State\",\r\n  \"Gauteng\",\r\n  \"KwaZulu-Natal\",\r\n  \"Limpopo\",\r\n  \"Mpumalanga\",\r\n  \"Northern Cape\",\r\n  \"North West\",\r\n  \"Western Cape\"\r\n];\r\n\r\nexport const maritalStatus = [\r\n  \"Divorced\",\r\n  \"Married\",\r\n  \"Single\",\r\n  \"Widowed\"\r\n];\r\n\r\nexport const yes_no = [\r\n  \"Yes\",\r\n  \"No\"\r\n];\r\n\r\nexport const employmentStatus = [\r\n  \"Disabled Grant\",\r\n  \"Full Time Employed\",\r\n  \"Part-Time Employed\",\r\n  \"Pensioner\",\r\n  \"Self Employed\",\r\n  \"Student\",\r\n  \"Unemployed\"\r\n];\r\n\r\nexport const highestEducation = [\r\n  // \"NQF 1\", \"NQF 2\", \"NQF 3\", \"NQF 4\",\r\n  // \"NQF 5\", \"NQF 6\", \"NQF 7\", \"NQF 8\",\r\n  // \"NQF 9\", \"NQF 10\", \"Matric\",\r\n  \"NQF 5 - Matric/Higher Certificate\",\"NQF 6 - Diploma\",\r\n  \"NQF 7 - Degree\",\"NQF 8 - Honors/Postgraduate\",\"NQF 9 - Masters\",\"NQF 10 - PhD/Doctorate\"\r\n];\r\n\r\nexport const semesters = [\r\n  \"1st Semester (January-June)\", \"2nd Semester (July-Decemeber)\"\r\n]\r\n\r\nexport const financeType = [\r\n  \"Staff Bursary\",\r\n  \"Student Loan\",\r\n  \"Zakah\"\r\n];\r\n\r\nexport const religions = [\r\n  \"African beliefs\",\r\n  \"Christianity\",\r\n  \"Hinduism\",\r\n  \"Islam\",\r\n  \"Judaism\"\r\n];\r\n\r\nexport const studentType = [\r\n  \"Currently in matric\",\r\n  \"Currently in university\"\r\n];\r\n\r\nexport const nationality = [\r\n  \"Angola\", \"Congo\", \"Equatorial Quinea\", \"Kenya\",\r\n  \"Mozambique\", \"Nigeria\", \"Uganda\", \"India\",\r\n  \"Botswana\", \"Central African Republic\", \"Ghana\",\r\n  \"Malawi\", \"Pakistan\", \"South African\", \"Bangladesh\",\r\n  \"Somalian\", \"Lesotho\", \"Ivory Coast\", \"Burundi\"\r\n];\r\n\r\nexport const emergencyContactRelationship = [\r\n  \"Mother\", \"Father\", \"Brother\", \"Sister\",\r\n  \"Aunty\", \"Uncle\", \"Grand Mother\", \"Grand Father\"\r\n];\r\n\r\nexport const parentRelationship = [\r\n  \"Mother\", \"Father\"\r\n];\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport {\r\n  studentType,\r\n  religions,\r\n  financeType,\r\n  races,\r\n  maritalStatus,\r\n  employmentStatus,\r\n  highestEducation,\r\n  nationality,\r\n  provinces,\r\n  yes_no,\r\n} from \"../../components/lov\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { format, parse } from 'date-fns';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst StudentDetailDrawer = ({ open, onClose, studentId, onSave, onDelete }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [whatsappError, setWhatsappError] = useState(\"\");\r\n  const [alternativeError, setAlternativeError] = useState(\"\");\r\n  const [emergencyError, setEmergencyError] = useState(\"\");\r\n  const [emergencyContactOption, setEmergencyContactOption] = useState(\"\");\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [deleteAttachmentConfirmationOpen, setDeleteAttachmentConfirmationOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userType = user?.user_type;\r\n  const isAdmin = userType === \"admin\";\r\n\r\n  const relationshipTypes = [\r\n    \"Staff\",\r\n    \"Dependent of Staff\",\r\n    \"Family\",\r\n    \"Referral\",\r\n    \"Director/Board Member or stakeholder\"\r\n  ];\r\n\r\n  const [formData, setFormData] = useState({\r\n    student_name: \"\",\r\n    student_surname: \"\",\r\n    student_nationality: \"\",\r\n    student_id_passport_number: \"\",\r\n    student_type: \"\",\r\n    student_religion: \"\",\r\n    student_finance_type: \"\",\r\n    student_whatsapp_number: \"\",\r\n    student_alternative_number: \"\",\r\n    student_email_address: \"\",\r\n    student_highest_education: \"\",\r\n    student_home_address: \"\",\r\n    student_suburb: \"\",\r\n    student_area_code: \"\",\r\n    student_province: \"\",\r\n    student_date_of_birth: \"\",\r\n    student_race: \"\",\r\n    student_marital_status: \"\",\r\n    student_employment_status: \"\",\r\n    student_job_title: \"\",\r\n    student_company_of_employment: \"\",\r\n    student_current_salary: \"\",\r\n    student_number_of_siblings: \"\",\r\n    student_siblings_bursary: \"\",\r\n    student_willow_relationship: \"\",\r\n    relation_type: \"\",\r\n    relation_hr_contact: \"\",\r\n    relation_branch: \"\",\r\n    relation_name: \"\",\r\n    relation_surname: \"\",\r\n    relation_employee_code: \"\",\r\n    relation_reference: \"\",\r\n    student_emergency_contact_name: \"\",\r\n    student_emergency_contact_number: \"\",\r\n    student_emergency_contact_relationship: \"\",\r\n    student_emergency_contact_address: \"\",\r\n    student_status: \"Pending\",\r\n    student_status_comment: \"\",\r\n    employment_status_attachment: null,\r\n    employment_status_attachment_name: \"\",\r\n  });\r\n\r\n  const statusOptions = [\"Received\", \"Pending\", \"Approved\", \"Declined\"];\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateNumber = (number) => {\r\n    const numberRegex = /^\\d{10}$/;\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (studentId) {\r\n        const fetchStudentData = async () => {\r\n          setIsLoading(true);\r\n          try {\r\n            const response = await fetch(`${API_BASE_URL}/student-details/${studentId}`);\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to fetch student data: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            const dates = data.student_date_of_birth ? parse(data.student_date_of_birth, 'dd/MM/yyyy', new Date()) : null;\r\n            setSelectedDate(dates);\r\n            setFormData((prev) => ({\r\n              ...prev,\r\n              ...data,\r\n              student_date_of_birth: dates,\r\n              student_status: data.student_status || \"Pending\",\r\n              student_status_comment: data.student_status_comment || \"\",\r\n              relation_type: data.relation_type || \"\",\r\n              relation_hr_contact: data.relation_hr_contact || \"\",\r\n              relation_branch: data.relation_branch || \"\",\r\n              relation_name: data.relation_name || \"\",\r\n              relation_surname: data.relation_surname || \"\",\r\n              relation_employee_code: data.relation_employee_code || \"\",\r\n              relation_reference: data.relation_reference || \"\",\r\n              employment_status_attachment: null,\r\n              employment_status_attachment_name: data.employment_status_attachment_name || \"\",\r\n            }));\r\n            setEmergencyContactOption(data.student_emergency_contact_name ? \"Add new\" : \"\");\r\n            setEmailError(data.student_email_address && !validateEmail(data.student_email_address) ? \"Please enter a valid email address\" : \"\");\r\n            setWhatsappError(data.student_whatsapp_number && !validateNumber(data.student_whatsapp_number) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n            setAlternativeError(data.student_alternative_number && !validateNumber(data.student_alternative_number) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n            setEmergencyError(data.student_emergency_contact_number && !validateNumber(data.student_emergency_contact_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n          } catch (error) {\r\n            console.error(\"Error fetching student data:\", error);\r\n            setErrorMessage(\"Failed to load student data. Please try again.\");\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        };\r\n        fetchStudentData();\r\n      } else {\r\n        setSelectedDate(null);\r\n        setFormData({\r\n          student_name: '',\r\n          student_surname: '',\r\n          student_nationality: '',\r\n          student_id_passport_number: '',\r\n          student_type: '',\r\n          student_religion: '',\r\n          student_finance_type: '',\r\n          student_whatsapp_number: '',\r\n          student_alternative_number: '',\r\n          student_email_address: '',\r\n          student_highest_education: '',\r\n          student_home_address: '',\r\n          student_suburb: '',\r\n          student_area_code: '',\r\n          student_province: '',\r\n          student_date_of_birth: '',\r\n          student_race: '',\r\n          student_marital_status: '',\r\n          student_employment_status: '',\r\n          student_job_title: '',\r\n          student_company_of_employment: '',\r\n          student_current_salary: '',\r\n          student_number_of_siblings: '',\r\n          student_siblings_bursary: '',\r\n          student_willow_relationship: '',\r\n          relation_type: '',\r\n          relation_hr_contact: '',\r\n          relation_branch: '',\r\n          relation_name: '',\r\n          relation_surname: '',\r\n          relation_employee_code: '',\r\n          relation_reference: '',\r\n          student_emergency_contact_name: '',\r\n          student_emergency_contact_number: '',\r\n          student_emergency_contact_relationship: '',\r\n          student_emergency_contact_address: '',\r\n          student_status: 'Pending',\r\n          student_status_comment: '',\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: '',\r\n        });\r\n        setEmergencyContactOption(\"\");\r\n        setEmailError(\"\");\r\n        setWhatsappError(\"\");\r\n        setAlternativeError(\"\");\r\n        setEmergencyError(\"\");\r\n        setErrorMessage(\"\");\r\n      }\r\n    }\r\n  }, [open, studentId]);\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, student_date_of_birth: formattedDate }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let sanitizedValue = value;\r\n\r\n    if ([\"student_whatsapp_number\", \"student_alternative_number\", \"student_emergency_contact_number\"].includes(name)) {\r\n      sanitizedValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n    }\r\n\r\n    setFormData((prevState) => ({ ...prevState, [name]: sanitizedValue }));\r\n\r\n    if (name === \"student_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_whatsapp_number\") {\r\n      setWhatsappError(sanitizedValue && !validateNumber(sanitizedValue) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_alternative_number\") {\r\n      setAlternativeError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_emergency_contact_number\") {\r\n      setEmergencyError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_willow_relationship\") {\r\n      if (value === \"No\") {\r\n        setFormData((prevState) => ({\r\n          ...prevState,\r\n          relation_type: \"\",\r\n          relation_hr_contact: \"\",\r\n          relation_branch: \"\",\r\n          relation_name: \"\",\r\n          relation_surname: \"\",\r\n          relation_employee_code: \"\",\r\n          relation_reference: \"\",\r\n        }));\r\n      }\r\n    }\r\n    if (name === \"relation_type\" && formData.student_willow_relationship === \"Yes\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        relation_hr_contact: \"\",\r\n        relation_branch: \"\",\r\n        relation_name: \"\",\r\n        relation_surname: \"\",\r\n        relation_employee_code: \"\",\r\n        relation_reference: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        employment_status_attachment_name: fileNameWithoutExtension,\r\n        employment_status_attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (studentId) {\r\n      window.open(`${API_BASE_URL}/student-details/view-attachment/${studentId}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentClick = () => {\r\n    setDeleteAttachmentConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteAttachmentConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/student-details/delete-attachment/${studentId}`, {\r\n        method: \"PUT\",\r\n      });\r\n      if (response.ok) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: \"\",\r\n        }));\r\n        setDeleteAttachmentConfirmationOpen(false);\r\n      } else {\r\n        setErrorMessage(\"Failed to delete attachment. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting attachment:\", err);\r\n      setErrorMessage(\"Error deleting attachment. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentCancel = () => {\r\n    setDeleteAttachmentConfirmationOpen(false);\r\n  };\r\n\r\n  const handleEmergencyContactChange = (e, newValue) => {\r\n    setEmergencyContactOption(newValue);\r\n    if (newValue === \"Same as above\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: formData.student_name,\r\n        student_emergency_contact_number: formData.student_whatsapp_number,\r\n        student_emergency_contact_relationship: \"Self\",\r\n        student_emergency_contact_address: formData.student_home_address,\r\n      }));\r\n      setEmergencyError(formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    } else {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: \"\",\r\n        student_emergency_contact_number: \"\",\r\n        student_emergency_contact_relationship: \"\",\r\n        student_emergency_contact_address: \"\",\r\n      }));\r\n      setEmergencyError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (formData.student_email_address && !validateEmail(formData.student_email_address)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n    if (formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number)) {\r\n      setWhatsappError(\"WhatsApp number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n    if (formData.student_alternative_number && !validateNumber(formData.student_alternative_number)) {\r\n      setAlternativeError(\"Alternative number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n    if (formData.student_emergency_contact_number && !validateNumber(formData.student_emergency_contact_number)) {\r\n      setEmergencyError(\"Emergency contact number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n\r\n    const userId = user?.user_id;\r\n    const url = studentId\r\n      ? `${API_BASE_URL}/student-details/update/${studentId}`\r\n      : `${API_BASE_URL}/student-details/insert`;\r\n    const method = studentId ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    Object.keys(formData).forEach((key) => {\r\n      if (key !== \"employment_status_attachment\" && formData[key] !== null && formData[key] !== undefined) {\r\n        body.append(key, formData[key]);\r\n      }\r\n    });\r\n    if (formData.employment_status_attachment) {\r\n      body.append(\"employment_status_attachment\", formData.employment_status_attachment);\r\n    }\r\n    if (!studentId) {\r\n      body.append(\"user_id\", userId);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        body,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const savedStudent = await response.json();\r\n        const cleanStudent = {\r\n          ...savedStudent,\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: savedStudent.employment_status_attachment_name || \"\",\r\n        };\r\n        onSave(cleanStudent);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save data:\", response.statusText);\r\n        setErrorMessage(\"Failed to save data. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving student data:\", error);\r\n      setErrorMessage(\"An error occurred. Please try again.\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/student-details/delete/${studentId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete student: ${response.statusText}`);\r\n      }\r\n\r\n      onDelete(studentId);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n      setErrorMessage(\"Failed to delete student. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const filteredFinanceType = formData.student_religion === \"Islam\" \r\n    ? financeType \r\n    : financeType.filter(type => type !== \"Zakah\");\r\n\r\n  const renderField = (key, index) => {\r\n    const fieldStyles = {\r\n      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      borderRadius: '8px',\r\n      '& .MuiInputBase-input': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n      '&& .MuiFormLabel-root': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n    };\r\n    const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n    const relationFields = [\r\n      \"relation_type\",\r\n      \"relation_hr_contact\",\r\n      \"relation_branch\",\r\n      \"relation_name\",\r\n      \"relation_surname\",\r\n      \"relation_employee_code\",\r\n      \"relation_reference\",\r\n    ];\r\n\r\n    if (relationFields.includes(key)) {\r\n      if (formData.student_willow_relationship !== \"Yes\") {\r\n        return null;\r\n      }\r\n      if (key === \"relation_type\") {\r\n        return (\r\n          <Grid item xs={12} key={index}>\r\n            <Autocomplete\r\n              value={formData[key] || \"\"}\r\n              onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n              options={relationshipTypes}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Relationship Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n              )}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n      if (!formData.relation_type) {\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Staff\" || formData.relation_type === \"Dependent of Staff\") {\r\n        if ([\"relation_hr_contact\", \"relation_branch\", \"relation_name\", \"relation_surname\", \"relation_employee_code\"].includes(key)) {\r\n          const labels = {\r\n            relation_hr_contact: \"HR Contact\",\r\n            relation_branch: \"Branch\",\r\n            relation_name: \"Name\",\r\n            relation_surname: \"Surname\",\r\n            relation_employee_code: \"Employee Code\",\r\n          };\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label={labels[key]}\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Family\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Who are you related to\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"How are you related\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Director/Board Member or stakeholder\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Referral\") {\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Reference Relation\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    const employmentFields = [\"student_job_title\", \"student_company_of_employment\", \"student_current_salary\"];\r\n    if (employmentFields.includes(key)) {\r\n      const validEmploymentStatuses = [\"Full Time Employed\", \"Part-Time Employed\", \"Self Employed\"];\r\n      if (!validEmploymentStatuses.includes(formData.student_employment_status)) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (key === \"student_date_of_birth\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              wrapperClassName={\"datepicker\"}\r\n              className={\"datepicker\"}\r\n              label=\"Student Date of Birth\"\r\n              name=\"student_date_of_birth\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              format=\"MM/dd/yyyy\"\r\n              sx={fieldStyles}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          </LocalizationProvider>\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_number_of_siblings\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Number of Siblings\"\r\n            name=\"student_number_of_siblings\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={formData.student_number_of_siblings || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_siblings_bursary\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={yes_no}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Have any of your siblings received or are receiving assistance from this bursary fund?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_id_passport_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student ID/Passport Number\"\r\n            name=\"student_id_passport_number\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={formData.student_id_passport_number || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_email_address\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Email Address\"\r\n            name=\"student_email_address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={formData.student_email_address || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emailError}\r\n            helperText={emailError}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_whatsapp_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student WhatsApp Number\"\r\n            name=\"student_whatsapp_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_whatsapp_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!whatsappError}\r\n            helperText={whatsappError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_alternative_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Alternative Number\"\r\n            name=\"student_alternative_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_alternative_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!alternativeError}\r\n            helperText={alternativeError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_name\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={emergencyContactOption}\r\n            onChange={handleEmergencyContactChange}\r\n            options={[\"Same as above\", \"Add new\"]}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Emergency Contact\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          {emergencyContactOption === \"Add new\" && (\r\n            <TextField\r\n              label=\"Student Emergency Contact Name\"\r\n              name=\"student_emergency_contact_name\"\r\n              fullWidth\r\n              value={formData.student_emergency_contact_name || \"\"}\r\n              onChange={handleChange}\r\n              sx={{ ...fieldStyles, marginTop: 2 }}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_number\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Number\"\r\n            name=\"student_emergency_contact_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emergencyError}\r\n            helperText={emergencyError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_relationship\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Relationship\"\r\n            name=\"student_emergency_contact_relationship\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_relationship || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_address\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Address\"\r\n            name=\"student_emergency_contact_address\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_address || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"Pending\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={statusOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status_comment\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Status Comment\"\r\n            name=\"student_status_comment\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={formData.student_status_comment || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_willow_relationship\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={yes_no}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Does the student have any relationship to the Willowton Group?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_nationality\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={nationality}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Nationality\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_province\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={provinces}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Province\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={studentType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_religion\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={religions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Religion\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_finance_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={filteredFinanceType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Finance Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_race\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={races}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Race\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_marital_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={maritalStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Marital Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_employment_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={employmentStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Employment Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          <TextField\r\n            label=\"Employment Status Attachment Name\"\r\n            name=\"employment_status_attachment_name\"\r\n            fullWidth\r\n            disabled\r\n            value={formData.employment_status_attachment_name || \"\"}\r\n            sx={{\r\n              ...fieldStyles,\r\n              marginTop: 2,\r\n              '& .MuiInputBase-input.Mui-disabled': {\r\n                WebkitTextFillColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              },\r\n            }}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"label\"\r\n            sx={{ ...fieldStyles, width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n          >\r\n            Upload Employment Status Attachment\r\n            <input type=\"file\" hidden onChange={handleFileChange} />\r\n          </Button>\r\n          {formData.employment_status_attachment_name && studentId && (\r\n            <>\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={handleViewFile}\r\n                startIcon={<VisibilityIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              >\r\n                View/Download Attachment\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                onClick={handleDeleteAttachmentClick}\r\n                startIcon={<DeleteIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n              >\r\n                Delete Attachment\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_highest_education\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Highest Education\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_date_stamp\" || key === \"id\" || key === \"user_id\" || key === \"student_industry\" || key === \"employment_status_attachment\" || key === \"employment_status_attachment_name\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \").toLowerCase().split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          label={label}\r\n          name={key}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        <Box sx={{ padding: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Student Details\r\n          </Typography>\r\n          {errorMessage && (\r\n            <Typography variant=\"body2\" color=\"error.main\" sx={{ mt: 1 }}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", padding: 2 }}>\r\n          {isLoading ? (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\" }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ padding: 2, borderTop: \"1px solid #ccc\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              startIcon={<CloseIcon />}\r\n              disabled={isLoading}\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            {studentId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n                startIcon={<DeleteIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            {!studentId ? (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Create\"}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<SaveIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Save\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Dialog\r\n          open={deleteConfirmationOpen}\r\n          onClose={handleDeleteCancel}\r\n        >\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={deleteAttachmentConfirmationOpen}\r\n          onClose={handleDeleteAttachmentCancel}\r\n        >\r\n          <DialogTitle>Confirm Attachment Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete the employment status attachment?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteAttachmentCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteAttachmentConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default StudentDetailDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AboutusDrawer = ({ open, onClose, studentId, aboutMeId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Custom questions\r\n  const questions = [\r\n    \"What inspired you to pursue your chosen field of study?*\",\r\n    \"How do you plan to use your education and skills to make a significant impact in this field?*\",\r\n    \"What special projects or initiatives have you undertaken in your academic life?*\",\r\n    \"Can you tell me about any academic awards or scholarships you have received?*\",\r\n    \"Provide examples or specific skills you have developed that demonstrates your commitment.*\",\r\n    \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?*\",\r\n    \"Once you have completed your studies, how will others benefit from it?*\",\r\n    \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?*\",\r\n    \"Have you previously been awarded a bursary?*\",\r\n    \"What do you think has been your most notable contribution to society thus far?*\",\r\n    \"Why do you think serving the community is important?*\",\r\n    \"Will you be doing any volunteer work during your studies?*\",\r\n    \"Are you willing to assist someone in need?*\",\r\n    \"Describe yourself in three words.*\",\r\n    \"What is your greatest strength?*\",\r\n    \"Describe your biggest mistake and what steps you have taken to rectify it.*\",\r\n    \"What personal achievement makes you proud?*\",\r\n    \"Are you self-motivated? Explain*\",\r\n    \"1st choice of study.*\",\r\n    \"2nd choice of study*\",\r\n    \"3rd choice of study.*\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (aboutMeId) {\r\n        // Editing mode\r\n        fetch(`${API_BASE_URL}/about-me/id/${aboutMeId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        // Creating new entry\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n        };\r\n        for (let i = 1; i <= 21; i++) {\r\n          initialData[`about_me_q${i.toString().padStart(2, \"0\")}`] = \"\";\r\n        }\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      // Cleanup when drawer closes\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, aboutMeId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/about-me/update/${formData.id}`\r\n      : `${API_BASE_URL}/about-me/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const dataToSend = { ...formData };\r\n    if (!isUpdate) delete dataToSend.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save About Me data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving About Me data:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open the dialog\r\n  };\r\n\r\n  // Handle the confirmation delete\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/about-me/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n      } else {\r\n        console.error(\"Failed to delete About Me entry\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting About Me entry:\", err);\r\n    }\r\n  };\r\n\r\n  // Handle cancel delete\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          width: drawerWidth,\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            About Me\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, i) => {\r\n              const qNum = (i + 1).toString().padStart(2, \"0\");\r\n              const key = `about_me_q${qNum}`;\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={key}\r\n                    fullWidth\r\n                    multiline\r\n                    value={formData[key] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff', // Dark/Light background\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n                      borderRadius: '8px', // Apply border-radius\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Input text color\r\n                      },\r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: '8px', // Apply border-radius to root element\r\n                      },\r\n                      '& .MuiFormLabel-root': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Label color\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }} // Label color for dark/light mode\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            borderTop: \"1px solid #ccc\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Border color for dark/light mode\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Red border color for delete button\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this entry?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AboutusDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\nimport { parentRelationship, employmentStatus, highestEducation } from \"../../components/lov\"; // Import LOVs\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ParentsDrawer = ({ open, onClose, studentId, parentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\"); // State for email validation error\r\n  const [cellNumberError, setCellNumberError] = useState(\"\"); // State for cell number validation error\r\n\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Email validation function\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Cell number validation function\r\n  const validateCellNumber = (number) => {\r\n    const cellRegex = /^\\d{10}$/;\r\n    return cellRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (parentId) {\r\n        fetch(`${API_BASE_URL}/parents-details/id/${parentId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n            // Validate email and cell number on load\r\n            if (data.parent_email_address) {\r\n              setEmailError(validateEmail(data.parent_email_address) ? \"\" : \"Please enter a valid email address\");\r\n            } else {\r\n              setEmailError(\"\");\r\n            }\r\n            if (data.parent_cell_number) {\r\n              setCellNumberError(validateCellNumber(data.parent_cell_number) ? \"\" : \"Cell number must be exactly 10 digits\");\r\n            } else {\r\n              setCellNumberError(\"\");\r\n            }\r\n          });\r\n      } else {\r\n        setFormData({\r\n          student_details_portal_id: studentId,\r\n          parent_relationship: \"\",\r\n          parent_name: \"\",\r\n          parent_surname: \"\",\r\n          parent_cell_number: \"\",\r\n          parent_email_address: \"\",\r\n          parent_employment_status: \"\",\r\n          parent_industry: \"\",\r\n          parent_highest_education: \"\",\r\n          parent_salary: \"\",\r\n          parent_grant: \"\",\r\n          parent_other_income: \"\",\r\n        });\r\n        setEmailError(\"\");\r\n        setCellNumberError(\"\");\r\n      }\r\n    } else {\r\n      setFormData({});\r\n      setEmailError(\"\");\r\n      setCellNumberError(\"\");\r\n    }\r\n  }, [open, parentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // Validate email on change\r\n    if (name === \"parent_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    // Validate cell number on change\r\n    if (name === \"parent_cell_number\") {\r\n      // Allow only digits and limit to 10\r\n      const numericValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n      setFormData((prev) => ({ ...prev, [name]: numericValue }));\r\n      setCellNumberError(numericValue && !validateCellNumber(numericValue) ? \"Cell number must be exactly 10 digits\" : \"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Prevent save if email or cell number is invalid\r\n    if (formData.parent_email_address && !validateEmail(formData.parent_email_address)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n    if (formData.parent_cell_number && !validateCellNumber(formData.parent_cell_number)) {\r\n      setCellNumberError(\"Cell number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/parents-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/parents-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setsuccessmessage(isUpdate ? \"Parent details updated successfully!\" : \"Parent details created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save parent data\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!formData.id) return;\r\n    setDeleteConfirmationOpen(false);\r\n    const res = await fetch(`${API_BASE_URL}/parents-details/delete/${formData.id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (res.ok) {\r\n      onSave(null);\r\n      // setsuccessmessage(\"Parent details deleted successfully!\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Parent Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.entries(formData).map(([key, value]) => {\r\n              if (key === \"id\" || key === \"student_details_portal_id\" || key === \"parent_date_stamp\") return null;\r\n\r\n              let label = key.replace(/_/g, \" \");\r\n              label = label\r\n                .split(\" \")\r\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                .join(\" \");\r\n\r\n              if (key === \"parent_relationship\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={parentRelationship}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_employment_status\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={employmentStatus}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_highest_education\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={highestEducation}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_email_address\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"email\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!emailError}\r\n                      helperText={emailError}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_cell_number\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"tel\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!cellNumberError}\r\n                      helperText={cellNumberError}\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                        pattern: \"[0-9]*\",\r\n                      }}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    name={key}\r\n                    label={label}\r\n                    fullWidth\r\n                    value={value || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={() => setDeleteConfirmationOpen(true)}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={() => setDeleteConfirmationOpen(false)}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDeleteConfirmationOpen(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ParentsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { semesters, highestEducation } from \"../../components/lov\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst UniversityDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  universityDetailsId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (universityDetailsId) {\r\n        fetch(`${API_BASE_URL}/university-details/id/${universityDetailsId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            const normalizedData = {\r\n              ...data,\r\n              // Normalize previous_bursary_org_X fields to \"Yes\" or \"No\"\r\n              // previous_bursary_org_1: data.previous_bursary_org_1 ? \"Yes\" : \"No\",\r\n              // previous_bursary_org_2: data.previous_bursary_org_2 ? \"Yes\" : \"No\",\r\n              // previous_bursary_org_3: data.previous_bursary_org_3 ? \"Yes\" : \"No\",\r\n              // previously_funded: data.previously_funded ? \"Yes\" : \"No\",\r\n              // tuition: data.tuition ? \"Yes\" : \"No\",\r\n              // accommodation: data.accommodation ? \"Yes\" : \"No\",\r\n              // textbooks: data.textbooks ? \"Yes\" : \"No\",\r\n              // travel: data.travel ? \"Yes\" : \"No\",\r\n            };\r\n            setFormData(normalizedData);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          Institution_name: \"\",\r\n          name_of_Course: \"\",\r\n          Intake_Year: \"\",\r\n          Semester: \"\",\r\n          NQF_Level: \"\",\r\n          Current_Year: \"\",\r\n          Student_Number: \"\",\r\n          previously_funded: \"\",\r\n          previously_funded_amount: \"\",\r\n          tuition: \"\",\r\n          tuition_amount: \"\",\r\n          accommodation: \"\",\r\n          accommodation_fee: \"\",\r\n          textbooks: \"\",\r\n          textbooks_fee: \"\",\r\n          travel: \"\",\r\n          travel_fee: \"\",\r\n          total_university_expense: \"\",\r\n          previous_bursary_org_1: \"\",\r\n          previous_bursary_org_1_name: \"\",\r\n          previous_bursary_org_1_amount: \"\",\r\n          previous_bursary_org_1_contact: \"\",\r\n          previous_bursary_org_2: \"\",\r\n          previous_bursary_org_2_name: \"\",\r\n          previous_bursary_org_2_amount: \"\",\r\n          previous_bursary_org_2_contact: \"\",\r\n          previous_bursary_org_3: \"\",\r\n          previous_bursary_org_3_name: \"\",\r\n          previous_bursary_org_3_amount: \"\",\r\n          previous_bursary_org_3_contact: \"\",\r\n          Application_Process_Status: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, universityDetailsId]);\r\n\r\n  // Calculate total university expense whenever relevant fields change\r\n  useEffect(() => {\r\n  const amountFields = [\r\n    'tuition_amount',\r\n    'accommodation_fee',\r\n    'textbooks_fee',\r\n    'travel_fee'\r\n  ];\r\n\r\n  const total = amountFields.reduce((sum, field) => {\r\n    const value = parseFloat(formData[field]) || 0;\r\n    return sum + value;\r\n  }, 0);\r\n\r\n  if (formData.total_university_expense !== total) {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      total_university_expense: total\r\n    }));\r\n  }\r\n// eslint-disable-next-line react-hooks/exhaustive-deps\r\n}, [\r\n  formData.tuition_amount,\r\n  formData.accommodation_fee,\r\n  formData.textbooks_fee,\r\n  formData.travel_fee\r\n]);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => {\r\n      const newFormData = { ...prev, [name]: value };\r\n      const conditionalField = conditionalFields.find(field => field.select === name);\r\n      if (conditionalField && value === \"No\") {\r\n        newFormData[conditionalField.amount] = \"\";\r\n      }\r\n\r\n      // Handle Previous Bursary Org fields\r\n      const bursaryFields = bursaryConditionalFields.find(field => field.select === name);\r\n      if (bursaryFields && value !== \"Yes\") {\r\n        newFormData[bursaryFields.name] = \"\";\r\n        newFormData[bursaryFields.amount] = \"\";\r\n        newFormData[bursaryFields.contact] = \"\";\r\n      }\r\n\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/university-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/university-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = {\r\n      ...formData,\r\n      // Convert Yes/No to boolean for API\r\n      // previous_bursary_org_1: formData.previous_bursary_org_1 === \"Yes\",\r\n      // previous_bursary_org_2: formData.previous_bursary_org_2 === \"Yes\",\r\n      // previous_bursary_org_3: formData.previous_bursary_org_3 === \"Yes\",\r\n      // previously_funded: formData.previously_funded === \"Yes\",\r\n      // tuition: formData.tuition === \"Yes\",\r\n      // accommodation: formData.accommodation === \"Yes\",\r\n      // textbooks: formData.textbooks === \"Yes\",\r\n      // travel: formData.travel === \"Yes\",\r\n    };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save University Details\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/university-details/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete University Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting University Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const yesNoOptions = [\"Yes\", \"No\"];\r\n\r\n  const conditionalFields = [\r\n    { select: \"previously_funded\", amount: \"previously_funded_amount\" },\r\n    { select: \"tuition\", amount: \"tuition_amount\" },\r\n    { select: \"accommodation\", amount: \"accommodation_fee\" },\r\n    { select: \"textbooks\", amount: \"textbooks_fee\" },\r\n    { select: \"travel\", amount: \"travel_fee\" },\r\n  ];\r\n\r\n  const bursaryConditionalFields = [\r\n    {\r\n      select: \"previous_bursary_org_1\",\r\n      name: \"previous_bursary_org_1_name\",\r\n      amount: \"previous_bursary_org_1_amount\",\r\n      contact: \"previous_bursary_org_1_contact\"\r\n    },\r\n    {\r\n      select: \"previous_bursary_org_2\",\r\n      name: \"previous_bursary_org_2_name\",\r\n      amount: \"previous_bursary_org_2_amount\",\r\n      contact: \"previous_bursary_org_2_contact\"\r\n    },\r\n    {\r\n      select: \"previous_bursary_org_3\",\r\n      name: \"previous_bursary_org_3_name\",\r\n      amount: \"previous_bursary_org_3_amount\",\r\n      contact: \"previous_bursary_org_3_contact\"\r\n    }\r\n  ];\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const renderField = (key, index) => {\r\n    if (\r\n      key === \"id\" ||\r\n      key === \"student_details_portal_id\" ||\r\n      key === \"university_details_date_stamp\"\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    const isConditionalSelect = conditionalFields.some(field => field.select === key);\r\n    const isConditionalamount = conditionalFields.some(field => field.amount === key);\r\n    const isBursarySelect = bursaryConditionalFields.some(field => field.select === key);\r\n    const isBursaryField = bursaryConditionalFields.some(field =>\r\n      field.name === key || field.amount === key || field.contact === key\r\n    );\r\n\r\n    if (isConditionalSelect) {\r\n      let customLabel = label;\r\n      if (key === \"tuition\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your tuition fees?\";\r\n      } else if (key === \"accommodation\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your accommodation fees?\";\r\n      } else if (key === \"textbooks\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your textbooks fees?\";\r\n      } else if (key === \"travel\") {\r\n        customLabel = \"Are you in need of financial assistance to cover your travel fees?\";\r\n      } else if (key === \"previously_funded\") {\r\n        customLabel = \"Were you previously Funded by the Willowton SANZAF Bursary Fund?\";\r\n      }\r\n\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={yesNoOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={customLabel} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (isBursarySelect) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={yesNoOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Were you funded by an organization previously?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (isBursaryField) {\r\n      const relatedBursary = bursaryConditionalFields.find(field =>\r\n        field.name === key || field.amount === key || field.contact === key\r\n      );\r\n      if (formData[relatedBursary.select] !== \"Yes\") return null;\r\n    }\r\n\r\n    if (isConditionalamount) {\r\n      const relatedSelect = conditionalFields.find(field => field.amount === key).select;\r\n      if (formData[relatedSelect] !== \"Yes\") return null;\r\n    }\r\n\r\n    if (key === \"Semester\" || key === \"semester\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={semesters}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"NQF_Level\" || key === \"nqf_level\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"total_university_expense\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            name={key}\r\n            label={label}\r\n            fullWidth\r\n            value={formData[key] || \"\"}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n            InputProps={{ readOnly: true }}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            University Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default UniversityDetailsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AttachmentsDrawer = ({ open, onClose, studentId, attachmentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!attachmentId) {\r\n      setFormData({\r\n        Attachments_Name: \"\",\r\n        Attachments_Description: \"\",\r\n        Attachment: null,\r\n        Student_Details_Portal_id: studentId,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Editing mode\r\n    fetch(`${API_BASE_URL}/attachments/id/${attachmentId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setFormData({\r\n          Attachments_Name: data.attachments_name || \"\",\r\n          Attachments_Description: data.attachments_description || \"\",\r\n          Attachment: null, // Don't preload binary data\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId,\r\n        });\r\n      });\r\n  }, [open, attachmentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        Attachments_Name: fileNameWithoutExtension,\r\n        Attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/attachments/update/${formData.id}`\r\n      : `${API_BASE_URL}/attachments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Attachments_Name\", formData.Attachments_Name);\r\n    body.append(\"Attachments_Description\", formData.Attachments_Description);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Attachment) {\r\n      body.append(\"Attachment\", formData.Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setSuccessMessage(isUpdate ? \"Updated successfully!\" : \"Created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save attachment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/attachments/delete/${formData.id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage(\"Deleted successfully!\");\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete attachment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/attachments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Attachment Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n               <TextField\r\n                label=\"Description\"\r\n                name=\"Attachments_Description\"\r\n                fullWidth\r\n                value={formData.Attachments_Description || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Attachments_Name\"\r\n                fullWidth\r\n                disabled\r\n                value={formData.Attachments_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\", borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                color=\"error\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AttachmentsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ExpenseDetailsDrawer = ({ open, onClose, studentId, expenseDetailsId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Father_Monthly_Salary: '',\r\n    Mother_Monthly_Salary: '',\r\n    Spouse_Monthly_Salary: '',\r\n    Applicant_Monthly_Salary: '',\r\n    Rent_Income: '',\r\n    Grants: '',\r\n    Other_Income: '',\r\n    Rent_Bond_Expense: '',\r\n    Rates_Expense: '',\r\n    Utilities_Expense: '',\r\n    Groceries_Expense: '',\r\n    Transport_Petrol_Expense: '',\r\n    Telephone_Expense: '',\r\n    Medical_Aid_Expense: '',\r\n    Insurance_Expense: '',\r\n    Other_Expense: '',\r\n    total_income: 0,\r\n    total_expenses: 0,\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && expenseDetailsId) {\r\n      fetch(`${API_BASE_URL}/expense-details/id/${expenseDetailsId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Father_Monthly_Salary: data.father_monthly_salary || '',\r\n              Mother_Monthly_Salary: data.mother_monthly_salary || '',\r\n              Spouse_Monthly_Salary: data.spouse_monthly_salary || '',\r\n              Applicant_Monthly_Salary: data.applicant_monthly_salary || '',\r\n              Rent_Income: data.rent_income || '',\r\n              Grants: data.grants || '',\r\n              Other_Income: data.other_income || '',\r\n              Rent_Bond_Expense: data.rent_bond_expense || '',\r\n              Rates_Expense: data.rates_expense || '',\r\n              Utilities_Expense: data.utilities_expense || '',\r\n              Groceries_Expense: data.groceries_expense || '',\r\n              Transport_Petrol_Expense: data.transport_petrol_expense || '',\r\n              Telephone_Expense: data.telephone_expense || '',\r\n              Medical_Aid_Expense: data.medical_aid_expense || '',\r\n              Insurance_Expense: data.insurance_expense || '',\r\n              Other_Expense: data.other_expense || '',\r\n              total_income: Number(data.total_income) || 0,\r\n              total_expenses: Number(data.total_expenses) || 0,\r\n            });\r\n          }\r\n        })\r\n        .catch(error => console.error('Error fetching expense details:', error));\r\n    } else {\r\n      setFormData({\r\n        Father_Monthly_Salary: '',\r\n        Mother_Monthly_Salary: '',\r\n        Spouse_Monthly_Salary: '',\r\n        Applicant_Monthly_Salary: '',\r\n        Rent_Income: '',\r\n        Grants: '',\r\n        Other_Income: '',\r\n        Rent_Bond_Expense: '',\r\n        Rates_Expense: '',\r\n        Utilities_Expense: '',\r\n        Groceries_Expense: '',\r\n        Transport_Petrol_Expense: '',\r\n        Telephone_Expense: '',\r\n        Medical_Aid_Expense: '',\r\n        Insurance_Expense: '',\r\n        Other_Expense: '',\r\n        total_income: 0,\r\n        total_expenses: 0,\r\n      });\r\n    }\r\n  }, [open, expenseDetailsId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Update form data\r\n    setFormData(prev => {\r\n      const newFormData = { ...prev, [name]: value };\r\n\r\n      // Recalculate total income and total expenses\r\n      const incomeFields = [\r\n        'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',\r\n        'Applicant_Monthly_Salary', 'Rent_Income', 'Grants', 'Other_Income'\r\n      ];\r\n      const expenseFields = [\r\n        'Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense',\r\n        'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'\r\n      ];\r\n\r\n      const totalIncome = incomeFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n      const totalExpenses = expenseFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n\r\n      newFormData.total_income = totalIncome;\r\n      newFormData.total_expenses = totalExpenses;\r\n\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Calculate total income and total expenses if not already set\r\n    const totalIncome = Object.keys(formData)\r\n      .filter(key => key.includes(\"Salary\") || key.includes(\"Income\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const totalExpenses = Object.keys(formData)\r\n      .filter(key => key.includes(\"Expense\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const updatedFormData = {\r\n      ...formData,\r\n      total_income: totalIncome.toString(),\r\n      total_expenses: totalExpenses.toString()\r\n    };\r\n\r\n    const stringFormData = Object.keys(updatedFormData).reduce((acc, key) => {\r\n      const value = updatedFormData[key];\r\n      acc[key] = value !== '' ? value.toString() : value;  // Convert to string\r\n      return acc;\r\n    }, {});\r\n\r\n    const url = expenseDetailsId\r\n      ? `${API_BASE_URL}/expense-details/update/${expenseDetailsId}`\r\n      : `${API_BASE_URL}/expense-details/insert`;\r\n\r\n    const method = expenseDetailsId ? 'PUT' : 'POST';\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...stringFormData, student_details_portal_id: studentId }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        onClose();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving expense details:', error);\r\n      });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!expenseDetailsId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/expense-details/delete/${expenseDetailsId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error('Error deleting expense details:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Financial Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {/* Income Fields */}\r\n            {['Applicant_Monthly_Salary', 'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',  'Rent_Income', 'Grants', 'Other_Income'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Expense Fields */}\r\n            {['Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense', 'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Read-only Total Income and Total Expenses Fields */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Income\"\r\n                value={formData.total_income.toFixed(2)} // Display total income\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Income field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Expenses\"\r\n                value={formData.total_expenses.toFixed(2)} // Display total expenses\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Expenses field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {expenseDetailsId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={expenseDetailsId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {expenseDetailsId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ExpenseDetailsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AssetsLiabilitiesDrawer = ({ open, onClose, studentId, assetLiabilityId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Gold_Silver: '',\r\n    Cash_in_Bank: '',\r\n    Investments: '',\r\n    Liabilities: ''\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (open && assetLiabilityId) {\r\n      fetch(`${API_BASE_URL}/assets-liabilities/id/${assetLiabilityId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Gold_Silver: data.gold_silver || '',\r\n              Cash_in_Bank: data.cash_in_bank || '',\r\n              Investments: data.investments || '',\r\n              Liabilities: data.liabilities || ''\r\n            });\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      setFormData({\r\n        Gold_Silver: '',\r\n        Cash_in_Bank: '',\r\n        Investments: '',\r\n        Liabilities: ''\r\n      });\r\n    }\r\n  }, [open, assetLiabilityId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const url = assetLiabilityId\r\n      ? `${API_BASE_URL}/assets-liabilities/update/${assetLiabilityId}`\r\n      : `${API_BASE_URL}/assets-liabilities/insert`;\r\n    const method = assetLiabilityId ? \"PUT\" : \"POST\";\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...formData, student_details_portal_id: studentId })\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        // setSuccessMessage(assetLiabilityId ? 'Updated successfully!' : 'Created successfully!');\r\n        onClose();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!assetLiabilityId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/assets-liabilities/delete/${assetLiabilityId}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage('Deleted successfully!');\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Error deleting asset/liability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Assets & Liabilities\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, idx) => {\r\n              const label = key\r\n                .replace(/_/g, ' ')  // Replace underscores with spaces\r\n                .replace(/\\b\\w/g, char => char.toUpperCase()); // Capitalize the first letter of each word\r\n\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    type=\"number\" // Allow numbers only (including decimals)\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      inputMode: 'decimal', // Enable decimal input mode for numbers\r\n                    }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {assetLiabilityId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={assetLiabilityId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {assetLiabilityId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AssetsLiabilitiesDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AcademicResultsDrawer = ({ open, onClose, studentId, resultId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!resultId) {\r\n      setFormData({\r\n        Results_Module: \"\",\r\n        Results_Percentage: \"\",\r\n        Results_Attachment: null,\r\n        Results_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch(`${API_BASE_URL}/academic-results/id/${resultId}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setFormData({\r\n          Results_Module: data.results_module || \"\",\r\n          Results_Percentage: data.results_percentage || \"\",\r\n          Results_Attachment: null,\r\n          Results_Attachment_Name: data.results_attachment_name || \"\",\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n        });\r\n      });\r\n  }, [open, resultId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Results_Attachment: file,\r\n        Results_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/academic-results/update/${formData.id}`\r\n      : `${API_BASE_URL}/academic-results/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Results_Module\", formData.Results_Module);\r\n    body.append(\"Results_Percentage\", formData.Results_Percentage);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Results_Attachment) {\r\n      body.append(\"Results_Attachment\", formData.Results_Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save academic result\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/academic-results/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete academic result\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/academic-results/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Academic Result Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Module Name\"\r\n                name=\"Results_Module\"\r\n                fullWidth\r\n                value={formData.Results_Module || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Percentage\"\r\n                name=\"Results_Percentage\"\r\n                fullWidth\r\n                value={formData.Results_Percentage || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Results_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Results_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\" }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Results_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AcademicResultsDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst VoluntaryServiceDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Organisation: \"\",\r\n        Contact_Person: \"\",\r\n        Contact_Person_Number: \"\",\r\n        Hours_Contributed: \"\",\r\n        Proof_of_Service: null,\r\n        Service_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/voluntary-service/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Organisation: data.organisation || \"\",\r\n            Contact_Person: data.contact_person || \"\",\r\n            Contact_Person_Number: data.contact_person_number || \"\",\r\n            Hours_Contributed: data.hours_contributed || \"\",\r\n            Proof_of_Service: null,\r\n            Service_Attachment_Name: data.service_attachment_name || \"\",\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Service: file,\r\n        Service_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/voluntary-service/update/${formData.id}`\r\n      : `${API_BASE_URL}/voluntary-service/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n  \r\n    const body = new FormData();\r\n    body.append(\"Organisation\", formData.Organisation);\r\n    body.append(\"Contact_Person\", formData.Contact_Person);\r\n    body.append(\"Contact_Person_Number\", formData.Contact_Person_Number);\r\n    body.append(\"Hours_Contributed\", formData.Hours_Contributed);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    \r\n    // If a new file is selected, append it\r\n    if (formData.Proof_of_Service) {\r\n      body.append(\"Proof_of_Service\", formData.Proof_of_Service);\r\n    }\r\n  \r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save voluntary service\");\r\n    }\r\n  };  \r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/voluntary-service/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete voluntary service\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/voluntary-service/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Voluntary Service\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Organisation\"\r\n                name=\"Organisation\"\r\n                fullWidth\r\n                value={formData.Organisation || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Contact Person\"\r\n                name=\"Contact_Person\"\r\n                fullWidth\r\n                value={formData.Contact_Person || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                label=\"Contact Number\"\r\n                name=\"Contact_Person_Number\"\r\n                fullWidth\r\n                value={formData.Contact_Person_Number || \"\"}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  type: 'tel', // Allows for easier entry of phone numbers\r\n                  maxLength: 10, // Restrict input to 10 digits\r\n                  pattern: \"[0-9]{10}\", // Only allow numbers, exactly 10 digits\r\n                }}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Hours Contributed\"\r\n                name=\"Hours_Contributed\"\r\n                fullWidth\r\n                value={formData.Hours_Contributed || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Service_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Service_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Service_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default VoluntaryServiceDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { format, parse } from 'date-fns';\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst PaymentDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Payments_Expense_Type: \"\",\r\n        Payments_Vendor: \"\",\r\n        Payments_Expense_Amount: \"\",\r\n        Payments_Date: \"\",\r\n        Payments_ET_Number: \"\",\r\n        Payments_Attachment_Name: \"\",\r\n        Proof_of_Payment: null,\r\n        Payment_Created_By: createdBy,\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      setSelectedDate(null);\r\n    } else {\r\n      fetch(`${API_BASE_URL}/payments/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const date = data.payments_date ? parse(data.payments_date, 'MM/dd/yyyy', new Date()) : null;\r\n          setSelectedDate(date);\r\n          setFormData({\r\n            Payments_Expense_Type: data.payments_expense_type || \"\",\r\n            Payments_Vendor: data.payments_vendor || \"\",\r\n            Payments_Expense_Amount: data.payments_expense_amount || \"\",\r\n            Payments_Date: data.payments_date || \"\",\r\n            Payments_ET_Number: data.payments_et_number || \"\",\r\n            Payments_Attachment_Name: data.payments_attachment_name || \"\",\r\n            Proof_of_Payment: null,\r\n            Payment_Created_By: data.payment_created_by || createdBy,\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Payment: file,\r\n        Payments_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/payments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/payments/update/${formData.id}`\r\n      : `${API_BASE_URL}/payments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Payments_Expense_Type\", formData.Payments_Expense_Type);\r\n    body.append(\"Payments_Vendor\", formData.Payments_Vendor);\r\n    body.append(\"Payments_Expense_Amount\", formData.Payments_Expense_Amount);\r\n    body.append(\"Payments_Date\", formData.Payments_Date);\r\n    body.append(\"Payments_ET_Number\", formData.Payments_ET_Number);\r\n    body.append(\"Payments_Attachment_Name\", formData.Payments_Attachment_Name);\r\n    body.append(\"Payment_Created_By\", formData.Payment_Created_By);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Proof_of_Payment) {\r\n      body.append(\"Proof_of_Payment\", formData.Proof_of_Payment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save payment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/payments/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (err) {\r\n      console.error(\"Failed to delete payment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, Payments_Date: formattedDate }));\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Payment Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Expense Type\"\r\n                name=\"Payments_Expense_Type\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Type || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Vendor\"\r\n                name=\"Payments_Vendor\"\r\n                fullWidth\r\n                value={formData.Payments_Vendor || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Amount\"\r\n                name=\"Payments_Expense_Amount\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Amount || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {/* Date Picker Field */}\r\n            <Grid item xs={12}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  wrapperClassName={\"datepicker\"}\r\n                  className={\"datepicker\"}\r\n                  label=\"Payments Date\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  format=\"MM/dd/yyyy\"\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"ET Number\"\r\n                name=\"Payments_ET_Number\"\r\n                fullWidth\r\n                value={formData.Payments_ET_Number || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Payments_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Payments_Attachment_Name || \"\"}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Payments_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Confirmation Dialog for Deletion */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PaymentDrawer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst InterviewDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Get the first name and last name from localStorage (assuming the user object is stored there)\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // const createdBy = user.first_name + ' ' + user.last_name; // Concatenate first name and last name\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  const questions = [\r\n    \"Briefly describe the applicant's family & social financial conditions?\",\r\n    \"Employment Status Score\",\r\n    \"Year of Study\",\r\n    \"Degree/Diploma Name\",\r\n    \"Number of Years to Qualify\",\r\n    \"Reason for Choosing the Course\",\r\n    \"Field of Study Score\",\r\n    \"APS Score (Matric) or University Average\",\r\n    \"Number of Failed Modules\",\r\n    \"Academic Results Score\",\r\n    \"Have you worked on any special projects or initiatives?\",\r\n    \"What extracurricular activities have you participated in?\",\r\n    \"How do you plan to contribute to your community post-graduation?\",\r\n    \"How would you inspire others to make an impact?\",\r\n    \"Community Work Involvement Score\",\r\n    \"How will you use your education and skills to make an impact?\",\r\n    \"Can you share academic awards or scholarships received?\",\r\n    \"Describe a role model and why they inspire you?\",\r\n    \"Why do you believe you deserve this bursary?\",\r\n    \"If not awarded this bursary, what are your plans?\",\r\n    \"Motivation Score\",\r\n    \"Total Score\",\r\n    \"Comments Section\",\r\n    \"Overall Impression\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Interviewer_Name: '',\r\n        Year_of_Interview: '',\r\n        Interview_Q01: '',\r\n        Interview_Q02: '',\r\n        Interview_Q03: '',\r\n        Interview_Q04: '',\r\n        Interview_Q05: '',\r\n        Interview_Q06: '',\r\n        Interview_Q07: '',\r\n        Interview_Q08: '',\r\n        Interview_Q09: '',\r\n        Interview_Q10: '',\r\n        Interview_Q11: '',\r\n        Interview_Q12: '',\r\n        Interview_Q13: '',\r\n        Interview_Q14: '',\r\n        Interview_Q15: '',\r\n        Interview_Q16: '',\r\n        Interview_Q17: '',\r\n        Interview_Q18: '',\r\n        Interview_Q19: '',\r\n        Interview_Q20: '',\r\n        Interview_Q21: '',\r\n        Interview_Q22: '',\r\n        Interview_Q23: '',\r\n        Interview_Q24: '',\r\n        Interview_Created_By: createdBy,  // Set created_by field to first and last name of logged-in user\r\n        Date_Stamp: '',\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/interviews/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Interviewer_Name: data.interviewer_name || '',\r\n            Year_of_Interview: data.year_of_interview || '',\r\n            Interview_Q01: data.interview_q01 || '',\r\n            Interview_Q02: data.interview_q02 || '',\r\n            Interview_Q03: data.interview_q03 || '',\r\n            Interview_Q04: data.interview_q04 || '',\r\n            Interview_Q05: data.interview_q05 || '',\r\n            Interview_Q06: data.interview_q06 || '',\r\n            Interview_Q07: data.interview_q07 || '',\r\n            Interview_Q08: data.interview_q08 || '',\r\n            Interview_Q09: data.interview_q09 || '',\r\n            Interview_Q10: data.interview_q10 || '',\r\n            Interview_Q11: data.interview_q11 || '',\r\n            Interview_Q12: data.interview_q12 || '',\r\n            Interview_Q13: data.interview_q13 || '',\r\n            Interview_Q14: data.interview_q14 || '',\r\n            Interview_Q15: data.interview_q15 || '',\r\n            Interview_Q16: data.interview_q16 || '',\r\n            Interview_Q17: data.interview_q17 || '',\r\n            Interview_Q18: data.interview_q18 || '',\r\n            Interview_Q19: data.interview_q19 || '',\r\n            Interview_Q20: data.interview_q20 || '',\r\n            Interview_Q21: data.interview_q21 || '',\r\n            Interview_Q22: data.interview_q22 || '',\r\n            Interview_Q23: data.interview_q23 || '',\r\n            Interview_Q24: data.interview_q24 || '',\r\n            Interview_Created_By: data.interview_created_by || createdBy,  // Ensure `created_by` is set\r\n            Date_Stamp: data.date_stamp || '',\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/interviews/update/${formData.id}`\r\n      : `${API_BASE_URL}/interviews/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData)\r\n    });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save interview\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/interviews/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete interview\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Interview Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Interviewer Name\"\r\n                name=\"Interviewer_Name\"\r\n                fullWidth\r\n                value={formData.Interviewer_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Year of Interview\"\r\n                name=\"Year_of_Interview\"\r\n                fullWidth\r\n                value={formData.Year_of_Interview || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {questions.map((question, i) => {\r\n              const questionNumber = (i + 1).toString().padStart(2, '0');\r\n              return (\r\n                <Grid item xs={12} key={i}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={`Interview_Q${questionNumber}`}\r\n                    fullWidth\r\n                    value={formData[`Interview_Q${questionNumber}`] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n            {/* Interview_Created_By field is not rendered here */}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default InterviewDrawer;\r\n","import React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst TaskDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  taskId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Memoize user to prevent new object reference on every render\r\n  const user = useMemo(() => JSON.parse(localStorage.getItem(\"user\")), []);\r\n  const isAdmin = user?.user_type === 'admin';\r\n  const isStudent = user?.user_type === 'student';\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (taskId) {\r\n        fetch(`${API_BASE_URL}/tasks/id/${taskId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          created_by: isAdmin ? user?.first_name || \"\" : \"\",\r\n          task_description: \"\",\r\n          task_status: \"\",\r\n          task_comment: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, taskId, isAdmin, user]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isAdmin) {\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/tasks/update/${formData.id}`\r\n      : `${API_BASE_URL}/tasks/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id || !isAdmin) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/tasks/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const taskStatusOptions = [\"Pending\", \"Completed\"];\r\n\r\n  const fieldOrder = [\"task_description\", \"task_status\", \"task_comment\"];\r\n\r\n  const renderField = (key, index) => {\r\n    if (key === \"id\" || key === \"student_details_portal_id\" || key === \"task_date_stamp\" || key === \"created_by\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    if (key === \"task_status\" && isAdmin) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={taskStatusOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={label}\r\n                name={key}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n          disabled={isStudent || (key === \"task_status\" && !isAdmin)}\r\n          InputProps={{\r\n            readOnly: key === \"task_status\" && !isAdmin,\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Task Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {fieldOrder.map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && isAdmin && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          {isAdmin && (\r\n            <Button\r\n              onClick={handleSave}\r\n              startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n            >\r\n              {formData.id ? \"Save\" : \"Create\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this task?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default TaskDetailsDrawer;","import React from 'react';\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image\r\n} from '@react-pdf/renderer';\r\nimport logo from '../images/willowton_logo.png';\r\n\r\n// About Me Custom Questions\r\nconst aboutMeQuestions = [\r\n  \"What inspired you to pursue your chosen field of study?\",\r\n  \"How do you plan to use your education and skills to make a significant impact in this field?\",\r\n  \"What special projects or initiatives have you undertaken in your academic life?\",\r\n  \"Can you tell me about any academic awards or scholarships you have received?\",\r\n  \"Provide examples or specific skills you have developed that demonstrates your commitment.\",\r\n  \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?\",\r\n  \"Once you have completed your studies, how will others benefit from it?\",\r\n  \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?\",\r\n  \"Have you previously been awarded a bursary?\",\r\n  \"What do you think has been your most notable contribution to society thus far?\",\r\n  \"Why do you think serving the community is important?\",\r\n  \"Will you be doing any volunteer work during your studies?\",\r\n  \"Are you willing to assist someone in need?\",\r\n  \"Describe yourself in three words.\",\r\n  \"What is your greatest strength?\",\r\n  \"Describe your biggest mistake and what steps you have taken to rectify it.\",\r\n  \"What personal achievement makes you proud?\",\r\n  \"Are you self-motivated? Explain\",\r\n  \"1st choice of study.\",\r\n  \"2nd choice of study\",\r\n  \"3rd choice of study.\"\r\n];\r\n\r\n// Interview Custom Questions\r\nconst interviewQuestions = [\r\n  \"Briefly describe the applicant's family & social financial conditions?\",\r\n  \"Employment Status Score\",\r\n  \"Year of Study\",\r\n  \"Degree/Diploma Name\",\r\n  \"Number of Years to Qualify\",\r\n  \"Reason for Choosing the Course\",\r\n  \"Field of Study Score\",\r\n  \"APS Score (Matric) or University Average\",\r\n  \"Number of Failed Modules\",\r\n  \"Academic Results Score\",\r\n  \"Have you worked on any special projects or initiatives?\",\r\n  \"What extracurricular activities have you participated in?\",\r\n  \"How do you plan to contribute to your community post-graduation?\",\r\n  \"How would you inspire others to make an impact?\",\r\n  \"Community Work Involvement Score\",\r\n  \"How will you use your education and skills to make an impact?\",\r\n  \"Can you share academic awards or scholarships received?\",\r\n  \"Describe a role model and why they inspire you?\",\r\n  \"Why do you believe you deserve this bursary?\",\r\n  \"If not awarded this bursary, what are your plans?\",\r\n  \"Motivation Score\",\r\n  \"Total Score\",\r\n  \"Comments Section\",\r\n  \"Overall Impression\"\r\n];\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    padding: 30,\r\n    fontSize: 8,\r\n    fontFamily: 'Helvetica',\r\n    lineHeight: 1.5\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1 solid #ccc',\r\n    marginBottom: 10,\r\n    paddingBottom: 4\r\n  },\r\n  logo: {\r\n    width: 60,\r\n    height: 60,\r\n    objectFit: 'contain'\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    flex: 1\r\n  },\r\n  headerTitle1: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginBottom: 1\r\n  },\r\n  headerTitle2: {\r\n    fontSize: 10,\r\n    fontStyle: 'italic'\r\n  },\r\n  reportTime: {\r\n    fontSize: 8,\r\n    textAlign: 'right'\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#2D3748',\r\n    color: 'white',\r\n    padding: 4,\r\n    marginTop: 10,\r\n    marginBottom: 4,\r\n    width: '100%',\r\n    borderRadius: 4\r\n  },\r\n  studentDetailsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    gap: 4,\r\n    marginBottom: 4\r\n  },\r\n  studentDetailsField: {\r\n    width: '49%',\r\n    flexDirection: 'column',\r\n    padding: 4,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    borderBottomStyle: 'solid'\r\n  },\r\n  studentDetailsLabel: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 2\r\n  },\r\n  studentDetailsValue: {\r\n    fontStyle: 'italic'\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: '100%',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    marginBottom: 4,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    minHeight: 20, // Ensure minimum height for content\r\n  },\r\n  tableCellLabel: {\r\n  width: '40%',\r\n  padding: 4,\r\n  fontWeight: 'bold',\r\n  backgroundColor: '#f5f5f5',\r\n  borderRightWidth: 1,\r\n  borderRightColor: '#ccc',\r\n  wordBreak: 'keep-all',   // Don't break in the middle of words\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n},\r\ntableCellValue: {\r\n  width: '60%',\r\n  padding: 4,\r\n  fontStyle: 'italic',\r\n  wordBreak: 'keep-all',   // Only break at natural word boundaries\r\n  minWidth: 0,\r\n  overflow: 'hidden',\r\n  lineHeight: 1.2\r\n},\r\n\r\n});\r\n\r\n// Converts snake_case or raw field names to Sentence Case\r\nconst toSentenceCase = (str) => {\r\n  return str\r\n    .replace(/_/g, ' ')\r\n    .split(' ')\r\n    .map(word =>\r\n      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\r\n    )\r\n    .join(' ');\r\n};\r\n\r\n// Removes section prefix from the field name\r\nconst removePrefix = (label, sectionTitle) => {\r\n  const cleanLabel = toSentenceCase(label);\r\n  const cleanSection = toSentenceCase(sectionTitle).replace(/s$/, '');\r\n  if (cleanLabel.startsWith(cleanSection + ' ')) {\r\n    return cleanLabel.slice(cleanSection.length + 1);\r\n  }\r\n  return cleanLabel;\r\n};\r\n\r\n// Map question to field name\r\nconst mapQuestion = (section, key) => {\r\n  const questionMap = {\r\n    'About Me': aboutMeQuestions,\r\n    'Interview': interviewQuestions\r\n  };\r\n  const questions = questionMap[section];\r\n  if (!questions) return removePrefix(key, section);\r\n\r\n  const match = key.match(/^(about_me_q|interview_q)(\\d+)/i);\r\n  if (match) {\r\n    const index = parseInt(match[2], 10) - 1; // Convert to 0-based index\r\n    return questions[index] || removePrefix(key, section);\r\n  }\r\n  return removePrefix(key, section);\r\n};\r\n\r\n// Get current date and time\r\nconst getCurrentDateTime = () => {\r\n  const now = new Date();\r\n  return now.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    hour12: true\r\n  });\r\n};\r\n\r\n// Student Details Section\r\nconst StudentDetailsSection = ({ data }) => {\r\n  const entries = Object.entries(data || {}).filter(([k, v]) => v !== null && v !== '');\r\n  const rows = [];\r\n  for (let i = 0; i < entries.length; i += 2) {\r\n    rows.push(entries.slice(i, i + 2));\r\n  }\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>Student Details</Text>\r\n      {rows.map((row, rowIdx) => (\r\n        <View key={rowIdx} style={styles.studentDetailsRow}>\r\n          {row.map(([key, value]) => (\r\n            <View key={key} style={styles.studentDetailsField}>\r\n              <Text style={styles.studentDetailsLabel}>{removePrefix(key, 'Student Details')}</Text>\r\n              <Text style={styles.studentDetailsValue}>{value || '—'}</Text>\r\n            </View>\r\n          ))}\r\n          {row.length < 2 && <View style={styles.studentDetailsField} />}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n// Single Object Section\r\nconst RenderSection = ({ title, data }) => {\r\n  if (!data || Object.keys(data).length === 0) return null;\r\n  const entries = Object.entries(data).filter(([k, v]) => v !== null && v !== '');\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>{toSentenceCase(title)}</Text>\r\n      <View style={styles.table}>\r\n        {entries.map(([key, value], idx) => (\r\n          <View key={idx} style={styles.tableRow} wrap={false}>\r\n            <Text style={styles.tableCellLabel}>{mapQuestion(title, key)}</Text>\r\n            <Text style={styles.tableCellValue} numberOfLines={0}>{value || '—'}</Text> {/* Allow multiple lines */}\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Multiple Records Section\r\nconst RenderMultiple = ({ title, data }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const showNumbering = data.length > 1;\r\n\r\n  return (\r\n    <View>\r\n      {data.map((item, idx) => (\r\n        <View key={idx}>\r\n          <Text style={styles.sectionTitle}>\r\n            {toSentenceCase(title)}{showNumbering ? ` - ${idx + 1}` : ''}\r\n          </Text>\r\n          <View style={styles.table}>\r\n            {Object.entries(item).map(([key, val], i) => (\r\n              <View key={i} style={styles.tableRow}>\r\n                <Text style={styles.tableCellLabel}>\r\n                  {removePrefix(key, title)}\r\n                </Text>\r\n                <Text style={styles.tableCellValue}>\r\n                  {val || '—'}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst StudentPDFDocument = ({ studentData }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Image src={logo} style={styles.logo} />\r\n        <View style={styles.headerText}>\r\n          <Text style={styles.headerTitle1}>SANZAF Bursary</Text>\r\n          <Text style={styles.headerTitle2}>Student Detailed Report</Text>\r\n        </View>\r\n        <Text style={styles.reportTime}>{getCurrentDateTime()}</Text>\r\n      </View>\r\n\r\n      {/* Sections */}\r\n      <StudentDetailsSection data={studentData.student_details} />\r\n      <RenderSection title=\"About Me\" data={studentData.about_me} />\r\n      <RenderSection title=\"Assets & Liabilities\" data={studentData.assets_liabilities} />\r\n      <RenderSection title=\"Expense Details\" data={studentData.expense_details} />\r\n      <RenderSection title=\"Interview\" data={studentData.interview} />\r\n      <RenderSection title=\"University Details\" data={studentData.university_details} />\r\n      <RenderMultiple title=\"Parents Details\" data={studentData.parents_details} />\r\n      <RenderMultiple title=\"Attachments\" data={studentData.attachments} />\r\n      <RenderMultiple title=\"Payments\" data={studentData.payments} />\r\n      <RenderMultiple title=\"Results\" data={studentData.results} />\r\n      <RenderMultiple title=\"Tasks\" data={studentData.tasks} />\r\n      <RenderMultiple title=\"Voluntary Service\" data={studentData.voluntary_service} />\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default StudentPDFDocument;","import React, { useState, useEffect, useCallback, useContext, useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  IconButton,\r\n  InputBase,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip,\r\n  Divider,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Select,\r\n  MenuItem as MuiMenuItem,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { useTheme, useMediaQuery } from \"@mui/material\";\r\nimport * as XLSX from \"xlsx\";\r\nimport DrawerForm from \"./Drawer/StudentDetailDrawer\";\r\nimport AboutusDrawer from \"./Drawer/AboutUsDrawer\";\r\nimport ParentsDrawer from \"./Drawer/ParentsDrawer\";\r\nimport UniversityDetailsDrawer from \"./Drawer/UniversityDetailsDrawer\";\r\nimport AttachmentsDrawer from \"./Drawer/AttachmentsDrawer\";\r\nimport ExpenseDetailsDrawer from \"./Drawer/ExpenseDetailsDrawer\";\r\nimport AssetsLiabilitiesDrawer from \"./Drawer/AssetsLiabilitiesDrawer\";\r\nimport AcademicResultsDrawer from \"./Drawer/AcademicResultsDrawer\";\r\nimport VoluntaryServiceDrawer from \"./Drawer/VoluntaryServiceDrawer\";\r\nimport PaymentDrawer from \"./Drawer/PaymentDrawer\";\r\nimport InterviewDrawer from \"./Drawer/InterviewDrawer\";\r\nimport TaskDetailsDrawer from \"./Drawer/TaskDetailsDrawer\";\r\nimport { ThemeContext } from \"../config/ThemeContext\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport StudentPDFDocument from \"./StudentPDFDocument\";\r\nimport '../pages/reports/GenericTable.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst SectionTable = ({ data, sectionKey, sectionLabel, isDarkMode, selectedStudentid, onEdit, onAdd }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [columns, setColumns] = useState([]);\r\n  const [visibleColumns, setVisibleColumns] = useState([]);\r\n  const [columnWidths, setColumnWidths] = useState({});\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: null });\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [columnSearchTerm, setColumnSearchTerm] = useState('');\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const searchRef = useRef(null);\r\n  const resizingRef = useRef(null);\r\n  const open = Boolean(anchorEl);\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const sentenceCase = useCallback((str) => {\r\n    if (str === 'student_id_passport_number') return 'Student ID/Passport Number';\r\n    if (str === 'student_willow_relationship') return 'Willowton Group Relationship';\r\n    return str.replace(/^student /i, '').replace(/_/g, ' ').replace(/\\b\\w/g, (c) => c.toUpperCase());\r\n  }, []);\r\n\r\n  const calculateColumnWidth = useCallback((col) => {\r\n    const headerText = sentenceCase(col);\r\n    const charCount = headerText.length;\r\n    const pixelsPerChar = 10;\r\n    const minWidth = 50;\r\n    const calculatedWidth = charCount * pixelsPerChar + 40;\r\n    return Math.max(minWidth, calculatedWidth);\r\n  }, [sentenceCase]);\r\n\r\n  useEffect(() => {\r\n    if (data && data.length > 0) {\r\n      const cols = Object.keys(data[0]).filter((c) => c !== 'id' && c !== 'student_details_portal_id');\r\n      setColumns(cols);\r\n      setVisibleColumns(cols);\r\n      setColumnWidths(cols.reduce((acc, col) => ({\r\n        ...acc,\r\n        [col]: calculateColumnWidth(col),\r\n      }), {}));\r\n      setTotalRecords(data.length);\r\n    } else {\r\n      setColumns([]);\r\n      setVisibleColumns([]);\r\n      setColumnWidths({});\r\n      setTotalRecords(0);\r\n    }\r\n  }, [data, calculateColumnWidth]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (searchRef.current && !searchRef.current.contains(event.target)) {\r\n        setShowSearch(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((e) => {\r\n    if (resizingRef.current) {\r\n      const { col, startX, startWidth } = resizingRef.current;\r\n      const newWidth = Math.max(50, startWidth + (e.clientX - startX));\r\n      setColumnWidths((prev) => ({ ...prev, [col]: newWidth }));\r\n    }\r\n  }, []);\r\n\r\n  const stopResizing = useCallback(() => {\r\n    resizingRef.current = null;\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', stopResizing);\r\n    document.body.style.userSelect = '';\r\n  }, [handleMouseMove]);\r\n\r\n  const startResizing = useCallback(\r\n    (e, col) => {\r\n      e.preventDefault();\r\n      resizingRef.current = { col, startX: e.clientX, startWidth: columnWidths[col] || calculateColumnWidth(col) };\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', stopResizing);\r\n      document.body.style.userSelect = 'none';\r\n    },\r\n    [columnWidths, calculateColumnWidth, handleMouseMove, stopResizing]\r\n  );\r\n\r\n  const formatDate = (date) => (date ? new Date(date).toLocaleDateString() : 'N/A');\r\n\r\n  const toggleColumn = (col) => {\r\n    if (visibleColumns.includes(col)) {\r\n      setVisibleColumns((prev) => prev.filter((c) => c !== col));\r\n    } else {\r\n      const idx = columns.indexOf(col);\r\n      const updated = [...visibleColumns];\r\n      updated.splice(idx, 0, col);\r\n      setVisibleColumns(updated);\r\n    }\r\n  };\r\n\r\n  const resetColumns = () => {\r\n    setVisibleColumns(columns);\r\n    setColumnWidths(columns.reduce((acc, col) => ({\r\n      ...acc,\r\n      [col]: calculateColumnWidth(col),\r\n    }), {}));\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const exportData = data.map((s) =>\r\n      Object.fromEntries(visibleColumns.map((col) => [sentenceCase(col), s[col]]))\r\n    );\r\n    const ws = XLSX.utils.json_to_sheet(exportData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, sectionKey);\r\n    XLSX.writeFile(wb, `${sectionKey}_report.xlsx`);\r\n  };\r\n\r\n  const handleSort = (col) => {\r\n    setSortConfig((prev) => {\r\n      if (prev.key === col) {\r\n        return {\r\n          key: col,\r\n          direction: prev.direction === 'asc' ? 'desc' : prev.direction === 'desc' ? null : 'asc',\r\n        };\r\n      } else {\r\n        return { key: col, direction: 'asc' };\r\n      }\r\n    });\r\n    setPage(0);\r\n  };\r\n\r\n  const filteredData = data\r\n    .filter((item) =>\r\n      visibleColumns.some((col) => {\r\n        const val = item[col];\r\n        return val != null && val.toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n      })\r\n    )\r\n    .sort((a, b) => {\r\n      if (!sortConfig.key || !sortConfig.direction) return 0;\r\n      const aVal = a[sortConfig.key];\r\n      const bVal = b[sortConfig.key];\r\n      if (aVal == null || bVal == null) return 0;\r\n      return sortConfig.direction === 'asc'\r\n        ? aVal.toString().localeCompare(bVal.toString())\r\n        : bVal.toString().localeCompare(aVal.toString());\r\n    });\r\n\r\n  const paginatedData = filteredData.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    setTotalRecords(filteredData.length);\r\n  }, [filteredData]);\r\n\r\n  const filteredColumns = columns.filter((col) => {\r\n    const lowerTerm = columnSearchTerm.toLowerCase();\r\n    const raw = col.toLowerCase();\r\n    const formatted = sentenceCase(col).toLowerCase();\r\n    return raw.includes(lowerTerm) || formatted.includes(lowerTerm);\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{ backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC', p: 2 }}\r\n      className={isDarkMode ? 'dark-mode' : ''}\r\n    >\r\n      <Box sx={{ padding: \"12px\", backgroundColor: isDarkMode ? '#1e293b' : '#e1f5fe', borderRadius: \"8px\", marginBottom: \"12px\", border: '1px solid #ccc', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" sx={{ color: isDarkMode ? 'white' : 'black', fontWeight: \"bold\" }}>\r\n          {sectionLabel}\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Box\r\n            ref={searchRef}\r\n            sx={{\r\n              width: showSearch ? (isSmallScreen ? 120 : 220) : 0,\r\n              height: 36,\r\n              overflow: 'hidden',\r\n              transition: 'width 0.3s ease-in-out, opacity 0.3s ease-in-out',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              opacity: showSearch ? 1 : 0,\r\n            }}\r\n          >\r\n            <InputBase\r\n              placeholder=\"Search\"\r\n              value={searchTerm}\r\n              onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n                setPage(0);\r\n              }}\r\n              sx={{\r\n                backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n                color: isDarkMode ? 'white' : 'black',\r\n                px: 1.5,\r\n                height: '100%',\r\n                fontSize: '0.85rem',\r\n                borderRadius: 1,\r\n                border: `1px solid ${isDarkMode ? '#4A5568' : '#CBD5E0'}`,\r\n                width: '100%',\r\n                minWidth: 0,\r\n              }}\r\n              startAdornment={<SearchIcon sx={{ mr: 1 }} fontSize=\"small\" />}\r\n              endAdornment={\r\n                searchTerm && (\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      setSearchTerm('');\r\n                      setPage(0);\r\n                    }}\r\n                    sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n                  >\r\n                    <ClearIcon fontSize=\"small\" />\r\n                  </IconButton>\r\n                )\r\n              }\r\n            />\r\n          </Box>\r\n          <Tooltip title={showSearch ? 'Close Search' : 'Search'}>\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => setShowSearch((prev) => !prev)}\r\n              sx={{ color: isDarkMode ? 'white' : 'black' }}\r\n            >\r\n              {showSearch ? <ClearIcon fontSize=\"small\" /> : <SearchIcon fontSize=\"small\" />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          {!(isSmallScreen && showSearch) && (\r\n            <>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Column Visibility\">\r\n                <IconButton size=\"small\" onClick={(e) => setAnchorEl(e.currentTarget)} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <ViewColumnIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n              <Tooltip title=\"Export to Excel\">\r\n                <IconButton size=\"small\" onClick={exportToExcel} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                  <DownloadIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              {onAdd && (\r\n                <>\r\n                  <Typography sx={{ color: isDarkMode ? 'white' : 'black', fontSize: '1rem' }}>|</Typography>\r\n                  <Tooltip title=\"Add New\">\r\n                    <IconButton size=\"small\" onClick={onAdd} sx={{ color: isDarkMode ? 'white' : 'black' }}>\r\n                      <AddIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={() => setAnchorEl(null)}\r\n        PaperProps={{\r\n          sx: {\r\n            minWidth: 200,\r\n            maxHeight: 300,\r\n            p: 1,\r\n            backgroundColor: isDarkMode ? '#1e293b' : '#fff',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n            boxShadow: '0px 2px 8px rgba(0, 0, 0, 0.15)',\r\n            borderRadius: 2,\r\n          },\r\n        }}\r\n      >\r\n        <InputBase\r\n          autoFocus\r\n          placeholder=\"Search Columns\"\r\n          value={columnSearchTerm}\r\n          onChange={(e) => setColumnSearchTerm(e.target.value)}\r\n          onKeyDown={(e) => e.stopPropagation()}\r\n          sx={{\r\n            mb: 1,\r\n            px: 1,\r\n            fontSize: '0.7rem',\r\n            backgroundColor: isDarkMode ? '#334155' : '#f1f5f9',\r\n            borderRadius: 1,\r\n            width: '100%',\r\n            height: '28px',\r\n            color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n          }}\r\n        />\r\n        {filteredColumns.map((col) => (\r\n          <MenuItem key={col} dense>\r\n            <FormControlLabel\r\n              control={<Checkbox size=\"small\" checked={visibleColumns.includes(col)} onChange={() => toggleColumn(col)} />}\r\n              label={<span style={{ fontSize: '0.7rem' }}>{sentenceCase(col)}</span>}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n        <Divider sx={{ my: 1 }} />\r\n        <MenuItem dense onClick={() => { resetColumns(); setAnchorEl(null); }}>\r\n          <ListItemIcon><RefreshIcon fontSize=\"small\" /></ListItemIcon>\r\n          <ListItemText primary=\"Reset Columns\" primaryTypographyProps={{ fontSize: '0.7rem' }} />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      <div className=\"generic-table-container\">\r\n        <table className=\"generic-table\" style={{ backgroundColor: isDarkMode ? '#1e293b' : '#fff', tableLayout: 'fixed' }}>\r\n          <thead>\r\n            <tr>\r\n              {onEdit && <th style={{ width: 50, color: isDarkMode ? 'white' : '#1e293b' }}></th>}\r\n              {visibleColumns.map((col) => (\r\n                <th\r\n                  key={col}\r\n                  style={{\r\n                    color: isDarkMode ? 'white' : '#1e293b',\r\n                    cursor: 'pointer',\r\n                    position: 'relative',\r\n                    width: columnWidths[col] || calculateColumnWidth(col),\r\n                    minWidth: 50,\r\n                  }}\r\n                  onClick={(e) => {\r\n                    if (e.target.className !== 'resize-handle') {\r\n                      handleSort(col);\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', paddingRight: '10px' }}>\r\n                    <span>{sentenceCase(col)}</span>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      {sortConfig.key === col && sortConfig.direction === 'asc' && <ArrowDropUpIcon fontSize=\"small\" />}\r\n                      {sortConfig.key === col && sortConfig.direction === 'desc' && <ArrowDropDownIcon fontSize=\"small\" />}\r\n                      {sortConfig.key === col && sortConfig.direction === null}\r\n                    </Box>\r\n                  </Box>\r\n                  <span\r\n                    className=\"resize-handle\"\r\n                    onMouseDown={(e) => startResizing(e, col)}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      right: 0,\r\n                      top: 0,\r\n                      height: '100%',\r\n                      width: '5px',\r\n                      cursor: 'col-resize',\r\n                      background: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      userSelect: 'none',\r\n                    }}\r\n                  >\r\n                    <span style={{ fontSize: '12px', color: isDarkMode ? '#F7FAFC' : '#1e293b' }}>|</span>\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedData.length > 0 ? (\r\n              paginatedData.map((row, i) => (\r\n                <tr key={i}>\r\n                  {onEdit && (\r\n                    <td style={{ width: 50 }}>\r\n                      <EditIcon\r\n                        sx={{ cursor: 'pointer', fontSize: 'large', color: isDarkMode ? 'white' : 'black' }}\r\n                        onClick={() => onEdit(row.id)}\r\n                      />\r\n                    </td>\r\n                  )}\r\n                  {visibleColumns.map((col) => (\r\n                    <td\r\n                      key={col}\r\n                      style={{\r\n                        color: isDarkMode ? 'white' : '#1e293b',\r\n                        width: columnWidths[col] || calculateColumnWidth(col),\r\n                        minWidth: 50,\r\n                        overflow: 'hidden',\r\n                        textOverflow: 'ellipsis',\r\n                        whiteSpace: 'nowrap',\r\n                      }}\r\n                    >\r\n                      {col.includes('date') ? formatDate(row[col]) :\r\n                        typeof row[col] === 'object' && row[col] !== null ?\r\n                          col.toLowerCase().includes('attachment') ||\r\n                            col.toLowerCase().includes('proof_of_service') ||\r\n                            col.toLowerCase().includes('proof_of_payment') ?\r\n                            '📎 File attached' :\r\n                            JSON.stringify(row[col]) :\r\n                          row[col] || 'N/A'}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr><td colSpan={visibleColumns.length + (onEdit ? 1 : 0)} className=\"no-matching-records\">No matching records found</td></tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 2 }}>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          gap: 2,\r\n          border: '1px solid',\r\n          borderColor: isDarkMode ? '#4A5568' : '#CBD5E0',\r\n          borderRadius: '8px',\r\n          padding: '6px 12px',\r\n          backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC',\r\n          color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n        }}>\r\n          <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n            Rows per page:\r\n          </Typography>\r\n          <Select\r\n            value={rowsPerPage}\r\n            onChange={(e) => {\r\n              setRowsPerPage(parseInt(e.target.value));\r\n              setPage(0);\r\n            }}\r\n            size=\"small\"\r\n            sx={{\r\n              color: isDarkMode ? '#F7FAFC' : '#1e293b',\r\n              '.MuiSelect-icon': { color: isDarkMode ? '#F7FAFC' : '#1e293b' },\r\n              backgroundColor: isDarkMode ? '#4A5568' : '#E2E8F0',\r\n              borderRadius: '4px',\r\n              fontSize: '0.85rem',\r\n              minWidth: '60px',\r\n            }}\r\n          >\r\n            {[10, 15, 25, 50, 100].map((n) => (\r\n              <MuiMenuItem key={n} value={n}>{n}</MuiMenuItem>\r\n            ))}\r\n          </Select>\r\n          <Typography variant=\"caption\" sx={{ whiteSpace: 'nowrap' }}>\r\n            {page * rowsPerPage + 1}-{Math.min((page + 1) * rowsPerPage, totalRecords)} of {totalRecords}\r\n          </Typography>\r\n          <IconButton\r\n            onClick={() => setPage((p) => Math.max(0, p - 1))}\r\n            disabled={page === 0}\r\n            size=\"small\"\r\n            sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n          >\r\n            <ArrowBackIosIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => setPage((p) => (p + 1) * rowsPerPage < totalRecords ? p + 1 : p)}\r\n            disabled={(page + 1) * rowsPerPage >= totalRecords}\r\n            size=\"small\"\r\n            sx={{ color: isDarkMode ? '#F7FAFC' : '#1e293b' }}\r\n          >\r\n            <ArrowForwardIosIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StudentDetails = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [studentDetails, setStudentDetails] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [selectedStudentid, setSelectedStudentid] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [aboutMeDrawerOpen, setAboutMeDrawerOpen] = useState(false);\r\n  const [editingAboutMeId, setEditingAboutMeId] = useState(null);\r\n  const [parentsDrawerOpen, setParentsDrawerOpen] = useState(false);\r\n  const [editingParentId, setEditingParentId] = useState(null);\r\n  const [universityDetailsDrawerOpen, setUniversityDetailsDrawerOpen] = useState(false);\r\n  const [editingUniversityId, setEditingUniversityId] = useState(null);\r\n  const [attachmentsDrawerOpen, setAttachmentsDrawerOpen] = useState(false);\r\n  const [editingAttachmentId, setEditingAttachmentId] = useState(null);\r\n  const [expenseDetailsDrawerOpen, setExpensesSummaryDrawerOpen] = useState(false);\r\n  const [editingExpenseDetailsId, setEditingExpenseDetailsId] = useState(null);\r\n  const [assetsLiabilitiesDrawerOpen, setAssetsLiabilitiesDrawerOpen] = useState(false);\r\n  const [editingAssetLiabilityId, setEditingAssetLiabilityId] = useState(null);\r\n  const [academicResultsDrawerOpen, setAcademicResultsDrawerOpen] = useState(false);\r\n  const [editingAcademicResultId, setEditingAcademicResultId] = useState(null);\r\n  const [voluntaryServiceDrawerOpen, setVoluntaryServiceDrawerOpen] = useState(false);\r\n  const [editingVoluntaryServiceId, setEditingVoluntaryServiceId] = useState(null);\r\n  const [paymentDrawerOpen, setPaymentDrawerOpen] = useState(false);\r\n  const [editingPaymentId, setEditingPaymentId] = useState(null);\r\n  const [interviewDrawerOpen, setInterviewDrawerOpen] = useState(false);\r\n  const [editingInterviewId, setEditingInterviewId] = useState(null);\r\n  const [tasksDrawerOpen, setTasksDrawerOpen] = useState(false);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [aboutMe, setAboutMe] = useState(null);\r\n  const [parentsDetails, setParentsDetails] = useState(null);\r\n  const [universityDetails, setUniversityDetails] = useState(null);\r\n  const [attachments, setAttachments] = useState(null);\r\n  const [expensesSummary, setExpensesSummary] = useState(null);\r\n  const [assetsLiabilities, setAssetsLiabilities] = useState(null);\r\n  const [academicResults, setAcademicResults] = useState(null);\r\n  const [voluntaryServices, setVoluntaryServices] = useState(null);\r\n  const [payments, setPayments] = useState(null);\r\n  const [interviews, setInterviews] = useState(null);\r\n  const [tasks, setTasks] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\r\n  const isAdmin = user?.user_type === \"admin\";\r\n  const isStudent = user?.user_type === \"student\";\r\n\r\n  const pageStyle = {\r\n    backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n    color: isDarkMode ? \"#ffffff\" : \"#000000\",\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const options = {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    };\r\n    const formattedDate = date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n    return formattedDate.replace(/\\//g, \"/\");\r\n  };\r\n\r\n  const fetchStudentDetails = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const userId = user.user_id;\r\n      console.log(\"UserType: \" + user.user_type); // Debug log\r\n      let response;\r\n      if (isAdmin) {\r\n        response = await fetch(`${API_BASE_URL}/student-details`);\r\n      } else if (isStudent && userId) {\r\n        response = await fetch(`${API_BASE_URL}/student-detail/${userId}`);\r\n      } else {\r\n        // console.error(\"User type is neither admin nor student, or user ID is missing\");\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n\r\n      if (!response.ok) {\r\n        console.error(`API error: ${response.status} ${response.statusText}`);\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n\r\n      const data = await response.json();\r\n      // console.log(\"fetchStudentDetails response:\", data); // Debug log\r\n      if (\r\n        data &&\r\n        ((Array.isArray(data) && data.length > 0 && data[0]?.id) ||\r\n          (!Array.isArray(data) && data?.id))\r\n      ) {\r\n        if (isAdmin) {\r\n          // For admin, return the full array with formatted dates\r\n          const formattedData = data.map((student) => {\r\n            const updatedStudent = { ...student };\r\n            Object.keys(updatedStudent).forEach((key) => {\r\n              if (key.toLowerCase().includes(\"date_stamp\")) {\r\n                updatedStudent[key] = formatDate(updatedStudent[key]);\r\n              }\r\n            });\r\n            return updatedStudent;\r\n          });\r\n          setStudentDetails(formattedData);\r\n          setSelectedStudent(formattedData[0] || null);\r\n          setSelectedStudentid(formattedData[0]?.id || null);\r\n          // console.log(\"Setting studentDetails for admin:\", formattedData); // Debug log\r\n          return formattedData; // Return the full array\r\n        } else {\r\n          // For student, return a single student object\r\n          const updatedStudent = Array.isArray(data) ? data[0] : data;\r\n          Object.keys(updatedStudent).forEach((key) => {\r\n            if (key.toLowerCase().includes(\"date_stamp\")) {\r\n              updatedStudent[key] = formatDate(updatedStudent[key]);\r\n            }\r\n          });\r\n          setStudentDetails([updatedStudent]);\r\n          setSelectedStudent(updatedStudent);\r\n          setSelectedStudentid(updatedStudent.id);\r\n          // console.log(\"Setting selectedStudent for student:\", updatedStudent); // Debug log\r\n          return updatedStudent; // Return the single student object\r\n        }\r\n      } else {\r\n        // console.warn(\"No valid student data found in API response:\", data);\r\n        setStudentDetails([]);\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        return [];\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching student details:\", error);\r\n      setStudentDetails([]);\r\n      setSelectedStudent(null);\r\n      setSelectedStudentid(null);\r\n      return [];\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [isAdmin, isStudent, user.user_id, user.user_type]);\r\n\r\n  const fetchStudentData = useCallback(async (studentId) => {\r\n    if (!studentId) {\r\n      setStudentData(null);\r\n      return;\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/student-data/${studentId}`);\r\n      const data = await response.json();\r\n      setStudentData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching student data:\", error);\r\n      setStudentData(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchSectionData = useCallback(async (key, studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/${key}/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n          const updatedItem = { ...item };\r\n          Object.keys(updatedItem).forEach((key) => {\r\n            if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n              updatedItem[key] = formatDate(updatedItem[key]);\r\n            }\r\n          });\r\n          return updatedItem;\r\n        })\r\n        : [];\r\n      return formattedData;\r\n    } catch (error) {\r\n      console.error(`Error fetching ${key}:`, error);\r\n      return [];\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const initializeData = async () => {\r\n      setIsLoading(true);\r\n      if (isStudent) {\r\n        const data = await fetchStudentDetails();\r\n        // console.log(\"initializeData student data:\", data); // Debug log\r\n        if (mounted && data && data.id) {\r\n          setStudentDetails([data]);\r\n          setSelectedStudent(data);\r\n          setSelectedStudentid(data.id);\r\n          await fetchStudentData(data.id);\r\n\r\n          const sectionKeys = [\r\n            \"about-me\",\r\n            \"parents-details\",\r\n            \"university-details\",\r\n            \"attachments\",\r\n            \"expenses-summary\",\r\n            \"assets-liabilities\",\r\n            \"academic-results\",\r\n            \"voluntary-services\",\r\n            \"tasks\",\r\n          ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n\r\n          const responses = await Promise.all(\r\n            sectionKeys.map((key) => fetchSectionData(key, data.id))\r\n          );\r\n\r\n          if (mounted) {\r\n            setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n            setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n            setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n            setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n            setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n            setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n            setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n            setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n            setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n          }\r\n        } else if (mounted) {\r\n          setStudentDetails([]);\r\n          setSelectedStudent(null);\r\n          setSelectedStudentid(null);\r\n          setStudentData(null);\r\n        }\r\n      } else if (isAdmin) {\r\n        const data = await fetchStudentDetails();\r\n        // console.log(\"initializeData admin data:\", data); // Debug log\r\n        if (mounted && Array.isArray(data) && data.length > 0) {\r\n          setStudentDetails(data);\r\n          setSelectedStudent(data[0]);\r\n          setSelectedStudentid(data[0].id);\r\n          await fetchStudentData(data[0].id);\r\n\r\n          const sectionKeys = [\r\n            \"about-me\",\r\n            \"parents-details\",\r\n            \"university-details\",\r\n            \"attachments\",\r\n            \"expenses-summary\",\r\n            \"assets-liabilities\",\r\n            \"academic-results\",\r\n            \"voluntary-services\",\r\n            \"payments\",\r\n            \"interviews\",\r\n            \"tasks\",\r\n          ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n\r\n          const responses = await Promise.all(\r\n            sectionKeys.map((key) => fetchSectionData(key, data[0].id))\r\n          );\r\n\r\n          if (mounted) {\r\n            setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n            setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n            setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n            setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n            setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n            setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n            setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n            setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n            if (isAdmin) {\r\n              setPayments(responses[sectionKeys.indexOf(\"payments\")]);\r\n              setInterviews(responses[sectionKeys.indexOf(\"interviews\")]);\r\n            }\r\n            setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n          }\r\n        } else if (mounted) {\r\n          setStudentDetails([]);\r\n          setSelectedStudent(null);\r\n          setSelectedStudentid(null);\r\n          setStudentData(null);\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    initializeData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [fetchStudentDetails, isAdmin, isStudent, fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAboutMe = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"about-me\", studentId);\r\n      setAboutMe(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchParentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"parents-details\", studentId);\r\n      setParentsDetails(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchUniversityDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"university-details\", studentId);\r\n      setUniversityDetails(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAttachmentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"attachments\", studentId);\r\n      setAttachments(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchExpenseDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"expenses-summary\", studentId);\r\n      setExpensesSummary(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAssetsLiabilities = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"assets-liabilities\", studentId);\r\n      setAssetsLiabilities(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchAcademicResults = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"academic-results\", studentId);\r\n      setAcademicResults(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchVoluntaryServices = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"voluntary-services\", studentId);\r\n      setVoluntaryServices(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchPaymentsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"payments\", studentId);\r\n      setPayments(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchInterviewsDetails = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"interviews\", studentId);\r\n      setInterviews(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const fetchTasks = useCallback(async (studentId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchSectionData(\"tasks\", studentId);\r\n      setTasks(data);\r\n      await fetchStudentData(studentId);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchSectionData, fetchStudentData]);\r\n\r\n  const handleDeleteStudent = async (studentId) => {\r\n    if (isStudent) {\r\n      setSelectedStudent(null);\r\n      setSelectedStudentid(null);\r\n      setStudentData(null);\r\n    } else if (isAdmin) {\r\n      const remainingStudents = studentDetails.filter((student) => student.id !== studentId);\r\n      if (remainingStudents.length > 0) {\r\n        const nextStudent = remainingStudents[0];\r\n        setSelectedStudent(nextStudent);\r\n        setSelectedStudentid(nextStudent.id);\r\n        await fetchStudentData(nextStudent.id);\r\n      } else {\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        setStudentData(null);\r\n      }\r\n      await fetchStudentDetails();\r\n    }\r\n  };\r\n\r\n  const renderDrawer = () => (\r\n    <DrawerForm\r\n      open={drawerOpen}\r\n      onClose={() => setDrawerOpen(false)}\r\n      studentId={selectedStudentid}\r\n      onSave={async (savedStudent) => {\r\n        if (savedStudent && typeof savedStudent === \"object\" && savedStudent.id) {\r\n          const formattedStudent = {\r\n            ...savedStudent,\r\n            ...Object.keys(savedStudent).reduce((acc, key) => {\r\n              if (key.toLowerCase().includes(\"date\") && savedStudent[key]) {\r\n                acc[key] = formatDate(savedStudent[key]);\r\n              } else {\r\n                acc[key] = savedStudent[key];\r\n              }\r\n              return acc;\r\n            }, {}),\r\n          };\r\n          setStudentDetails((prev) => {\r\n            const existingIndex = prev.findIndex((s) => s.id === savedStudent.id);\r\n            if (existingIndex >= 0) {\r\n              const updatedDetails = [...prev];\r\n              updatedDetails[existingIndex] = formattedStudent;\r\n              return updatedDetails;\r\n            } else {\r\n              return [...prev, formattedStudent];\r\n            }\r\n          });\r\n          setSelectedStudent(formattedStudent);\r\n          setSelectedStudentid(formattedStudent.id);\r\n          await fetchStudentData(formattedStudent.id);\r\n        } else {\r\n          console.error(\"Invalid savedStudent data:\", savedStudent);\r\n        }\r\n        setDrawerOpen(false);\r\n        await fetchStudentDetails();\r\n      }}\r\n      onDelete={handleDeleteStudent}\r\n    />\r\n  );\r\n\r\n  const tabSections = [\r\n    { label: \"Show all\", key: \"show_all\" },\r\n    { label: \"About Me\", key: \"about-me\" },\r\n    { label: \"Parents Details\", key: \"parents-details\" },\r\n    { label: \"University Details\", key: \"university-details\" },\r\n    { label: \"Attachments\", key: \"attachments\" },\r\n    { label: \"Financial Details\", key: \"expenses-summary\" },\r\n    { label: \"Assets & Liabilities\", key: \"assets-liabilities\" },\r\n    { label: \"Academic Results\", key: \"academic-results\" },\r\n    { label: \"Voluntary Services\", key: \"voluntary-services\" },\r\n    { label: \"Tasks\", key: \"tasks\" },\r\n  ];\r\n\r\n  if (isAdmin) {\r\n    tabSections.splice(9, 0, { label: \"Payments\", key: \"payments\" }, { label: \"Interviews\", key: \"interviews\" });\r\n  }\r\n\r\n  const capitalizeWords = (str) => {\r\n    if (str.toLowerCase() === \"student id passport number\") {\r\n      return \"ID/Passport Number\";\r\n    }\r\n    if (str.toLowerCase() === \"student willow relationship\") {\r\n      return \"Willowton Group Relationship\";\r\n    }\r\n    const formattedStr = str.replace(/^student /i, \"\").replace(/_/g, \"\");\r\n    return formattedStr.replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n  };\r\n\r\n  const dataForSection = (key) => {\r\n    const mapping = {\r\n      \"about-me\": aboutMe,\r\n      \"parents-details\": parentsDetails,\r\n      \"university-details\": universityDetails,\r\n      \"attachments\": attachments,\r\n      \"expenses-summary\": expensesSummary,\r\n      \"assets-liabilities\": assetsLiabilities,\r\n      \"academic-results\": academicResults,\r\n      \"voluntary-services\": voluntaryServices,\r\n      \"payments\": payments,\r\n      \"interviews\": interviews,\r\n      \"tasks\": tasks,\r\n    };\r\n    return mapping[key] || [];\r\n  };\r\n\r\n  const renderRegion = (sectionKey, data) => {\r\n    if (!data) return null;\r\n\r\n    const isAboutMe = sectionKey === \"about-me\";\r\n    const isParents = sectionKey === \"parents-details\";\r\n    const isUniversityDetails = sectionKey === \"university-details\";\r\n    const isAttachments = sectionKey === \"attachments\";\r\n    const isExpenses = sectionKey === \"expenses-summary\";\r\n    const isAssetsLiabilities = sectionKey === \"assets-liabilities\";\r\n    const isAcademicResults = sectionKey === \"academic-results\";\r\n    const isVoluntaryServices = sectionKey === \"voluntary-services\";\r\n    const isPayments = sectionKey === \"payments\";\r\n    const isInterview = sectionKey === \"interviews\";\r\n    const isTasks = sectionKey === \"tasks\";\r\n\r\n    if ((isPayments || isInterview) && !isAdmin) return null;\r\n\r\n    const section = tabSections.find((sec) => sec.key === sectionKey);\r\n    const sectionLabel = section ? section.label : sectionKey;\r\n\r\n    const handleEdit = (id) => {\r\n      if (isAboutMe) {\r\n        setEditingAboutMeId(id);\r\n        setAboutMeDrawerOpen(true);\r\n      }\r\n      if (isParents) {\r\n        setEditingParentId(id);\r\n        setParentsDrawerOpen(true);\r\n      }\r\n      if (isUniversityDetails) {\r\n        setEditingUniversityId(id);\r\n        setUniversityDetailsDrawerOpen(true);\r\n      }\r\n      if (isAttachments) {\r\n        setEditingAttachmentId(id);\r\n        setAttachmentsDrawerOpen(true);\r\n      }\r\n      if (isExpenses) {\r\n        setEditingExpenseDetailsId(id);\r\n        setExpensesSummaryDrawerOpen(true);\r\n      }\r\n      if (isAssetsLiabilities) {\r\n        setEditingAssetLiabilityId(id);\r\n        setAssetsLiabilitiesDrawerOpen(true);\r\n      }\r\n      if (isAcademicResults) {\r\n        setEditingAcademicResultId(id);\r\n        setAcademicResultsDrawerOpen(true);\r\n      }\r\n      if (isVoluntaryServices) {\r\n        setEditingVoluntaryServiceId(id);\r\n        setVoluntaryServiceDrawerOpen(true);\r\n      }\r\n      if (isPayments) {\r\n        setEditingPaymentId(id);\r\n        setPaymentDrawerOpen(true);\r\n      }\r\n      if (isInterview) {\r\n        setEditingInterviewId(id);\r\n        setInterviewDrawerOpen(true);\r\n      }\r\n      if (isTasks) {\r\n        setEditingTaskId(id);\r\n        setTasksDrawerOpen(true);\r\n      }\r\n    };\r\n\r\n    const handleAdd = () => {\r\n      if (isAboutMe) {\r\n        setEditingAboutMeId(null);\r\n        setAboutMeDrawerOpen(true);\r\n      }\r\n      if (isParents) {\r\n        setEditingParentId(null);\r\n        setParentsDrawerOpen(true);\r\n      }\r\n      if (isUniversityDetails) {\r\n        setEditingUniversityId(null);\r\n        setUniversityDetailsDrawerOpen(true);\r\n      }\r\n      if (isAttachments) {\r\n        setEditingAttachmentId(null);\r\n        setAttachmentsDrawerOpen(true);\r\n      }\r\n      if (isExpenses) {\r\n        setEditingExpenseDetailsId(null);\r\n        setExpensesSummaryDrawerOpen(true);\r\n      }\r\n      if (isAssetsLiabilities) {\r\n        setEditingAssetLiabilityId(null);\r\n        setAssetsLiabilitiesDrawerOpen(true);\r\n      }\r\n      if (isAcademicResults) {\r\n        setEditingAcademicResultId(null);\r\n        setAcademicResultsDrawerOpen(true);\r\n      }\r\n      if (isVoluntaryServices) {\r\n        setEditingVoluntaryServiceId(null);\r\n        setVoluntaryServiceDrawerOpen(true);\r\n      }\r\n      if (isPayments) {\r\n        setEditingPaymentId(null);\r\n        setPaymentDrawerOpen(true);\r\n      }\r\n      if (isInterview) {\r\n        setEditingInterviewId(null);\r\n        setInterviewDrawerOpen(true);\r\n      }\r\n      if (isTasks) {\r\n        setEditingTaskId(null);\r\n        setTasksDrawerOpen(true);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <SectionTable\r\n        data={data}\r\n        sectionKey={sectionKey}\r\n        sectionLabel={sectionLabel}\r\n        isDarkMode={isDarkMode}\r\n        selectedStudentid={selectedStudentid}\r\n        onEdit={selectedStudent ? handleEdit : null}\r\n        onAdd={selectedStudent ? handleAdd : null}\r\n      />\r\n    );\r\n  };\r\n\r\n  const TabContent = ({ sectionKey, data }) => renderRegion(sectionKey, data);\r\n\r\n  const renderTabContent = (tabValue) => {\r\n    const section = tabSections[tabValue];\r\n    return section.key === \"show_all\"\r\n      ? tabSections\r\n        .filter((s) => s.key !== \"show_all\")\r\n        .map((sec, i) => (\r\n          (isAdmin || (sec.key !== \"payments\" && sec.key !== \"interviews\")) && (\r\n            <TabContent key={i} sectionKey={sec.key} data={dataForSection(sec.key)} />\r\n          )\r\n        ))\r\n      : <TabContent sectionKey={section.key} data={dataForSection(section.key)} />;\r\n  };\r\n\r\n  const handleDownloadPDF = (async () => {\r\n    if (!selectedStudent || !studentData) {\r\n      console.error(\"No selected student or student data available for PDF generation\");\r\n      return;\r\n    }\r\n    try {\r\n      const blob = await pdf(<StudentPDFDocument studentData={studentData} />).toBlob();\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      const firstName = selectedStudent.student_name || \"Unknown\";\r\n      const lastName = selectedStudent.student_surname || \"User\";\r\n      a.download = `${firstName} ${lastName} - Student Details PDF.pdf`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(\"Failed to generate PDF:\", error);\r\n    }\r\n  });\r\n\r\n  const isStudentWithNoData = isStudent && !isLoading && !selectedStudent;\r\n  const isUserWithData = (isAdmin || isStudent) && selectedStudent;\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          padding: \"12px\",\r\n          backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n          borderRadius: \"8px\",\r\n          marginBottom: \"12px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          border: \"1px solid #ccc\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"black\" }}\r\n        >\r\n          Student Details\r\n        </Typography>\r\n        {isStudentWithNoData && (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setSelectedStudentid(null);\r\n              setDrawerOpen(true);\r\n            }}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n              color: isDarkMode ? \"black\" : \"white\",\r\n              padding: \"2px 6px\",\r\n              textTransform: \"none\",\r\n            }}\r\n          >\r\n            <AddIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n            Start Application\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {isAdmin && (\r\n          <Grid item xs={12} sm={3} md={2}>\r\n            <Paper\r\n              sx={{\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                color: pageStyle.color,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                  padding: \"6px\",\r\n                  borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    marginLeft: 1,\r\n                  }}\r\n                >\r\n                  Search\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ padding: 2 }}>\r\n                <TextField\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  sx={{\r\n                    mb: 1,\r\n                    borderRadius: 1,\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                      \"& fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                    },\r\n                    \"& .MuiInputBase-input\": {\r\n                      color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    },\r\n                    \"& .MuiInputBase-input::placeholder\": {\r\n                      color: isDarkMode ? \"#B0B0B0\" : \"#666\",\r\n                    },\r\n                  }}\r\n                  placeholder=\"Search\"\r\n                  InputLabelProps={{ style: { color: isDarkMode ? \"#ffffff\" : \"#000000\" } }}\r\n                />\r\n                <div style={{ maxHeight: \"300px\", overflowY: \"auto\" }}>\r\n                  {studentDetails\r\n                    .filter(\r\n                      (s) =>\r\n                        s.student_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                        s.student_surname.toLowerCase().includes(searchQuery.toLowerCase())\r\n                    )\r\n                    .map((student, idx) => (\r\n                      <Card\r\n                        key={idx}\r\n                        sx={{\r\n                          mb: 0.5,\r\n                          boxShadow: 0,\r\n                          height: 55,\r\n                          cursor: \"pointer\",\r\n                          backgroundColor:\r\n                            selectedStudent?.id === student.id\r\n                              ? isDarkMode\r\n                                ? \"white\"\r\n                                : \"#1e293b\"\r\n                              : \"transparent\",\r\n                          color:\r\n                            selectedStudent?.id === student.id\r\n                              ? isDarkMode\r\n                                ? \"#1e293b\"\r\n                                : \"white\"\r\n                              : \"inherit\",\r\n                          \"&:hover\": {\r\n                            backgroundColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                            color: isDarkMode ? \"#1e293b\" : \"white\",\r\n                          },\r\n                        }}\r\n                        onClick={async () => {\r\n                          setSelectedStudent(student);\r\n                          setSelectedStudentid(student.id);\r\n                          setIsLoading(true);\r\n                          await fetchStudentData(student.id);\r\n                          const sectionKeys = [\r\n                            \"about-me\",\r\n                            \"parents-details\",\r\n                            \"university-details\",\r\n                            \"attachments\",\r\n                            \"expenses-summary\",\r\n                            \"assets-liabilities\",\r\n                            \"academic-results\",\r\n                            \"voluntary-services\",\r\n                            \"payments\",\r\n                            \"interviews\",\r\n                            \"tasks\",\r\n                          ].filter((key) => isAdmin || (key !== \"payments\" && key !== \"interviews\"));\r\n                          const responses = await Promise.all(\r\n                            sectionKeys.map((key) => fetchSectionData(key, student.id))\r\n                          );\r\n                          setAboutMe(responses[sectionKeys.indexOf(\"about-me\")]);\r\n                          setParentsDetails(responses[sectionKeys.indexOf(\"parents-details\")]);\r\n                          setUniversityDetails(responses[sectionKeys.indexOf(\"university-details\")]);\r\n                          setAttachments(responses[sectionKeys.indexOf(\"attachments\")]);\r\n                          setExpensesSummary(responses[sectionKeys.indexOf(\"expenses-summary\")]);\r\n                          setAssetsLiabilities(responses[sectionKeys.indexOf(\"assets-liabilities\")]);\r\n                          setAcademicResults(responses[sectionKeys.indexOf(\"academic-results\")]);\r\n                          setVoluntaryServices(responses[sectionKeys.indexOf(\"voluntary-services\")]);\r\n                          if (isAdmin) {\r\n                            setPayments(responses[sectionKeys.indexOf(\"payments\")]);\r\n                            setInterviews(responses[sectionKeys.indexOf(\"interviews\")]);\r\n                          }\r\n                          setTasks(responses[sectionKeys.indexOf(\"tasks\")]);\r\n                        }}\r\n                      >\r\n                        <CardContent sx={{ padding: \"10px\" }}>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: \"bold\" }}>\r\n                            {student.student_name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">{student.student_surname}</Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                </div>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n\r\n        {(isAdmin || selectedStudent) && (\r\n          <Grid item xs={12} sm={9} md={isStudent ? 12 : 10}>\r\n            <Paper\r\n              sx={{\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                color: pageStyle.color,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                  borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                  padding: \"6px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"#1e293b\", marginLeft: 1 }}\r\n                >\r\n                  Student Details Portal\r\n                </Typography>\r\n                {isUserWithData && (\r\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0, margin: 0, padding: 0 }}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        setDrawerOpen(false);\r\n                        setTimeout(() => setDrawerOpen(true), 50);\r\n                        setSelectedStudentid(selectedStudent?.id);\r\n                      }}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                        color: isDarkMode ? \"black\" : \"white\",\r\n                        padding: \"2px 6px\",\r\n                        margin: 0,\r\n                        textTransform: \"none\",\r\n                      }}\r\n                    >\r\n                      <EditIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                      Edit\r\n                    </Button>\r\n                    {isAdmin && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={handleDownloadPDF}\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                        color: isDarkMode ? \"black\" : \"white\",\r\n                        padding: \"2px 6px\",\r\n                        margin: 0,\r\n                        textTransform: \"none\",\r\n                        marginLeft: 1,\r\n                      }}\r\n                    >\r\n                      <DownloadIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                      Download PDF\r\n                    </Button>\r\n                  )}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n\r\n              {isLoading ? (\r\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", padding: 4 }}>\r\n                  <CircularProgress sx={{ color: isDarkMode ? \"white\" : \"black\" }} />\r\n                  <Typography variant=\"body1\" sx={{ ml: 2, color: isDarkMode ? \"white\" : \"black\" }}>\r\n                    Loading...\r\n                  </Typography>\r\n                </Box>\r\n              ) : selectedStudent ? (\r\n                <Box sx={{ padding: 1.5 }}>\r\n                  <Grid container spacing={1}>\r\n                    {Object.entries(selectedStudent).map(([key, value], i) => (\r\n                      key !== \"id\" &&\r\n                      key !== \"user_id\" &&\r\n                      key !== \"employment_status_attachment\" && (\r\n                        <React.Fragment key={i}>\r\n                          <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                            <Typography variant=\"body1\">\r\n                              <strong>{capitalizeWords(key.replace(/_/g, \" \"))}</strong>\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                            <Typography variant=\"body1\">{value}</Typography>\r\n                          </Grid>\r\n                        </React.Fragment>\r\n                      )\r\n                    ))}\r\n                  </Grid>\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body1\" sx={{ m: 2, fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"black\" }}>\r\n                  No Record Selected\r\n                </Typography>\r\n              )}\r\n\r\n              {!isLoading && selectedStudent && (\r\n                <Box sx={{ p: 1, overflowX: \"auto\" }}>\r\n                  <Tabs\r\n                    value={tabValue}\r\n                    onChange={(event, newValue) => setTabValue(newValue)}\r\n                    aria-label=\"tabs\"\r\n                    sx={{\r\n                      \"& .MuiTab-root\": {\r\n                        fontWeight: \"600\",\r\n                        textTransform: \"capitalize\",\r\n                        mr: -2,\r\n                        color: isDarkMode ? \"white\" : \"black\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    {tabSections.map((section, i) => (\r\n                      <Tab key={i} label={section.label} />\r\n                    ))}\r\n                  </Tabs>\r\n                </Box>\r\n              )}\r\n\r\n              {!isLoading && selectedStudent && (\r\n                <Box sx={{ p: 2 }}>{renderTabContent(tabValue)}</Box>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {renderDrawer()}\r\n\r\n      <AboutusDrawer\r\n        open={aboutMeDrawerOpen}\r\n        onClose={() => {\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        aboutMeId={editingAboutMeId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAboutMe(selectedStudentid);\r\n          }\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n      />\r\n\r\n      <ParentsDrawer\r\n        open={parentsDrawerOpen}\r\n        onClose={() => {\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        parentId={editingParentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchParentsDetails(selectedStudentid);\r\n          }\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n      />\r\n\r\n      <UniversityDetailsDrawer\r\n        open={universityDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        universityDetailsId={editingUniversityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchUniversityDetails(selectedStudentid);\r\n          }\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n      />\r\n\r\n      <AttachmentsDrawer\r\n        open={attachmentsDrawerOpen}\r\n        onClose={() => {\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        attachmentId={editingAttachmentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAttachmentsDetails(selectedStudentid);\r\n          }\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n      />\r\n\r\n      <ExpenseDetailsDrawer\r\n        open={expenseDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        expenseDetailsId={editingExpenseDetailsId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchExpenseDetails(selectedStudentid);\r\n          }\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n      />\r\n\r\n      <AssetsLiabilitiesDrawer\r\n        open={assetsLiabilitiesDrawerOpen}\r\n        onClose={() => {\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        assetLiabilityId={editingAssetLiabilityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAssetsLiabilities(selectedStudentid);\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n      />\r\n\r\n      <AcademicResultsDrawer\r\n        open={academicResultsDrawerOpen}\r\n        onClose={() => {\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        resultId={editingAcademicResultId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAcademicResults(selectedStudentid);\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n      />\r\n\r\n      <VoluntaryServiceDrawer\r\n        open={voluntaryServiceDrawerOpen}\r\n        onClose={() => {\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        recordId={editingVoluntaryServiceId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchVoluntaryServices(selectedStudentid);\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n      />\r\n\r\n      <PaymentDrawer\r\n        open={paymentDrawerOpen}\r\n        onClose={() => setPaymentDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingPaymentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchPaymentsDetails(selectedStudentid);\r\n          }\r\n          setPaymentDrawerOpen(false);\r\n          setEditingPaymentId(null);\r\n        }}\r\n      />\r\n\r\n      <InterviewDrawer\r\n        open={interviewDrawerOpen}\r\n        onClose={() => setInterviewDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingInterviewId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchInterviewsDetails(selectedStudentid);\r\n          }\r\n          setInterviewDrawerOpen(false);\r\n          setEditingInterviewId(null);\r\n        }}\r\n      />\r\n\r\n      <TaskDetailsDrawer\r\n        open={tasksDrawerOpen}\r\n        onClose={() => {\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        taskId={editingTaskId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchTasks(selectedStudentid);\r\n          }\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;"],"names":["races","provinces","maritalStatus","yes_no","employmentStatus","highestEducation","semesters","financeType","religions","studentType","nationality","parentRelationship","API_BASE_URL","process","_ref","open","onClose","studentId","onSave","onDelete","isDarkMode","useContext","ThemeContext","selectedDate","setSelectedDate","useState","emailError","setEmailError","whatsappError","setWhatsappError","alternativeError","setAlternativeError","emergencyError","setEmergencyError","emergencyContactOption","setEmergencyContactOption","deleteConfirmationOpen","setDeleteConfirmationOpen","deleteAttachmentConfirmationOpen","setDeleteAttachmentConfirmationOpen","errorMessage","setErrorMessage","isLoading","setIsLoading","drawerWidth","useMediaQuery","user","JSON","parse","localStorage","getItem","isAdmin","user_type","relationshipTypes","formData","setFormData","student_name","student_surname","student_nationality","student_id_passport_number","student_type","student_religion","student_finance_type","student_whatsapp_number","student_alternative_number","student_email_address","student_highest_education","student_home_address","student_suburb","student_area_code","student_province","student_date_of_birth","student_race","student_marital_status","student_employment_status","student_job_title","student_company_of_employment","student_current_salary","student_number_of_siblings","student_siblings_bursary","student_willow_relationship","relation_type","relation_hr_contact","relation_branch","relation_name","relation_surname","relation_employee_code","relation_reference","student_emergency_contact_name","student_emergency_contact_number","student_emergency_contact_relationship","student_emergency_contact_address","student_status","student_status_comment","employment_status_attachment","employment_status_attachment_name","statusOptions","validateEmail","email","test","validateNumber","number","useEffect","async","response","fetch","ok","Error","statusText","data","json","dates","Date","prev","error","console","fetchStudentData","handleDateChange","newDate","formattedDate","format","handleChange","e","name","value","target","sanitizedValue","includes","replace","slice","prevState","handleFileChange","file","files","fileNameWithoutExtension","handleViewFile","window","handleDeleteAttachmentClick","handleDeleteAttachmentCancel","handleEmergencyContactChange","newValue","handleSave","userId","user_id","url","method","body","FormData","Object","keys","forEach","key","undefined","append","savedStudent","cleanStudent","handleDeleteCancel","filteredFinanceType","filter","type","_jsx","Drawer","anchor","children","_jsxs","Box","sx","width","height","display","flexDirection","backgroundColor","padding","borderBottom","Typography","variant","fontWeight","color","mt","flex","overflowY","justifyContent","alignItems","CircularProgress","Grid","container","spacing","map","index","renderField","fieldStyles","borderRadius","inputLabelProps","style","item","xs","Autocomplete","onChange","options","renderInput","params","TextField","label","InputLabelProps","labels","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","wrapperClassName","className","helperText","inputProps","maxLength","pattern","marginTop","disabled","multiline","rows","WebkitTextFillColor","Button","component","borderColor","hidden","_Fragment","onClick","startIcon","VisibilityIcon","DeleteIcon","toLowerCase","split","word","charAt","toUpperCase","join","Divider","borderTop","gap","size","CloseIcon","handleDeleteClick","SaveIcon","AddIcon","Dialog","DialogTitle","DialogContent","DialogActions","err","aboutMeId","then","res","initialData","student_details_portal_id","i","toString","padStart","p","question","id","isUpdate","dataToSend","headers","stringify","result","parentId","cellNumberError","setCellNumberError","validateCellNumber","parent_email_address","parent_cell_number","parent_relationship","parent_name","parent_surname","parent_employment_status","parent_industry","parent_highest_education","parent_salary","parent_grant","parent_other_income","numericValue","entries","_ref2","universityDetailsId","normalizedData","Institution_name","name_of_Course","Intake_Year","Semester","NQF_Level","Current_Year","Student_Number","previously_funded","previously_funded_amount","tuition","tuition_amount","accommodation","accommodation_fee","textbooks","textbooks_fee","travel","travel_fee","total_university_expense","previous_bursary_org_1","previous_bursary_org_1_name","previous_bursary_org_1_amount","previous_bursary_org_1_contact","previous_bursary_org_2","previous_bursary_org_2_name","previous_bursary_org_2_amount","previous_bursary_org_2_contact","previous_bursary_org_3","previous_bursary_org_3_name","previous_bursary_org_3_amount","previous_bursary_org_3_contact","Application_Process_Status","total","reduce","sum","field","parseFloat","handleAutocompleteChange","newFormData","conditionalField","conditionalFields","find","select","amount","bursaryFields","bursaryConditionalFields","contact","yesNoOptions","isConditionalSelect","some","isConditionalamount","isBursarySelect","isBursaryField","customLabel","relatedBursary","relatedSelect","InputProps","readOnly","attachmentId","Attachments_Name","attachments_name","Attachments_Description","attachments_description","Attachment","Student_Details_Portal_id","expenseDetailsId","Father_Monthly_Salary","Mother_Monthly_Salary","Spouse_Monthly_Salary","Applicant_Monthly_Salary","Rent_Income","Grants","Other_Income","Rent_Bond_Expense","Rates_Expense","Utilities_Expense","Groceries_Expense","Transport_Petrol_Expense","Telephone_Expense","Medical_Aid_Expense","Insurance_Expense","Other_Expense","total_income","total_expenses","father_monthly_salary","mother_monthly_salary","spouse_monthly_salary","applicant_monthly_salary","rent_income","grants","other_income","rent_bond_expense","rates_expense","utilities_expense","groceries_expense","transport_petrol_expense","telephone_expense","medical_aid_expense","insurance_expense","other_expense","Number","catch","totalIncome","totalExpenses","idx","char","inputMode","toFixed","updatedFormData","stringFormData","acc","savedData","assetLiabilityId","Gold_Silver","Cash_in_Bank","Investments","Liabilities","gold_silver","cash_in_bank","investments","liabilities","resultId","Results_Module","results_module","Results_Percentage","results_percentage","Results_Attachment","Results_Attachment_Name","results_attachment_name","recordId","Organisation","organisation","Contact_Person","contact_person","Contact_Person_Number","contact_person_number","Hours_Contributed","hours_contributed","Proof_of_Service","Service_Attachment_Name","service_attachment_name","createdBy","first_name","last_name","date","payments_date","Payments_Expense_Type","payments_expense_type","Payments_Vendor","payments_vendor","Payments_Expense_Amount","payments_expense_amount","Payments_Date","Payments_ET_Number","payments_et_number","Payments_Attachment_Name","payments_attachment_name","Proof_of_Payment","Payment_Created_By","payment_created_by","Interviewer_Name","interviewer_name","Year_of_Interview","year_of_interview","Interview_Q01","interview_q01","Interview_Q02","interview_q02","Interview_Q03","interview_q03","Interview_Q04","interview_q04","Interview_Q05","interview_q05","Interview_Q06","interview_q06","Interview_Q07","interview_q07","Interview_Q08","interview_q08","Interview_Q09","interview_q09","Interview_Q10","interview_q10","Interview_Q11","interview_q11","Interview_Q12","interview_q12","Interview_Q13","interview_q13","Interview_Q14","interview_q14","Interview_Q15","interview_q15","Interview_Q16","interview_q16","Interview_Q17","interview_q17","Interview_Q18","interview_q18","Interview_Q19","interview_q19","Interview_Q20","interview_q20","Interview_Q21","interview_q21","Interview_Q22","interview_q22","Interview_Q23","interview_q23","Interview_Q24","interview_q24","Interview_Created_By","interview_created_by","Date_Stamp","date_stamp","questionNumber","taskId","useMemo","isStudent","created_by","task_description","task_status","task_comment","taskStatusOptions","aboutMeQuestions","interviewQuestions","styles","StyleSheet","create","page","fontSize","fontFamily","lineHeight","header","marginBottom","paddingBottom","logo","objectFit","headerText","textAlign","headerTitle1","headerTitle2","fontStyle","reportTime","sectionTitle","studentDetailsRow","studentDetailsField","borderBottomWidth","borderBottomColor","borderBottomStyle","studentDetailsLabel","studentDetailsValue","table","borderStyle","borderWidth","tableRow","minHeight","tableCellLabel","borderRightWidth","borderRightColor","wordBreak","minWidth","overflow","tableCellValue","toSentenceCase","str","removePrefix","cleanLabel","cleanSection","startsWith","length","mapQuestion","section","questions","match","parseInt","StudentDetailsSection","k","v","push","View","Text","row","rowIdx","_ref3","RenderSection","_ref4","title","_ref5","_ref6","wrap","numberOfLines","RenderMultiple","_ref7","showNumbering","_ref8","val","_ref9","studentData","Document","Page","Image","src","toLocaleString","year","month","day","hour","minute","hour12","student_details","about_me","assets_liabilities","expense_details","interview","university_details","parents_details","attachments","payments","results","tasks","voluntary_service","SectionTable","sectionKey","sectionLabel","selectedStudentid","onEdit","onAdd","searchTerm","setSearchTerm","columns","setColumns","visibleColumns","setVisibleColumns","columnWidths","setColumnWidths","anchorEl","setAnchorEl","showSearch","setShowSearch","sortConfig","setSortConfig","direction","setPage","rowsPerPage","setRowsPerPage","columnSearchTerm","setColumnSearchTerm","totalRecords","setTotalRecords","searchRef","useRef","resizingRef","Boolean","theme","useTheme","isSmallScreen","breakpoints","down","sentenceCase","useCallback","c","calculateColumnWidth","col","calculatedWidth","Math","max","cols","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","handleMouseMove","startX","startWidth","newWidth","clientX","stopResizing","userSelect","startResizing","preventDefault","filteredData","sort","a","b","aVal","bVal","localeCompare","paginatedData","filteredColumns","lowerTerm","raw","formatted","border","ref","transition","opacity","InputBase","placeholder","px","startAdornment","SearchIcon","mr","endAdornment","IconButton","ClearIcon","Tooltip","currentTarget","ViewColumnIcon","exportToExcel","exportData","s","fromEntries","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","DownloadIcon","Menu","PaperProps","maxHeight","boxShadow","autoFocus","onKeyDown","stopPropagation","mb","MenuItem","dense","FormControlLabel","control","Checkbox","checked","indexOf","updated","splice","toggleColumn","my","ListItemIcon","RefreshIcon","ListItemText","primary","primaryTypographyProps","tableLayout","cursor","position","handleSort","paddingRight","ArrowDropUpIcon","ArrowDropDownIcon","onMouseDown","right","top","background","EditIcon","textOverflow","whiteSpace","toLocaleDateString","colSpan","Select","n","MuiMenuItem","min","ArrowBackIosIcon","ArrowForwardIosIcon","StudentDetails","searchQuery","setSearchQuery","studentDetails","setStudentDetails","selectedStudent","setSelectedStudent","setSelectedStudentid","tabValue","setTabValue","drawerOpen","setDrawerOpen","aboutMeDrawerOpen","setAboutMeDrawerOpen","editingAboutMeId","setEditingAboutMeId","parentsDrawerOpen","setParentsDrawerOpen","editingParentId","setEditingParentId","universityDetailsDrawerOpen","setUniversityDetailsDrawerOpen","editingUniversityId","setEditingUniversityId","attachmentsDrawerOpen","setAttachmentsDrawerOpen","editingAttachmentId","setEditingAttachmentId","expenseDetailsDrawerOpen","setExpensesSummaryDrawerOpen","editingExpenseDetailsId","setEditingExpenseDetailsId","assetsLiabilitiesDrawerOpen","setAssetsLiabilitiesDrawerOpen","editingAssetLiabilityId","setEditingAssetLiabilityId","academicResultsDrawerOpen","setAcademicResultsDrawerOpen","editingAcademicResultId","setEditingAcademicResultId","voluntaryServiceDrawerOpen","setVoluntaryServiceDrawerOpen","editingVoluntaryServiceId","setEditingVoluntaryServiceId","paymentDrawerOpen","setPaymentDrawerOpen","editingPaymentId","setEditingPaymentId","interviewDrawerOpen","setInterviewDrawerOpen","editingInterviewId","setEditingInterviewId","tasksDrawerOpen","setTasksDrawerOpen","editingTaskId","setEditingTaskId","setStudentData","aboutMe","setAboutMe","parentsDetails","setParentsDetails","universityDetails","setUniversityDetails","setAttachments","expensesSummary","setExpensesSummary","assetsLiabilities","setAssetsLiabilities","academicResults","setAcademicResults","voluntaryServices","setVoluntaryServices","setPayments","interviews","setInterviews","setTasks","pageStyle","formatDate","dateString","fetchStudentDetails","_data$","log","status","Array","isArray","_formattedData$","formattedData","student","updatedStudent","fetchSectionData","updatedItem","endsWith","mounted","sectionKeys","responses","Promise","all","initializeData","fetchAboutMe","fetchParentsDetails","fetchUniversityDetails","fetchAttachmentsDetails","fetchExpenseDetails","fetchAssetsLiabilities","fetchAcademicResults","fetchVoluntaryServices","fetchPaymentsDetails","fetchInterviewsDetails","fetchTasks","handleDeleteStudent","remainingStudents","nextStudent","tabSections","capitalizeWords","dataForSection","TabContent","renderRegion","isAboutMe","isParents","isUniversityDetails","isAttachments","isExpenses","isAssetsLiabilities","isAcademicResults","isVoluntaryServices","isPayments","isInterview","isTasks","sec","handleAdd","isStudentWithNoData","isUserWithData","textTransform","marginRight","sm","md","Paper","marginLeft","Card","CardContent","margin","setTimeout","blob","pdf","StudentPDFDocument","toBlob","URL","createObjectURL","createElement","href","firstName","lastName","download","click","revokeObjectURL","ml","React","pb","m","overflowX","Tabs","Tab","renderTabContent","DrawerForm","formattedStudent","existingIndex","findIndex","updatedDetails","AboutusDrawer","ParentsDrawer","UniversityDetailsDrawer","AttachmentsDrawer","ExpenseDetailsDrawer","AssetsLiabilitiesDrawer","AcademicResultsDrawer","VoluntaryServiceDrawer","PaymentDrawer","InterviewDrawer","TaskDetailsDrawer"],"sourceRoot":""}