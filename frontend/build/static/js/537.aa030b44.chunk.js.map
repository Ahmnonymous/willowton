{"version":3,"file":"static/js/537.aa030b44.chunk.js","mappings":"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","sources":["components/lov.js","pages/Drawer/StudentDetailDrawer.js","pages/Drawer/AboutUsDrawer.js","pages/Drawer/ParentsDrawer.js","pages/Drawer/UniversityDetailsDrawer.js","pages/Drawer/AttachmentsDrawer.js","pages/Drawer/ExpenseDetailsDrawer.js","pages/Drawer/AssetsLiabilitiesDrawer.js","pages/Drawer/AcademicResultsDrawer.js","pages/Drawer/VoluntaryServiceDrawer.js","pages/Drawer/PaymentDrawer.js","pages/Drawer/InterviewDrawer.js","pages/Drawer/TaskDetailsDrawer.js","pages/StudentPDFDocument.js","pages/StudentDetails.js"],"sourcesContent":["export const races = [\r\n  \"Asian\",\r\n  \"Black\",\r\n  \"Caucasian\",\r\n  \"Multiracial\"\r\n];\r\n\r\nexport const provinces = [\r\n  \"Eastern Cape\",\r\n  \"Free State\",\r\n  \"Gauteng\",\r\n  \"KwaZulu-Natal\",\r\n  \"Limpopo\",\r\n  \"Mpumalanga\",\r\n  \"Northern Cape\",\r\n  \"North West\",\r\n  \"Western Cape\"\r\n];\r\n\r\nexport const maritalStatus = [\r\n  \"Divorced\",\r\n  \"Married\",\r\n  \"Single\",\r\n  \"Widowed\"\r\n];\r\n\r\nexport const yes_no = [\r\n  \"Yes\",\r\n  \"No\"\r\n];\r\n\r\nexport const employmentStatus = [\r\n  \"Disabled Grant\",\r\n  \"Full Time Employed\",\r\n  \"Part-Time Employed\",\r\n  \"Pensioner\",\r\n  \"Self Employed\",\r\n  \"Student\",\r\n  \"Unemployed\"\r\n];\r\n\r\nexport const highestEducation = [\r\n  // \"NQF 1\", \"NQF 2\", \"NQF 3\", \"NQF 4\",\r\n  // \"NQF 5\", \"NQF 6\", \"NQF 7\", \"NQF 8\",\r\n  // \"NQF 9\", \"NQF 10\", \"Matric\",\r\n  \"NQF 5 - Matric/Higher Certificate\",\"NQF 6 - Diploma\",\r\n  \"NQF 7 - Degree\",\"NQF 8 - Honors/Postgraduate\",\"NQF 9 - Masters\",\"NQF 10 - PhD/Doctorate\"\r\n];\r\n\r\nexport const semesters = [\r\n  \"1st Semester (January-June)\", \"2nd Semester (July-Decemeber)\"\r\n]\r\n\r\nexport const financeType = [\r\n  \"Staff Bursary\",\r\n  \"Student Loan\",\r\n  \"Zakah\"\r\n];\r\n\r\nexport const religions = [\r\n  \"African beliefs\",\r\n  \"Christianity\",\r\n  \"Hinduism\",\r\n  \"Islam\",\r\n  \"Judaism\"\r\n];\r\n\r\nexport const studentType = [\r\n  \"Currently in matric\",\r\n  \"Currently in university\"\r\n];\r\n\r\nexport const nationality = [\r\n  \"Angola\", \"Congo\", \"Equatorial Quinea\", \"Kenya\",\r\n  \"Mozambique\", \"Nigeria\", \"Uganda\", \"India\",\r\n  \"Botswana\", \"Central African Republic\", \"Ghana\",\r\n  \"Malawi\", \"Pakistan\", \"South African\", \"Bangladesh\",\r\n  \"Somalian\", \"Lesotho\", \"Ivory Coast\", \"Burundi\"\r\n];\r\n\r\nexport const emergencyContactRelationship = [\r\n  \"Mother\", \"Father\", \"Brother\", \"Sister\",\r\n  \"Aunty\", \"Uncle\", \"Grand Mother\", \"Grand Father\"\r\n];\r\n\r\nexport const parentRelationship = [\r\n  \"Mother\", \"Father\"\r\n];\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport {\r\n  studentType,\r\n  religions,\r\n  financeType,\r\n  races,\r\n  maritalStatus,\r\n  employmentStatus,\r\n  highestEducation,\r\n  nationality,\r\n  provinces,\r\n  yes_no,\r\n} from \"../../components/lov\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport { format, parse } from 'date-fns';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst StudentDetailDrawer = ({ open, onClose, studentId, onSave, onDelete }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [whatsappError, setWhatsappError] = useState(\"\");\r\n  const [alternativeError, setAlternativeError] = useState(\"\");\r\n  const [emergencyError, setEmergencyError] = useState(\"\");\r\n  const [emergencyContactOption, setEmergencyContactOption] = useState(\"\");\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [deleteAttachmentConfirmationOpen, setDeleteAttachmentConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Added for error feedback\r\n  const [isLoading, setIsLoading] = useState(false); // Added for loading state\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userType = user?.user_type; // student or admin\r\n  const isAdmin = userType === \"admin\";\r\n\r\n  const relationshipTypes = [\r\n    \"Staff\",\r\n    \"Dependent of Staff\",\r\n    \"Family\",\r\n    \"Referral\",\r\n    \"Director/Board Member or stakeholder\"\r\n  ];\r\n\r\n  const [formData, setFormData] = useState({\r\n    student_name: \"\",\r\n    student_surname: \"\",\r\n    student_nationality: \"\",\r\n    student_id_passport_number: \"\",\r\n    student_type: \"\",\r\n    student_religion: \"\",\r\n    student_finance_type: \"\",\r\n    student_whatsapp_number: \"\",\r\n    student_alternative_number: \"\",\r\n    student_email_address: \"\",\r\n    student_highest_education: \"\",\r\n    student_home_address: \"\",\r\n    student_suburb: \"\",\r\n    student_area_code: \"\",\r\n    student_province: \"\",\r\n    student_date_of_birth: \"\",\r\n    student_race: \"\",\r\n    student_marital_status: \"\",\r\n    student_employment_status: \"\",\r\n    student_job_title: \"\",\r\n    student_company_of_employment: \"\",\r\n    student_current_salary: \"\",\r\n    student_number_of_siblings: \"\",\r\n    student_siblings_bursary: \"\",\r\n    student_willow_relationship: \"\",\r\n    relation_type: \"\",\r\n    relation_hr_contact: \"\",\r\n    relation_branch: \"\",\r\n    relation_name: \"\",\r\n    relation_surname: \"\",\r\n    relation_employee_code: \"\",\r\n    relation_reference: \"\",\r\n    student_emergency_contact_name: \"\",\r\n    student_emergency_contact_number: \"\",\r\n    student_emergency_contact_relationship: \"\",\r\n    student_emergency_contact_address: \"\",\r\n    student_status: \"Pending\",\r\n    student_status_comment: \"\",\r\n    employment_status_attachment: null,\r\n    employment_status_attachment_name: \"\",\r\n  });\r\n\r\n  const statusOptions = [\"Received\", \"Pending\", \"Approved\", \"Declined\"];\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateNumber = (number) => {\r\n    const numberRegex = /^\\d{10}$/;\r\n    return numberRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (studentId) {\r\n        const fetchStudentData = async () => {\r\n          setIsLoading(true);\r\n          try {\r\n            const response = await fetch(`${API_BASE_URL}/student-details/${studentId}`);\r\n            if (!response.ok) {\r\n              throw new Error(`Failed to fetch student data: ${response.statusText}`);\r\n            }\r\n            const data = await response.json();\r\n            const dates = data.student_date_of_birth ? parse(data.student_date_of_birth, 'MM/dd/yyyy', new Date()) : null;\r\n            setSelectedDate(dates);\r\n            setFormData((prev) => ({\r\n              ...prev,\r\n              ...data,\r\n              student_date_of_birth: dates,\r\n              student_status: data.student_status || \"Pending\",\r\n              student_status_comment: data.student_status_comment || \"\",\r\n              relation_type: data.relation_type || \"\",\r\n              relation_hr_contact: data.relation_hr_contact || \"\",\r\n              relation_branch: data.relation_branch || \"\",\r\n              relation_name: data.relation_name || \"\",\r\n              relation_surname: data.relation_surname || \"\",\r\n              relation_employee_code: data.relation_employee_code || \"\",\r\n              relation_reference: data.relation_reference || \"\",\r\n              employment_status_attachment: null, // Don't preload binary data\r\n              employment_status_attachment_name: data.employment_status_attachment_name || \"\",\r\n            }));\r\n            setEmergencyContactOption(data.student_emergency_contact_name ? \"Add new\" : \"\");\r\n            setEmailError(data.student_email_address && !validateEmail(data.student_email_address) ? \"Please enter a valid email address\" : \"\");\r\n            setWhatsappError(data.student_whatsapp_number && !validateNumber(data.student_whatsapp_number) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n            setAlternativeError(data.student_alternative_number && !validateNumber(data.student_alternative_number) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n            setEmergencyError(data.student_emergency_contact_number && !validateNumber(data.student_emergency_contact_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n          } catch (error) {\r\n            console.error(\"Error fetching student data:\", error);\r\n            setErrorMessage(\"Failed to load student data. Please try again.\");\r\n          } finally {\r\n            setIsLoading(false);\r\n          }\r\n        };\r\n        fetchStudentData();\r\n      } else {\r\n        setSelectedDate(null);\r\n        setFormData({\r\n          student_name: '',\r\n          student_surname: '',\r\n          student_nationality: '',\r\n          student_id_passport_number: '',\r\n          student_type: '',\r\n          student_religion: '',\r\n          student_finance_type: '',\r\n          student_whatsapp_number: '',\r\n          student_alternative_number: '',\r\n          student_email_address: '',\r\n          student_highest_education: '',\r\n          student_home_address: '',\r\n          student_suburb: '',\r\n          student_area_code: '',\r\n          student_province: '',\r\n          student_date_of_birth: '',\r\n          student_race: '',\r\n          student_marital_status: '',\r\n          student_employment_status: '',\r\n          student_job_title: '',\r\n          student_company_of_employment: '',\r\n          student_current_salary: '',\r\n          student_number_of_siblings: '',\r\n          student_siblings_bursary: '',\r\n          student_willow_relationship: '',\r\n          relation_type: '',\r\n          relation_hr_contact: '',\r\n          relation_branch: '',\r\n          relation_name: '',\r\n          relation_surname: '',\r\n          relation_employee_code: '',\r\n          relation_reference: '',\r\n          student_emergency_contact_name: '',\r\n          student_emergency_contact_number: '',\r\n          student_emergency_contact_relationship: '',\r\n          student_emergency_contact_address: '',\r\n          student_status: 'Pending',\r\n          student_status_comment: '',\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: '',\r\n        });\r\n        setEmergencyContactOption(\"\");\r\n        setEmailError(\"\");\r\n        setWhatsappError(\"\");\r\n        setAlternativeError(\"\");\r\n        setEmergencyError(\"\");\r\n        setErrorMessage(\"\");\r\n      }\r\n    }\r\n  }, [open, studentId]);\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, student_date_of_birth: formattedDate }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let sanitizedValue = value;\r\n\r\n    if ([\"student_whatsapp_number\", \"student_alternative_number\", \"student_emergency_contact_number\"].includes(name)) {\r\n      sanitizedValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n    }\r\n\r\n    setFormData((prevState) => ({ ...prevState, [name]: sanitizedValue }));\r\n\r\n    if (name === \"student_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_whatsapp_number\") {\r\n      setWhatsappError(sanitizedValue && !validateNumber(sanitizedValue) ? \"WhatsApp number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_alternative_number\") {\r\n      setAlternativeError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Alternative number must be exactly 10 digits\" : \"\");\r\n    }\r\n    if (name === \"student_emergency_contact_number\") {\r\n      setEmergencyError(sanitizedValue && !validateNumber(sanitizedValue) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    }\r\n\r\n    if (name === \"student_willow_relationship\") {\r\n      if (value === \"No\") {\r\n        setFormData((prevState) => ({\r\n          ...prevState,\r\n          relation_type: \"\",\r\n          relation_hr_contact: \"\",\r\n          relation_branch: \"\",\r\n          relation_name: \"\",\r\n          relation_surname: \"\",\r\n          relation_employee_code: \"\",\r\n          relation_reference: \"\",\r\n        }));\r\n      }\r\n    }\r\n    if (name === \"relation_type\" && formData.student_willow_relationship === \"Yes\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        relation_hr_contact: \"\",\r\n        relation_branch: \"\",\r\n        relation_name: \"\",\r\n        relation_surname: \"\",\r\n        relation_employee_code: \"\",\r\n        relation_reference: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        employment_status_attachment_name: fileNameWithoutExtension,\r\n        employment_status_attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (studentId) {\r\n      window.open(`${API_BASE_URL}/student-details/view-attachment/${studentId}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentClick = () => {\r\n    setDeleteAttachmentConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteAttachmentConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/student-details/delete-attachment/${studentId}`, {\r\n        method: \"PUT\",\r\n      });\r\n      if (response.ok) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          employment_status_attachment: null,\r\n          employment_status_attachment_name: \"\",\r\n        }));\r\n        // // setsuccessmessage(\"Attachment deleted successfully!\");\r\n        setDeleteAttachmentConfirmationOpen(false);\r\n      } else {\r\n        setErrorMessage(\"Failed to delete attachment. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting attachment:\", err);\r\n      setErrorMessage(\"Error deleting attachment. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAttachmentCancel = () => {\r\n    setDeleteAttachmentConfirmationOpen(false);\r\n  };\r\n\r\n  const handleEmergencyContactChange = (e, newValue) => {\r\n    setEmergencyContactOption(newValue);\r\n    if (newValue === \"Same as above\") {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: formData.student_name,\r\n        student_emergency_contact_number: formData.student_whatsapp_number,\r\n        student_emergency_contact_relationship: \"Self\",\r\n        student_emergency_contact_address: formData.student_home_address,\r\n      }));\r\n      setEmergencyError(formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number) ? \"Emergency contact number must be exactly 10 digits\" : \"\");\r\n    } else {\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        student_emergency_contact_name: \"\",\r\n        student_emergency_contact_number: \"\",\r\n        student_emergency_contact_relationship: \"\",\r\n        student_emergency_contact_address: \"\",\r\n      }));\r\n      setEmergencyError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n  // Validation checks\r\n  if (formData.student_email_address && !validateEmail(formData.student_email_address)) {\r\n    setEmailError(\"Please enter a valid email address\");\r\n    return;\r\n  }\r\n  if (formData.student_whatsapp_number && !validateNumber(formData.student_whatsapp_number)) {\r\n    setWhatsappError(\"WhatsApp number must be exactly 10 digits\");\r\n    return;\r\n  }\r\n  if (formData.student_alternative_number && !validateNumber(formData.student_alternative_number)) {\r\n    setAlternativeError(\"Alternative number must be exactly 10 digits\");\r\n    return;\r\n  }\r\n  if (formData.student_emergency_contact_number && !validateNumber(formData.student_emergency_contact_number)) {\r\n    setEmergencyError(\"Emergency contact number must be exactly 10 digits\");\r\n    return;\r\n  }\r\n\r\n  const userId = user?.user_id;\r\n  const url = studentId\r\n    ? `${API_BASE_URL}/student-details/update/${studentId}`\r\n    : `${API_BASE_URL}/student-details/insert`;\r\n  const method = studentId ? \"PUT\" : \"POST\";\r\n\r\n  const body = new FormData();\r\n  Object.keys(formData).forEach((key) => {\r\n    if (key !== \"employment_status_attachment\" && formData[key] !== null && formData[key] !== undefined) {\r\n      body.append(key, formData[key]);\r\n    }\r\n  });\r\n  if (formData.employment_status_attachment) {\r\n    body.append(\"employment_status_attachment\", formData.employment_status_attachment);\r\n  }\r\n  if (!studentId) {\r\n    body.append(\"user_id\", userId);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n    });\r\n\r\n    if (response.ok) {\r\n      const savedStudent = await response.json();\r\n      // Ensure savedStudent is a clean object\r\n      const cleanStudent = {\r\n        ...savedStudent,\r\n        // Remove any problematic fields (e.g., binary data or non-serializable objects)\r\n        employment_status_attachment: null,\r\n        employment_status_attachment_name: savedStudent.employment_status_attachment_name || \"\",\r\n      };\r\n      // // setsuccessmessage(studentId ? \"Updated successfully!\" : \"Created successfully!\");\r\n      onSave(cleanStudent); // Pass cleaned student data\r\n      onClose(); // Close the drawer\r\n    } else {\r\n      console.error(\"Failed to save data:\", response.statusText);\r\n      // setsuccessmessage(\"Failed to save data. Please try again.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving student data:\", error);\r\n    // setsuccessmessage(\"An error occurred. Please try again.\");\r\n    onClose(); // Close the drawer even on error\r\n  }\r\n};\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!studentId) return;\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/student-details/delete/${studentId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to delete student: ${response.statusText}`);\r\n      }\r\n\r\n      onDelete(studentId);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n      setErrorMessage(\"Failed to delete student. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const filteredFinanceType = formData.student_religion === \"Islam\" \r\n    ? financeType \r\n    : financeType.filter(type => type !== \"Zakah\");\r\n\r\n  const renderField = (key, index) => {\r\n    const fieldStyles = {\r\n      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      borderRadius: '8px',\r\n      '& .MuiInputBase-input': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n      '& .MuiFormLabel-root': {\r\n        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n      },\r\n    };\r\n    const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n    const relationFields = [\r\n      \"relation_type\",\r\n      \"relation_hr_contact\",\r\n      \"relation_branch\",\r\n      \"relation_name\",\r\n      \"relation_surname\",\r\n      \"relation_employee_code\",\r\n      \"relation_reference\",\r\n    ];\r\n\r\n    if (relationFields.includes(key)) {\r\n      if (formData.student_willow_relationship !== \"Yes\") {\r\n        return null;\r\n      }\r\n      if (key === \"relation_type\") {\r\n        return (\r\n          <Grid item xs={12} key={index}>\r\n            <Autocomplete\r\n              value={formData[key] || \"\"}\r\n              onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n              options={relationshipTypes}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Relationship Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n              )}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n      if (!formData.relation_type) {\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Staff\" || formData.relation_type === \"Dependent of Staff\") {\r\n        if ([\"relation_hr_contact\", \"relation_branch\", \"relation_name\", \"relation_surname\", \"relation_employee_code\"].includes(key)) {\r\n          const labels = {\r\n            relation_hr_contact: \"HR Contact\",\r\n            relation_branch: \"Branch\",\r\n            relation_name: \"Name\",\r\n            relation_surname: \"Surname\",\r\n            relation_employee_code: \"Employee Code\",\r\n          };\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label={labels[key]}\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Family\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Who are you related to\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"How are you related\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Director/Board Member or stakeholder\") {\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n      if (formData.relation_type === \"Referral\") {\r\n        if (key === \"relation_reference\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Reference Relation\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        if (key === \"relation_name\") {\r\n          return (\r\n            <Grid item xs={12} key={index}>\r\n              <TextField\r\n                label=\"Please provide the person's name\"\r\n                name={key}\r\n                fullWidth\r\n                value={formData[key] || \"\"}\r\n                onChange={handleChange}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            </Grid>\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n\r\n    if (key === \"student_date_of_birth\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DatePicker\r\n              wrapperClassName={\"datepicker\"}\r\n              className={\"datepicker\"}\r\n              label=\"Student Date of Birth\"\r\n              name=\"student_date_of_birth\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              format=\"MM/dd/yyyy\"\r\n              sx={fieldStyles}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          </LocalizationProvider>\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_number_of_siblings\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Number of Siblings\"\r\n            name=\"student_number_of_siblings\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={formData.student_number_of_siblings || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_id_passport_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student ID/Passport Number\"\r\n            name=\"student_id_passport_number\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={formData.student_id_passport_number || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_email_address\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Email Address\"\r\n            name=\"student_email_address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            value={formData.student_email_address || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emailError}\r\n            helperText={emailError}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_whatsapp_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student WhatsApp Number\"\r\n            name=\"student_whatsapp_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_whatsapp_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!whatsappError}\r\n            helperText={whatsappError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_alternative_number\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Alternative Number\"\r\n            name=\"student_alternative_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_alternative_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!alternativeError}\r\n            helperText={alternativeError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_name\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={emergencyContactOption}\r\n            onChange={handleEmergencyContactChange}\r\n            options={[\"Same as above\", \"Add new\"]}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Emergency Contact\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          {emergencyContactOption === \"Add new\" && (\r\n            <TextField\r\n              label=\"Student Emergency Contact Name\"\r\n              name=\"student_emergency_contact_name\"\r\n              fullWidth\r\n              value={formData.student_emergency_contact_name || \"\"}\r\n              onChange={handleChange}\r\n              sx={{ ...fieldStyles, marginTop: 2 }}\r\n              InputLabelProps={inputLabelProps}\r\n            />\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_number\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Number\"\r\n            name=\"student_emergency_contact_number\"\r\n            type=\"tel\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_number || \"\"}\r\n            onChange={handleChange}\r\n            error={!!emergencyError}\r\n            helperText={emergencyError}\r\n            inputProps={{ maxLength: 10, pattern: \"[0-9]*\" }}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_relationship\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Relationship\"\r\n            name=\"student_emergency_contact_relationship\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_relationship || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_emergency_contact_address\" && emergencyContactOption === \"Add new\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Student Emergency Contact Address\"\r\n            name=\"student_emergency_contact_address\"\r\n            fullWidth\r\n            value={formData.student_emergency_contact_address || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"Pending\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={statusOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_status_comment\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <TextField\r\n            label=\"Status Comment\"\r\n            name=\"student_status_comment\"\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            value={formData.student_status_comment || \"\"}\r\n            onChange={handleChange}\r\n            sx={fieldStyles}\r\n            InputLabelProps={inputLabelProps}\r\n            disabled={!isAdmin}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_willow_relationship\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={yes_no}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Does the student have any relationship to the Willowton Group?\"\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_nationality\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={nationality}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Nationality\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_province\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={provinces}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Province\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={studentType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_religion\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={religions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Religion\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_finance_type\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={filteredFinanceType}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Finance Type\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_race\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={races}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Race\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_marital_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={maritalStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Marital Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_employment_status\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={employmentStatus}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Employment Status\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n          <TextField\r\n            label=\"Employment Status Attachment Name\"\r\n            name=\"employment_status_attachment_name\"\r\n            fullWidth\r\n            disabled\r\n            value={formData.employment_status_attachment_name || \"\"}\r\n            sx={{\r\n              ...fieldStyles,\r\n              marginTop: 2,\r\n              '& .MuiInputBase-input.Mui-disabled': {\r\n                WebkitTextFillColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              },\r\n            }}\r\n            InputLabelProps={inputLabelProps}\r\n          />\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"label\"\r\n            sx={{ ...fieldStyles, width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n          >\r\n            Upload Employment Status Attachment\r\n            <input type=\"file\" hidden onChange={handleFileChange} />\r\n          </Button>\r\n          {formData.employment_status_attachment_name && studentId && (\r\n            <>\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                onClick={handleViewFile}\r\n                startIcon={<VisibilityIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              >\r\n                View/Download Attachment\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                onClick={handleDeleteAttachmentClick}\r\n                startIcon={<DeleteIcon />}\r\n                sx={{ width: \"100%\", marginTop: 1, borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n              >\r\n                Delete Attachment\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_highest_education\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Student Highest Education\" sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"student_date_stamp\" || key === \"id\" || key === \"user_id\" || key === \"student_industry\" || key === \"employment_status_attachment\" || key === \"employment_status_attachment_name\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \").toLowerCase().split(\" \").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          label={label}\r\n          name={key}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        <Box sx={{ padding: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Student Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n          {errorMessage && (\r\n            <Typography variant=\"body2\" color=\"error.main\" sx={{ mt: 1 }}>\r\n              {errorMessage}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", padding: 2 }}>\r\n          {isLoading ? (\r\n            <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\" }}>\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            <Grid container spacing={2}>\r\n              {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ padding: 2, borderTop: \"1px solid #ccc\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n              startIcon={<CloseIcon />}\r\n              disabled={isLoading}\r\n            >\r\n              Close\r\n            </Button>\r\n\r\n            {studentId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', color: 'red' }}\r\n                startIcon={<DeleteIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            {!studentId ? (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<AddIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Create\"}\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                onClick={handleSave}\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<SaveIcon />}\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? <CircularProgress size={20} /> : \"Save\"}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <Dialog\r\n          open={deleteConfirmationOpen}\r\n          onClose={handleDeleteCancel}\r\n        >\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={deleteAttachmentConfirmationOpen}\r\n          onClose={handleDeleteAttachmentCancel}\r\n        >\r\n          <DialogTitle>Confirm Attachment Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete the employment status attachment?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteAttachmentCancel} color=\"primary\" disabled={isLoading}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteAttachmentConfirm} color=\"error\" disabled={isLoading}>\r\n              {isLoading ? <CircularProgress size={20} /> : \"Delete\"}\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default StudentDetailDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AboutusDrawer = ({ open, onClose, studentId, aboutMeId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Custom questions\r\n  const questions = [\r\n    \"What inspired you to pursue your chosen field of study?*\",\r\n    \"How do you plan to use your education and skills to make a significant impact in this field?*\",\r\n    \"What special projects or initiatives have you undertaken in your academic life?*\",\r\n    \"Can you tell me about any academic awards or scholarships you have received?*\",\r\n    \"Provide examples or specific skills you have developed that demonstrates your commitment.*\",\r\n    \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?*\",\r\n    \"Once you have completed your studies, how will others benefit from it?*\",\r\n    \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?*\",\r\n    \"Have you previously been awarded a bursary?*\",\r\n    \"What do you think has been your most notable contribution to society thus far?*\",\r\n    \"Why do you think serving the community is important?*\",\r\n    \"Will you be doing any volunteer work during your studies?*\",\r\n    \"Are you willing to assist someone in need?*\",\r\n    \"Describe yourself in three words.*\",\r\n    \"What is your greatest strength?*\",\r\n    \"Describe your biggest mistake and what steps you have taken to rectify it.*\",\r\n    \"What personal achievement makes you proud?*\",\r\n    \"Are you self-motivated? Explain*\",\r\n    \"1st choice of study.*\",\r\n    \"2nd choice of study*\",\r\n    \"3rd choice of study.*\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (aboutMeId) {\r\n        // Editing mode\r\n        fetch(`${API_BASE_URL}/about-me/id/${aboutMeId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        // Creating new entry\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n        };\r\n        for (let i = 1; i <= 21; i++) {\r\n          initialData[`about_me_q${i.toString().padStart(2, \"0\")}`] = \"\";\r\n        }\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      // Cleanup when drawer closes\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, aboutMeId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/about-me/update/${formData.id}`\r\n      : `${API_BASE_URL}/about-me/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const dataToSend = { ...formData };\r\n    if (!isUpdate) delete dataToSend.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataToSend),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save About Me data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving About Me data:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open the dialog\r\n  };\r\n\r\n  // Handle the confirmation delete\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/about-me/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n      } else {\r\n        console.error(\"Failed to delete About Me entry\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting About Me entry:\", err);\r\n    }\r\n  };\r\n\r\n  // Handle cancel delete\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box\r\n        sx={{\r\n          width: drawerWidth,\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            About Me\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, i) => {\r\n              const qNum = (i + 1).toString().padStart(2, \"0\");\r\n              const key = `about_me_q${qNum}`;\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={key}\r\n                    fullWidth\r\n                    multiline\r\n                    value={formData[key] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff', // Dark/Light background\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n                      borderRadius: '8px', // Apply border-radius\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Input text color\r\n                      },\r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: '8px', // Apply border-radius to root element\r\n                      },\r\n                      '& .MuiFormLabel-root': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B', // Label color\r\n                      },\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }} // Label color for dark/light mode\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            borderTop: \"1px solid #ccc\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Border color for dark/light mode\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B', // Text color\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B', // Red border color for delete button\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this entry?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AboutusDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';  // Import ThemeContext\r\nimport { parentRelationship, employmentStatus, highestEducation } from \"../../components/lov\"; // Import LOVs\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ParentsDrawer = ({ open, onClose, studentId, parentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\"); // State for email validation error\r\n  const [cellNumberError, setCellNumberError] = useState(\"\"); // State for cell number validation error\r\n\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Email validation function\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Cell number validation function\r\n  const validateCellNumber = (number) => {\r\n    const cellRegex = /^\\d{10}$/;\r\n    return cellRegex.test(number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (parentId) {\r\n        fetch(`${API_BASE_URL}/parents-details/id/${parentId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n            // Validate email and cell number on load\r\n            if (data.parent_email_address) {\r\n              setEmailError(validateEmail(data.parent_email_address) ? \"\" : \"Please enter a valid email address\");\r\n            } else {\r\n              setEmailError(\"\");\r\n            }\r\n            if (data.parent_cell_number) {\r\n              setCellNumberError(validateCellNumber(data.parent_cell_number) ? \"\" : \"Cell number must be exactly 10 digits\");\r\n            } else {\r\n              setCellNumberError(\"\");\r\n            }\r\n          });\r\n      } else {\r\n        setFormData({\r\n          student_details_portal_id: studentId,\r\n          parent_relationship: \"\",\r\n          parent_name: \"\",\r\n          parent_surname: \"\",\r\n          parent_cell_number: \"\",\r\n          parent_email_address: \"\",\r\n          parent_employment_status: \"\",\r\n          parent_industry: \"\",\r\n          parent_highest_education: \"\",\r\n          parent_salary: \"\",\r\n          parent_grant: \"\",\r\n          parent_other_income: \"\",\r\n        });\r\n        setEmailError(\"\");\r\n        setCellNumberError(\"\");\r\n      }\r\n    } else {\r\n      setFormData({});\r\n      setEmailError(\"\");\r\n      setCellNumberError(\"\");\r\n    }\r\n  }, [open, parentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n\r\n    // Validate email on change\r\n    if (name === \"parent_email_address\") {\r\n      setEmailError(value && !validateEmail(value) ? \"Please enter a valid email address\" : \"\");\r\n    }\r\n\r\n    // Validate cell number on change\r\n    if (name === \"parent_cell_number\") {\r\n      // Allow only digits and limit to 10\r\n      const numericValue = value.replace(/\\D/g, \"\").slice(0, 10);\r\n      setFormData((prev) => ({ ...prev, [name]: numericValue }));\r\n      setCellNumberError(numericValue && !validateCellNumber(numericValue) ? \"Cell number must be exactly 10 digits\" : \"\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Prevent save if email or cell number is invalid\r\n    if (formData.parent_email_address && !validateEmail(formData.parent_email_address)) {\r\n      setEmailError(\"Please enter a valid email address\");\r\n      return;\r\n    }\r\n    if (formData.parent_cell_number && !validateCellNumber(formData.parent_cell_number)) {\r\n      setCellNumberError(\"Cell number must be exactly 10 digits\");\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/parents-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/parents-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setsuccessmessage(isUpdate ? \"Parent details updated successfully!\" : \"Parent details created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save parent data\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!formData.id) return;\r\n    setDeleteConfirmationOpen(false);\r\n    const res = await fetch(`${API_BASE_URL}/parents-details/delete/${formData.id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (res.ok) {\r\n      onSave(null);\r\n      // setsuccessmessage(\"Parent details deleted successfully!\");\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Parent Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.entries(formData).map(([key, value]) => {\r\n              if (key === \"id\" || key === \"student_details_portal_id\" || key === \"parent_date_stamp\") return null;\r\n\r\n              let label = key.replace(/_/g, \" \");\r\n              label = label\r\n                .split(\" \")\r\n                .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n                .join(\" \");\r\n\r\n              if (key === \"parent_relationship\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={parentRelationship}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_employment_status\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={employmentStatus}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_highest_education\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <Autocomplete\r\n                      value={value || \"\"}\r\n                      onChange={(e, newValue) => handleChange({ target: { name: key, value: newValue } })}\r\n                      options={highestEducation}\r\n                      renderInput={(params) => <TextField {...params} label={label} sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        borderRadius: '8px',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                        InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                      />}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_email_address\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"email\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!emailError}\r\n                      helperText={emailError}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n              if (key === \"parent_cell_number\") {\r\n                return (\r\n                  <Grid item xs={12} key={key}>\r\n                    <TextField\r\n                      name={key}\r\n                      label={label}\r\n                      type=\"tel\"\r\n                      fullWidth\r\n                      value={value || \"\"}\r\n                      onChange={handleChange}\r\n                      error={!!cellNumberError}\r\n                      helperText={cellNumberError}\r\n                      inputProps={{\r\n                        maxLength: 10,\r\n                        pattern: \"[0-9]*\",\r\n                      }}\r\n                      sx={{\r\n                        backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        borderRadius: '8px',\r\n                        '& .MuiInputBase-input': {\r\n                          color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                        }\r\n                      }}\r\n                      InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Grid item xs={12} key={key}>\r\n                  <TextField\r\n                    name={key}\r\n                    label={label}\r\n                    fullWidth\r\n                    value={value || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#ffffff' : '#000000' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={() => setDeleteConfirmationOpen(true)}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Delete Confirmation Dialog */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={() => setDeleteConfirmationOpen(false)}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setDeleteConfirmationOpen(false)} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDelete} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ParentsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Autocomplete,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { semesters, highestEducation } from \"../../components/lov\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst UniversityDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  universityDetailsId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (universityDetailsId) {\r\n        fetch(`${API_BASE_URL}/university-details/id/${universityDetailsId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            // Normalize the conditional fields to match yes_no options\r\n            const normalizedData = {\r\n              ...data,\r\n              // Previously_Funded: yes_no.includes(data.Previously_Funded) ? data.Previously_Funded : \"\",\r\n              // Tuition: yes_no.includes(data.Tuition) ? data.Tuition : \"\",\r\n              // Accommodation: yes_no.includes(data.Accommodation) ? data.Accommodation : \"\",\r\n              // Textbooks: yes_no.includes(data.Textbooks) ? data.Textbooks : \"\",\r\n              // Travel: yes_no.includes(data.Travel) ? data.Travel : \"\",\r\n            };\r\n            setFormData(normalizedData);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          Institution_Name: \"\",\r\n          Name_of_Course: \"\",\r\n          Intake_Year: \"\",\r\n          Semester: \"\",\r\n          NQF_Level: \"\",\r\n          Current_Year: \"\",\r\n          Student_Number: \"\",\r\n          previously_funded: \"\",\r\n          previously_funded_amount: \"\",\r\n          tuition: \"\",\r\n          tuition_amount: \"\",\r\n          accommodation: \"\",\r\n          accommodation_fee: \"\",\r\n          textbooks: \"\",\r\n          textbooks_fee: \"\",\r\n          travel: \"\",\r\n          travel_fee: \"\",\r\n          Total_University_Expense: \"\",\r\n          Other_Bursary_Org_1: \"\",\r\n          Other_Bursary_Org_1_Contact: \"\",\r\n          Other_Bursary_Org_2: \"\",\r\n          Other_Bursary_Org_2_Contact: \"\",\r\n          Other_Bursary_Org_3: \"\",\r\n          Other_Bursary_Org_3_Contact: \"\",\r\n          Previous_Bursary_Org_1: \"\",\r\n          Previous_Bursary_Org_1_Amount: \"\",\r\n          Previous_Bursary_Org_1_Contact: \"\",\r\n          Previous_Bursary_Org_2: \"\",\r\n          Previous_Bursary_Org_2_Amount: \"\",\r\n          Previous_Bursary_Org_2_Contact: \"\",\r\n          Previous_Bursary_Org_3: \"\",\r\n          Previous_Bursary_Org_3_Amount: \"\",\r\n          Previous_Bursary_Org_3_Contact: \"\",\r\n          Application_Process_Status: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, universityDetailsId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => {\r\n      const newFormData = { ...prev, [name]: value };\r\n      // Clear the corresponding amount field if the selection is \"No\"\r\n      const conditionalField = conditionalFields.find(field => field.select === name);\r\n      if (conditionalField && value === \"No\") {\r\n        newFormData[conditionalField.amount] = \"\";\r\n      }\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/university-details/update/${formData.id}`\r\n      : `${API_BASE_URL}/university-details/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(body),\r\n    });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setsuccessmessage(isUpdate ? \"Updated successfully!\" : \"Created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save University Details\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/university-details/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        // setsuccessmessage(\"Deleted successfully!\");\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete University Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting University Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const yesNoOptions = [\"Yes\", \"No\"];\r\n\r\n  const conditionalFields = [\r\n    { select: \"previously_funded\", amount: \"previously_funded_amount\" },\r\n    { select: \"tuition\", amount: \"tuition_amount\" },\r\n    { select: \"accommodation\", amount: \"accommodation_fee\" },\r\n    { select: \"textbooks\", amount: \"textbooks_fee\" },\r\n    { select: \"travel\", amount: \"travel_fee\" },\r\n  ];\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const renderField = (key, index) => {\r\n    if (\r\n      key === \"id\" ||\r\n      key === \"student_details_portal_id\" ||\r\n      key === \"university_details_date_stamp\"\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    const isConditionalSelect = conditionalFields.some(field => field.select === key);\r\n    const isConditionalAmount = conditionalFields.some(field => field.amount === key);\r\n\r\n    if (isConditionalSelect) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={yesNoOptions}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (isConditionalAmount) {\r\n      const relatedSelect = conditionalFields.find(field => field.amount === key).select;\r\n      if (formData[relatedSelect] !== \"Yes\") return null;\r\n    }\r\n\r\n    if (key === \"Semester\" || key === \"semester\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={semesters}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (key === \"NQF_Level\" || key === \"nqf_level\") {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={highestEducation}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label={label} sx={fieldStyles} InputLabelProps={inputLabelProps} />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            University Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default UniversityDetailsDrawer;","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AttachmentsDrawer = ({ open, onClose, studentId, attachmentId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!attachmentId) {\r\n      setFormData({\r\n        Attachments_Name: \"\",\r\n        Attachments_Description: \"\",\r\n        Attachment: null,\r\n        Student_Details_Portal_id: studentId,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Editing mode\r\n    fetch(`${API_BASE_URL}/attachments/id/${attachmentId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setFormData({\r\n          Attachments_Name: data.attachments_name || \"\",\r\n          Attachments_Description: data.attachments_description || \"\",\r\n          Attachment: null, // Don't preload binary data\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId,\r\n        });\r\n      });\r\n  }, [open, attachmentId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileNameWithoutExtension = file.name;\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        Attachments_Name: fileNameWithoutExtension,\r\n        Attachment: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/attachments/update/${formData.id}`\r\n      : `${API_BASE_URL}/attachments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Attachments_Name\", formData.Attachments_Name);\r\n    body.append(\"Attachments_Description\", formData.Attachments_Description);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Attachment) {\r\n      body.append(\"Attachment\", formData.Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      // setSuccessMessage(isUpdate ? \"Updated successfully!\" : \"Created successfully!\");\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save attachment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/attachments/delete/${formData.id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage(\"Deleted successfully!\");\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete attachment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/attachments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: \"1px solid #ccc\", backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Attachment Details\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n               <TextField\r\n                label=\"Description\"\r\n                name=\"Attachments_Description\"\r\n                fullWidth\r\n                value={formData.Attachments_Description || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Attachments_Name\"\r\n                fullWidth\r\n                disabled\r\n                value={formData.Attachments_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiFormLabel-root': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\", borderColor: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                color=\"error\"\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AttachmentsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst ExpenseDetailsDrawer = ({ open, onClose, studentId, expenseDetailsId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Father_Monthly_Salary: '',\r\n    Mother_Monthly_Salary: '',\r\n    Spouse_Monthly_Salary: '',\r\n    Applicant_Monthly_Salary: '',\r\n    Rent_Income: '',\r\n    Grants: '',\r\n    Other_Income: '',\r\n    Rent_Bond_Expense: '',\r\n    Rates_Expense: '',\r\n    Utilities_Expense: '',\r\n    Groceries_Expense: '',\r\n    Transport_Petrol_Expense: '',\r\n    Telephone_Expense: '',\r\n    Medical_Aid_Expense: '',\r\n    Insurance_Expense: '',\r\n    Other_Expense: '',\r\n    total_income: 0,\r\n    total_expenses: 0,\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open && expenseDetailsId) {\r\n      fetch(`${API_BASE_URL}/expense-details/id/${expenseDetailsId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Father_Monthly_Salary: data.father_monthly_salary || '',\r\n              Mother_Monthly_Salary: data.mother_monthly_salary || '',\r\n              Spouse_Monthly_Salary: data.spouse_monthly_salary || '',\r\n              Applicant_Monthly_Salary: data.applicant_monthly_salary || '',\r\n              Rent_Income: data.rent_income || '',\r\n              Grants: data.grants || '',\r\n              Other_Income: data.other_income || '',\r\n              Rent_Bond_Expense: data.rent_bond_expense || '',\r\n              Rates_Expense: data.rates_expense || '',\r\n              Utilities_Expense: data.utilities_expense || '',\r\n              Groceries_Expense: data.groceries_expense || '',\r\n              Transport_Petrol_Expense: data.transport_petrol_expense || '',\r\n              Telephone_Expense: data.telephone_expense || '',\r\n              Medical_Aid_Expense: data.medical_aid_expense || '',\r\n              Insurance_Expense: data.insurance_expense || '',\r\n              Other_Expense: data.other_expense || '',\r\n              total_income: Number(data.total_income) || 0,\r\n              total_expenses: Number(data.total_expenses) || 0,\r\n            });\r\n          }\r\n        })\r\n        .catch(error => console.error('Error fetching expense details:', error));\r\n    } else {\r\n      setFormData({\r\n        Father_Monthly_Salary: '',\r\n        Mother_Monthly_Salary: '',\r\n        Spouse_Monthly_Salary: '',\r\n        Applicant_Monthly_Salary: '',\r\n        Rent_Income: '',\r\n        Grants: '',\r\n        Other_Income: '',\r\n        Rent_Bond_Expense: '',\r\n        Rates_Expense: '',\r\n        Utilities_Expense: '',\r\n        Groceries_Expense: '',\r\n        Transport_Petrol_Expense: '',\r\n        Telephone_Expense: '',\r\n        Medical_Aid_Expense: '',\r\n        Insurance_Expense: '',\r\n        Other_Expense: '',\r\n        total_income: 0,\r\n        total_expenses: 0,\r\n      });\r\n    }\r\n  }, [open, expenseDetailsId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Update form data\r\n    setFormData(prev => {\r\n      const newFormData = { ...prev, [name]: value };\r\n\r\n      // Recalculate total income and total expenses\r\n      const incomeFields = [\r\n        'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',\r\n        'Applicant_Monthly_Salary', 'Rent_Income', 'Grants', 'Other_Income'\r\n      ];\r\n      const expenseFields = [\r\n        'Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense',\r\n        'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'\r\n      ];\r\n\r\n      const totalIncome = incomeFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n      const totalExpenses = expenseFields.reduce((total, key) => total + (parseFloat(newFormData[key]) || 0), 0);\r\n\r\n      newFormData.total_income = totalIncome;\r\n      newFormData.total_expenses = totalExpenses;\r\n\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Calculate total income and total expenses if not already set\r\n    const totalIncome = Object.keys(formData)\r\n      .filter(key => key.includes(\"Salary\") || key.includes(\"Income\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const totalExpenses = Object.keys(formData)\r\n      .filter(key => key.includes(\"Expense\"))\r\n      .reduce((total, key) => total + (parseFloat(formData[key]) || 0), 0);\r\n\r\n    const updatedFormData = {\r\n      ...formData,\r\n      total_income: totalIncome.toString(),\r\n      total_expenses: totalExpenses.toString()\r\n    };\r\n\r\n    const stringFormData = Object.keys(updatedFormData).reduce((acc, key) => {\r\n      const value = updatedFormData[key];\r\n      acc[key] = value !== '' ? value.toString() : value;  // Convert to string\r\n      return acc;\r\n    }, {});\r\n\r\n    const url = expenseDetailsId\r\n      ? `${API_BASE_URL}/expense-details/update/${expenseDetailsId}`\r\n      : `${API_BASE_URL}/expense-details/insert`;\r\n\r\n    const method = expenseDetailsId ? 'PUT' : 'POST';\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...stringFormData, student_details_portal_id: studentId }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        onClose();\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving expense details:', error);\r\n      });\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!expenseDetailsId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/expense-details/delete/${expenseDetailsId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error('Error deleting expense details:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Financial Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {/* Income Fields */}\r\n            {['Applicant_Monthly_Salary', 'Father_Monthly_Salary', 'Mother_Monthly_Salary', 'Spouse_Monthly_Salary',  'Rent_Income', 'Grants', 'Other_Income'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Expense Fields */}\r\n            {['Rent_Bond_Expense', 'Rates_Expense', 'Utilities_Expense', 'Groceries_Expense', 'Transport_Petrol_Expense', 'Telephone_Expense', 'Medical_Aid_Expense', 'Insurance_Expense', 'Other_Expense'].map((key, idx) => {\r\n              const label = key.replace(/_/g, ' ').replace(/\\b\\w/g, char => char.toUpperCase());\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    type=\"number\"\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{ inputMode: 'decimal' }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            {/* Read-only Total Income and Total Expenses Fields */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Income\"\r\n                value={formData.total_income.toFixed(2)} // Display total income\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Income field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Total Expenses\"\r\n                value={formData.total_expenses.toFixed(2)} // Display total expenses\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  readOnly: true, // Make Total Expenses field read-only\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {expenseDetailsId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={expenseDetailsId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {expenseDetailsId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ExpenseDetailsDrawer;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AssetsLiabilitiesDrawer = ({ open, onClose, studentId, assetLiabilityId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const [formData, setFormData] = useState({\r\n    Gold_Silver: '',\r\n    Cash_in_Bank: '',\r\n    Investments: '',\r\n    Liabilities: ''\r\n  });\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (open && assetLiabilityId) {\r\n      fetch(`${API_BASE_URL}/assets-liabilities/id/${assetLiabilityId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data) {\r\n            setFormData({\r\n              Gold_Silver: data.gold_silver || '',\r\n              Cash_in_Bank: data.cash_in_bank || '',\r\n              Investments: data.investments || '',\r\n              Liabilities: data.liabilities || ''\r\n            });\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      setFormData({\r\n        Gold_Silver: '',\r\n        Cash_in_Bank: '',\r\n        Investments: '',\r\n        Liabilities: ''\r\n      });\r\n    }\r\n  }, [open, assetLiabilityId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const url = assetLiabilityId\r\n      ? `${API_BASE_URL}/assets-liabilities/update/${assetLiabilityId}`\r\n      : `${API_BASE_URL}/assets-liabilities/insert`;\r\n    const method = assetLiabilityId ? \"PUT\" : \"POST\";\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ ...formData, student_details_portal_id: studentId })\r\n    })\r\n      .then(res => res.json())\r\n      .then(savedData => {\r\n        onSave(savedData);\r\n        // setSuccessMessage(assetLiabilityId ? 'Updated successfully!' : 'Created successfully!');\r\n        onClose();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!assetLiabilityId) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/assets-liabilities/delete/${assetLiabilityId}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      // setSuccessMessage('Deleted successfully!');\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Error deleting asset/liability:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close the confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{ width: drawerWidth, height: '100%', display: 'flex', flexDirection: 'column', backgroundColor: isDarkMode ? '#2D3748' : '#fff' }}>\r\n        {/* Header */}\r\n        <Box sx={{ p: 2, borderBottom: '1px solid #ccc', backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe' }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Assets & Liabilities\r\n          </Typography>\r\n          {/* {successMessage && (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n              {successMessage}\r\n            </Typography>\r\n          )} */}\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {Object.keys(formData).map((key, idx) => {\r\n              const label = key\r\n                .replace(/_/g, ' ')  // Replace underscores with spaces\r\n                .replace(/\\b\\w/g, char => char.toUpperCase()); // Capitalize the first letter of each word\r\n\r\n              return (\r\n                <Grid item xs={12} key={idx}>\r\n                  <TextField\r\n                    label={label}\r\n                    name={key}\r\n                    value={formData[key]}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    type=\"number\" // Allow numbers only (including decimals)\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                      inputMode: 'decimal', // Enable decimal input mode for numbers\r\n                    }}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {assetLiabilityId && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={assetLiabilityId ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {assetLiabilityId ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AssetsLiabilitiesDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst AcademicResultsDrawer = ({ open, onClose, studentId, resultId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setFormData({});\r\n      return;\r\n    }\r\n\r\n    if (!resultId) {\r\n      setFormData({\r\n        Results_Module: \"\",\r\n        Results_Percentage: \"\",\r\n        Results_Attachment: null,\r\n        Results_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      return;\r\n    }\r\n\r\n    fetch(`${API_BASE_URL}/academic-results/id/${resultId}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setFormData({\r\n          Results_Module: data.results_module || \"\",\r\n          Results_Percentage: data.results_percentage || \"\",\r\n          Results_Attachment: null,\r\n          Results_Attachment_Name: data.results_attachment_name || \"\",\r\n          id: data.id,\r\n          Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n        });\r\n      });\r\n  }, [open, resultId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Results_Attachment: file,\r\n        Results_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/academic-results/update/${formData.id}`\r\n      : `${API_BASE_URL}/academic-results/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Results_Module\", formData.Results_Module);\r\n    body.append(\"Results_Percentage\", formData.Results_Percentage);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Results_Attachment) {\r\n      body.append(\"Results_Attachment\", formData.Results_Attachment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save academic result\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/academic-results/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete academic result\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/academic-results/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Academic Result Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: 'auto', p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Module Name\"\r\n                name=\"Results_Module\"\r\n                fullWidth\r\n                value={formData.Results_Module || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Percentage\"\r\n                name=\"Results_Percentage\"\r\n                fullWidth\r\n                value={formData.Results_Percentage || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Results_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Results_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: \"100%\" }}>\r\n                Upload File\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Results_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: \"100%\" }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{\r\n          p: 2,\r\n          display: 'flex',\r\n          justifyContent: 'space-between'\r\n        }}>\r\n          <Box sx={{ display: 'flex', gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red', // Red text color for delete button\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? 'Save' : 'Create'}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default AcademicResultsDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst VoluntaryServiceDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Organisation: \"\",\r\n        Contact_Person: \"\",\r\n        Contact_Person_Number: \"\",\r\n        Hours_Contributed: \"\",\r\n        Proof_of_Service: null,\r\n        Service_Attachment_Name: \"\",\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/voluntary-service/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Organisation: data.organisation || \"\",\r\n            Contact_Person: data.contact_person || \"\",\r\n            Contact_Person_Number: data.contact_person_number || \"\",\r\n            Hours_Contributed: data.hours_contributed || \"\",\r\n            Proof_of_Service: null,\r\n            Service_Attachment_Name: data.service_attachment_name || \"\",\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Service: file,\r\n        Service_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/voluntary-service/update/${formData.id}`\r\n      : `${API_BASE_URL}/voluntary-service/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n  \r\n    const body = new FormData();\r\n    body.append(\"Organisation\", formData.Organisation);\r\n    body.append(\"Contact_Person\", formData.Contact_Person);\r\n    body.append(\"Contact_Person_Number\", formData.Contact_Person_Number);\r\n    body.append(\"Hours_Contributed\", formData.Hours_Contributed);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    \r\n    // If a new file is selected, append it\r\n    if (formData.Proof_of_Service) {\r\n      body.append(\"Proof_of_Service\", formData.Proof_of_Service);\r\n    }\r\n  \r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save voluntary service\");\r\n    }\r\n  };  \r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/voluntary-service/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete voluntary service\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/voluntary-service/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Voluntary Service\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Organisation\"\r\n                name=\"Organisation\"\r\n                fullWidth\r\n                value={formData.Organisation || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Contact Person\"\r\n                name=\"Contact_Person\"\r\n                fullWidth\r\n                value={formData.Contact_Person || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                label=\"Contact Number\"\r\n                name=\"Contact_Person_Number\"\r\n                fullWidth\r\n                value={formData.Contact_Person_Number || \"\"}\r\n                onChange={handleChange}\r\n                inputProps={{\r\n                  type: 'tel', // Allows for easier entry of phone numbers\r\n                  maxLength: 10, // Restrict input to 10 digits\r\n                  pattern: \"[0-9]{10}\", // Only allow numbers, exactly 10 digits\r\n                }}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Hours Contributed\"\r\n                name=\"Hours_Contributed\"\r\n                fullWidth\r\n                value={formData.Hours_Contributed || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Service_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Service_Attachment_Name || \"\"}\r\n                onChange={handleChange}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',  // Text color inside the input field when disabled\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Service_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default VoluntaryServiceDrawer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { format, parse } from 'date-fns';\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst PaymentDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Payments_Expense_Type: \"\",\r\n        Payments_Vendor: \"\",\r\n        Payments_Expense_Amount: \"\",\r\n        Payments_Date: \"\",\r\n        Payments_ET_Number: \"\",\r\n        Payments_Attachment_Name: \"\",\r\n        Proof_of_Payment: null,\r\n        Payment_Created_By: createdBy,\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n      setSelectedDate(null);\r\n    } else {\r\n      fetch(`${API_BASE_URL}/payments/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const date = data.payments_date ? parse(data.payments_date, 'MM/dd/yyyy', new Date()) : null;\r\n          setSelectedDate(date);\r\n          setFormData({\r\n            Payments_Expense_Type: data.payments_expense_type || \"\",\r\n            Payments_Vendor: data.payments_vendor || \"\",\r\n            Payments_Expense_Amount: data.payments_expense_amount || \"\",\r\n            Payments_Date: data.payments_date || \"\",\r\n            Payments_ET_Number: data.payments_et_number || \"\",\r\n            Payments_Attachment_Name: data.payments_attachment_name || \"\",\r\n            Proof_of_Payment: null,\r\n            Payment_Created_By: data.payment_created_by || createdBy,\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        Proof_of_Payment: file,\r\n        Payments_Attachment_Name: file.name\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleViewFile = () => {\r\n    if (formData.id) {\r\n      window.open(`${API_BASE_URL}/payments/view/${formData.id}`, \"_blank\");\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/payments/update/${formData.id}`\r\n      : `${API_BASE_URL}/payments/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = new FormData();\r\n    body.append(\"Payments_Expense_Type\", formData.Payments_Expense_Type);\r\n    body.append(\"Payments_Vendor\", formData.Payments_Vendor);\r\n    body.append(\"Payments_Expense_Amount\", formData.Payments_Expense_Amount);\r\n    body.append(\"Payments_Date\", formData.Payments_Date);\r\n    body.append(\"Payments_ET_Number\", formData.Payments_ET_Number);\r\n    body.append(\"Payments_Attachment_Name\", formData.Payments_Attachment_Name);\r\n    body.append(\"Payment_Created_By\", formData.Payment_Created_By);\r\n    body.append(\"Student_Details_Portal_id\", formData.Student_Details_Portal_id);\r\n    if (formData.Proof_of_Payment) {\r\n      body.append(\"Proof_of_Payment\", formData.Proof_of_Payment);\r\n    }\r\n\r\n    const res = await fetch(url, { method, body });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save payment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/payments/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false);\r\n    } catch (err) {\r\n      console.error(\"Failed to delete payment\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const handleDateChange = (newDate) => {\r\n    setSelectedDate(newDate);\r\n    const formattedDate = newDate ? format(newDate, 'MM/dd/yyyy') : '';\r\n    setFormData(prev => ({ ...prev, Payments_Date: formattedDate }));\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Payment Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Expense Type\"\r\n                name=\"Payments_Expense_Type\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Type || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Vendor\"\r\n                name=\"Payments_Vendor\"\r\n                fullWidth\r\n                value={formData.Payments_Vendor || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Amount\"\r\n                name=\"Payments_Expense_Amount\"\r\n                fullWidth\r\n                value={formData.Payments_Expense_Amount || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {/* Date Picker Field */}\r\n            <Grid item xs={12}>\r\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <DatePicker\r\n                  wrapperClassName={\"datepicker\"}\r\n                  className={\"datepicker\"}\r\n                  label=\"Payments Date\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  format=\"MM/dd/yyyy\"\r\n                />\r\n              </LocalizationProvider>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"ET Number\"\r\n                name=\"Payments_ET_Number\"\r\n                fullWidth\r\n                value={formData.Payments_ET_Number || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Attachment Name\"\r\n                name=\"Payments_Attachment_Name\"\r\n                fullWidth\r\n                value={formData.Payments_Attachment_Name || \"\"}\r\n                disabled\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  },\r\n                  '& .MuiInputBase-input.Mui-disabled': {\r\n                    WebkitTextFillColor: isDarkMode ? 'white' : '#1E293B',\r\n                  },\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant=\"outlined\" component=\"label\" sx={{ width: '100%' }}>\r\n                Upload Proof\r\n                <input type=\"file\" hidden onChange={handleFileChange} />\r\n              </Button>\r\n            </Grid>\r\n            {formData.id && formData.Payments_Attachment_Name && (\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  color=\"primary\"\r\n                  onClick={handleViewFile}\r\n                  startIcon={<VisibilityIcon />}\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  View/Download File\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Confirmation Dialog for Deletion */}\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this record?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default PaymentDrawer;","import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ThemeContext } from '../../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst InterviewDrawer = ({ open, onClose, studentId, recordId, onSave }) => {\r\n  const { isDarkMode } = useContext(ThemeContext);  // Access theme context\r\n\r\n  const [formData, setFormData] = useState({});\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  // Check for larger or smaller screen size\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n\r\n  // Drawer width based on screen size\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Get the first name and last name from localStorage (assuming the user object is stored there)\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  // const createdBy = user.first_name + ' ' + user.last_name; // Concatenate first name and last name\r\n  const createdBy = `${user?.first_name} ${user?.last_name}`;\r\n\r\n  const questions = [\r\n    \"Briefly describe the applicant's family & social financial conditions?\",\r\n    \"Employment Status Score\",\r\n    \"Year of Study\",\r\n    \"Degree/Diploma Name\",\r\n    \"Number of Years to Qualify\",\r\n    \"Reason for Choosing the Course\",\r\n    \"Field of Study Score\",\r\n    \"APS Score (Matric) or University Average\",\r\n    \"Number of Failed Modules\",\r\n    \"Academic Results Score\",\r\n    \"Have you worked on any special projects or initiatives?\",\r\n    \"What extracurricular activities have you participated in?\",\r\n    \"How do you plan to contribute to your community post-graduation?\",\r\n    \"How would you inspire others to make an impact?\",\r\n    \"Community Work Involvement Score\",\r\n    \"How will you use your education and skills to make an impact?\",\r\n    \"Can you share academic awards or scholarships received?\",\r\n    \"Describe a role model and why they inspire you?\",\r\n    \"Why do you believe you deserve this bursary?\",\r\n    \"If not awarded this bursary, what are your plans?\",\r\n    \"Motivation Score\",\r\n    \"Total Score\",\r\n    \"Comments Section\",\r\n    \"Overall Impression\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!open) return;\r\n\r\n    if (!recordId) {\r\n      setFormData({\r\n        Interviewer_Name: '',\r\n        Year_of_Interview: '',\r\n        Interview_Q01: '',\r\n        Interview_Q02: '',\r\n        Interview_Q03: '',\r\n        Interview_Q04: '',\r\n        Interview_Q05: '',\r\n        Interview_Q06: '',\r\n        Interview_Q07: '',\r\n        Interview_Q08: '',\r\n        Interview_Q09: '',\r\n        Interview_Q10: '',\r\n        Interview_Q11: '',\r\n        Interview_Q12: '',\r\n        Interview_Q13: '',\r\n        Interview_Q14: '',\r\n        Interview_Q15: '',\r\n        Interview_Q16: '',\r\n        Interview_Q17: '',\r\n        Interview_Q18: '',\r\n        Interview_Q19: '',\r\n        Interview_Q20: '',\r\n        Interview_Q21: '',\r\n        Interview_Q22: '',\r\n        Interview_Q23: '',\r\n        Interview_Q24: '',\r\n        Interview_Created_By: createdBy,  // Set created_by field to first and last name of logged-in user\r\n        Date_Stamp: '',\r\n        Student_Details_Portal_id: studentId\r\n      });\r\n    } else {\r\n      fetch(`${API_BASE_URL}/interviews/id/${recordId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setFormData({\r\n            Interviewer_Name: data.interviewer_name || '',\r\n            Year_of_Interview: data.year_of_interview || '',\r\n            Interview_Q01: data.interview_q01 || '',\r\n            Interview_Q02: data.interview_q02 || '',\r\n            Interview_Q03: data.interview_q03 || '',\r\n            Interview_Q04: data.interview_q04 || '',\r\n            Interview_Q05: data.interview_q05 || '',\r\n            Interview_Q06: data.interview_q06 || '',\r\n            Interview_Q07: data.interview_q07 || '',\r\n            Interview_Q08: data.interview_q08 || '',\r\n            Interview_Q09: data.interview_q09 || '',\r\n            Interview_Q10: data.interview_q10 || '',\r\n            Interview_Q11: data.interview_q11 || '',\r\n            Interview_Q12: data.interview_q12 || '',\r\n            Interview_Q13: data.interview_q13 || '',\r\n            Interview_Q14: data.interview_q14 || '',\r\n            Interview_Q15: data.interview_q15 || '',\r\n            Interview_Q16: data.interview_q16 || '',\r\n            Interview_Q17: data.interview_q17 || '',\r\n            Interview_Q18: data.interview_q18 || '',\r\n            Interview_Q19: data.interview_q19 || '',\r\n            Interview_Q20: data.interview_q20 || '',\r\n            Interview_Q21: data.interview_q21 || '',\r\n            Interview_Q22: data.interview_q22 || '',\r\n            Interview_Q23: data.interview_q23 || '',\r\n            Interview_Q24: data.interview_q24 || '',\r\n            Interview_Created_By: data.interview_created_by || createdBy,  // Ensure `created_by` is set\r\n            Date_Stamp: data.date_stamp || '',\r\n            id: data.id,\r\n            Student_Details_Portal_id: data.student_details_portal_id || studentId\r\n          });\r\n        });\r\n    }\r\n  }, [open, recordId, studentId, createdBy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/interviews/update/${formData.id}`\r\n      : `${API_BASE_URL}/interviews/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData)\r\n    });\r\n    if (res.ok) {\r\n      const result = await res.json();\r\n      onSave(result);\r\n      onClose();\r\n    } else {\r\n      console.error(\"Failed to save interview\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true); // Open confirmation dialog\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id) return;\r\n    try {\r\n      await fetch(`${API_BASE_URL}/interviews/delete/${formData.id}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      onSave(null);\r\n      onClose();\r\n      setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n    } catch (err) {\r\n      console.error(\"Failed to delete interview\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false); // Close confirmation dialog\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff' // Background color based on dark/light mode\r\n      }}>\r\n        {/* Header */}\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: '1px solid #ccc',\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Interview Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        {/* Form Content */}\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Interviewer Name\"\r\n                name=\"Interviewer_Name\"\r\n                fullWidth\r\n                value={formData.Interviewer_Name || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Year of Interview\"\r\n                name=\"Year_of_Interview\"\r\n                fullWidth\r\n                value={formData.Year_of_Interview || \"\"}\r\n                onChange={handleChange}\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                  color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  borderRadius: '8px',\r\n                  '& .MuiInputBase-input': {\r\n                    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  }\r\n                }}\r\n                InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n              />\r\n            </Grid>\r\n            {questions.map((question, i) => {\r\n              const questionNumber = (i + 1).toString().padStart(2, '0');\r\n              return (\r\n                <Grid item xs={12} key={i}>\r\n                  <TextField\r\n                    label={question}\r\n                    name={`Interview_Q${questionNumber}`}\r\n                    fullWidth\r\n                    value={formData[`Interview_Q${questionNumber}`] || \"\"}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n                      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      borderRadius: '8px',\r\n                      '& .MuiInputBase-input': {\r\n                        color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                      }\r\n                    }}\r\n                    InputLabelProps={{ style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } }}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n            {/* Interview_Created_By field is not rendered here */}\r\n          </Grid>\r\n        </Box>\r\n\r\n        {/* Footer */}\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            onClick={handleSave}\r\n            startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n          >\r\n            {formData.id ? \"Save\" : \"Create\"}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Confirmation Dialog for Deletion */}\r\n      <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n        <DialogTitle>Confirm Deletion</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this record?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default InterviewDrawer;\r\n","import React, { useEffect, useState, useContext, useMemo } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Divider,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport { ThemeContext } from '../../config/ThemeContext';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst TaskDetailsDrawer = ({\r\n  open,\r\n  onClose,\r\n  studentId,\r\n  taskId,\r\n  onSave,\r\n}) => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const isLargeScreen = useMediaQuery(\"(min-width:600px)\");\r\n  const drawerWidth = isLargeScreen ? 500 : 330;\r\n\r\n  // Memoize user to prevent new object reference on every render\r\n  const user = useMemo(() => JSON.parse(localStorage.getItem(\"user\")), []);\r\n  const isAdmin = user?.user_type === 'admin';\r\n  const isStudent = user?.user_type === 'student';\r\n\r\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n  const [formData, setFormData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (taskId) {\r\n        fetch(`${API_BASE_URL}/tasks/id/${taskId}`)\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setFormData(data);\r\n          });\r\n      } else {\r\n        const initialData = {\r\n          student_details_portal_id: studentId,\r\n          created_by: isAdmin ? user?.first_name || \"\" : \"\",\r\n          task_description: \"\",\r\n          task_status: \"\",\r\n          task_comment: \"\",\r\n        };\r\n        setFormData(initialData);\r\n      }\r\n    } else {\r\n      setFormData({});\r\n    }\r\n  }, [open, studentId, taskId, isAdmin, user]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAutocompleteChange = (name, value) => {\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isAdmin) {\r\n      return;\r\n    }\r\n\r\n    const isUpdate = !!formData.id;\r\n    const url = isUpdate\r\n      ? `${API_BASE_URL}/tasks/update/${formData.id}`\r\n      : `${API_BASE_URL}/tasks/insert`;\r\n    const method = isUpdate ? \"PUT\" : \"POST\";\r\n\r\n    const body = { ...formData };\r\n    if (!isUpdate) delete body.id;\r\n\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        onSave(result);\r\n        onClose();\r\n      } else {\r\n        console.error(\"Failed to save Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error saving Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = () => {\r\n    setDeleteConfirmationOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = async () => {\r\n    if (!formData.id || !isAdmin) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE_URL}/tasks/delete/${formData.id}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n\r\n      if (res.ok) {\r\n        onSave(null);\r\n        onClose();\r\n        setDeleteConfirmationOpen(false);\r\n      } else {\r\n        console.error(\"Failed to delete Task Details\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error deleting Task Details\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setDeleteConfirmationOpen(false);\r\n  };\r\n\r\n  const fieldStyles = {\r\n    backgroundColor: isDarkMode ? '#1A202C' : '#ffffff',\r\n    color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    borderRadius: '8px',\r\n    '& .MuiInputBase-input': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n    '& .MuiFormLabel-root': {\r\n      color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n    },\r\n  };\r\n\r\n  const inputLabelProps = { style: { color: isDarkMode ? '#F7FAFC' : '#1E293B' } };\r\n\r\n  const taskStatusOptions = [\"Pending\", \"Completed\"];\r\n\r\n  const fieldOrder = [\"task_description\", \"task_status\", \"task_comment\"];\r\n\r\n  const renderField = (key, index) => {\r\n    if (key === \"id\" || key === \"student_details_portal_id\" || key === \"task_date_stamp\" || key === \"created_by\") {\r\n      return null;\r\n    }\r\n\r\n    let label = key.replace(/_/g, \" \");\r\n    label = label\r\n      .split(\" \")\r\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(\" \");\r\n\r\n    if (key === \"task_status\" && isAdmin) {\r\n      return (\r\n        <Grid item xs={12} key={index}>\r\n          <Autocomplete\r\n            value={formData[key] || \"\"}\r\n            onChange={(e, newValue) => handleAutocompleteChange(key, newValue)}\r\n            options={taskStatusOptions}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={label}\r\n                name={key}\r\n                sx={fieldStyles}\r\n                InputLabelProps={inputLabelProps}\r\n              />\r\n            )}\r\n          />\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid item xs={12} key={index}>\r\n        <TextField\r\n          name={key}\r\n          label={label}\r\n          fullWidth\r\n          value={formData[key] || \"\"}\r\n          onChange={handleChange}\r\n          sx={fieldStyles}\r\n          InputLabelProps={inputLabelProps}\r\n          disabled={isStudent || (key === \"task_status\" && !isAdmin)}\r\n          InputProps={{\r\n            readOnly: key === \"task_status\" && !isAdmin,\r\n          }}\r\n        />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer anchor=\"right\" open={open} onClose={onClose}>\r\n      <Box sx={{\r\n        width: drawerWidth,\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#fff'\r\n      }}>\r\n        <Box sx={{\r\n          p: 2,\r\n          borderBottom: \"1px solid #ccc\",\r\n          backgroundColor: isDarkMode ? '#1E293B' : '#e1f5fe'\r\n        }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", color: isDarkMode ? '#F7FAFC' : '#1E293B' }}>\r\n            Task Details\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, overflowY: \"auto\", p: 2 }}>\r\n          <Grid container spacing={2}>\r\n            {fieldOrder.map((key, index) => renderField(key, index))}\r\n          </Grid>\r\n        </Box>\r\n\r\n        <Divider />\r\n        <Box sx={{ p: 2, display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <Button\r\n              onClick={onClose}\r\n              startIcon={<CloseIcon />}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              sx={{\r\n                borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                color: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            {formData.id && isAdmin && (\r\n              <Button\r\n                onClick={handleDeleteClick}\r\n                startIcon={<DeleteIcon />}\r\n                size=\"small\"\r\n                color=\"error\"\r\n                variant=\"outlined\"\r\n                sx={{\r\n                  borderColor: isDarkMode ? '#F7FAFC' : '#1E293B',\r\n                  color: 'red',\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </Box>\r\n          {isAdmin && (\r\n            <Button\r\n              onClick={handleSave}\r\n              startIcon={formData.id ? <SaveIcon /> : <AddIcon />}\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n            >\r\n              {formData.id ? \"Save\" : \"Create\"}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n\r\n        <Dialog open={deleteConfirmationOpen} onClose={handleDeleteCancel}>\r\n          <DialogTitle>Confirm Deletion</DialogTitle>\r\n          <DialogContent>\r\n            Are you sure you want to delete this task?\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteCancel} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleDeleteConfirm} color=\"error\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default TaskDetailsDrawer;","import React from 'react';\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  Image\r\n} from '@react-pdf/renderer';\r\nimport logo from '../images/willowton_logo.png';\r\n\r\n// About Me Custom Questions\r\nconst aboutMeQuestions = [\r\n  \"What inspired you to pursue your chosen field of study?\",\r\n  \"How do you plan to use your education and skills to make a significant impact in this field?\",\r\n  \"What special projects or initiatives have you undertaken in your academic life?\",\r\n  \"Can you tell me about any academic awards or scholarships you have received?\",\r\n  \"Provide examples or specific skills you have developed that demonstrates your commitment.\",\r\n  \"What extracurricular activities have you participated in, and how have they contributed to your personal and academic growth?\",\r\n  \"Once you have completed your studies, how will others benefit from it?\",\r\n  \"Can you describe any financial challenges you have faced that have affected your ability to pursue your education, and how these challenges have impacted your current financial situation?\",\r\n  \"Have you previously been awarded a bursary?\",\r\n  \"What do you think has been your most notable contribution to society thus far?\",\r\n  \"Why do you think serving the community is important?\",\r\n  \"Will you be doing any volunteer work during your studies?\",\r\n  \"Are you willing to assist someone in need?\",\r\n  \"Describe yourself in three words.\",\r\n  \"What is your greatest strength?\",\r\n  \"Describe your biggest mistake and what steps you have taken to rectify it.\",\r\n  \"What personal achievement makes you proud?\",\r\n  \"Are you self-motivated? Explain\",\r\n  \"1st choice of study.\",\r\n  \"2nd choice of study\",\r\n  \"3rd choice of study.\"\r\n];\r\n\r\n// Interview Custom Questions\r\nconst interviewQuestions = [\r\n  \"Briefly describe the applicant's family & social financial conditions?\",\r\n  \"Employment Status Score\",\r\n  \"Year of Study\",\r\n  \"Degree/Diploma Name\",\r\n  \"Number of Years to Qualify\",\r\n  \"Reason for Choosing the Course\",\r\n  \"Field of Study Score\",\r\n  \"APS Score (Matric) or University Average\",\r\n  \"Number of Failed Modules\",\r\n  \"Academic Results Score\",\r\n  \"Have you worked on any special projects or initiatives?\",\r\n  \"What extracurricular activities have you participated in?\",\r\n  \"How do you plan to contribute to your community post-graduation?\",\r\n  \"How would you inspire others to make an impact?\",\r\n  \"Community Work Involvement Score\",\r\n  \"How will you use your education and skills to make an impact?\",\r\n  \"Can you share academic awards or scholarships received?\",\r\n  \"Describe a role model and why they inspire you?\",\r\n  \"Why do you believe you deserve this bursary?\",\r\n  \"If not awarded this bursary, what are your plans?\",\r\n  \"Motivation Score\",\r\n  \"Total Score\",\r\n  \"Comments Section\",\r\n  \"Overall Impression\"\r\n];\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    padding: 30,\r\n    fontSize: 8,\r\n    fontFamily: 'Helvetica',\r\n    lineHeight: 1.5\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1 solid #ccc',\r\n    marginBottom: 10,\r\n    paddingBottom: 4\r\n  },\r\n  logo: {\r\n    width: 60,\r\n    height: 60,\r\n    objectFit: 'contain'\r\n  },\r\n  headerText: {\r\n    textAlign: 'center',\r\n    flex: 1\r\n  },\r\n  headerTitle1: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n    marginBottom: 1\r\n  },\r\n  headerTitle2: {\r\n    fontSize: 10,\r\n    fontStyle: 'italic'\r\n  },\r\n  reportTime: {\r\n    fontSize: 8,\r\n    textAlign: 'right'\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#2D3748',\r\n    color: 'white',\r\n    padding: 4,\r\n    marginTop: 10,\r\n    marginBottom: 4,\r\n    width: '100%',\r\n    borderRadius: 4\r\n  },\r\n  studentDetailsRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n    gap: 4,\r\n    marginBottom: 4\r\n  },\r\n  studentDetailsField: {\r\n    width: '49%',\r\n    flexDirection: 'column',\r\n    padding: 4,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    borderBottomStyle: 'solid'\r\n  },\r\n  studentDetailsLabel: {\r\n    fontWeight: 'bold',\r\n    marginBottom: 2\r\n  },\r\n  studentDetailsValue: {\r\n    fontStyle: 'italic'\r\n  },\r\n  table: {\r\n    display: 'table',\r\n    width: '100%',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    marginBottom: 4,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    minHeight: 20, // Ensure minimum height for content\r\n  },\r\n  tableCellLabel: {\r\n  width: '40%',\r\n  padding: 4,\r\n  fontWeight: 'bold',\r\n  backgroundColor: '#f5f5f5',\r\n  borderRightWidth: 1,\r\n  borderRightColor: '#ccc',\r\n  wordBreak: 'keep-all',   // Don't break in the middle of words\r\n  minWidth: 0,\r\n  overflow: 'hidden'\r\n},\r\ntableCellValue: {\r\n  width: '60%',\r\n  padding: 4,\r\n  fontStyle: 'italic',\r\n  wordBreak: 'keep-all',   // Only break at natural word boundaries\r\n  minWidth: 0,\r\n  overflow: 'hidden',\r\n  lineHeight: 1.2\r\n},\r\n\r\n});\r\n\r\n// Converts snake_case or raw field names to Sentence Case\r\nconst toSentenceCase = (str) => {\r\n  return str\r\n    .replace(/_/g, ' ')\r\n    .split(' ')\r\n    .map(word =>\r\n      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\r\n    )\r\n    .join(' ');\r\n};\r\n\r\n// Removes section prefix from the field name\r\nconst removePrefix = (label, sectionTitle) => {\r\n  const cleanLabel = toSentenceCase(label);\r\n  const cleanSection = toSentenceCase(sectionTitle).replace(/s$/, '');\r\n  if (cleanLabel.startsWith(cleanSection + ' ')) {\r\n    return cleanLabel.slice(cleanSection.length + 1);\r\n  }\r\n  return cleanLabel;\r\n};\r\n\r\n// Map question to field name\r\nconst mapQuestion = (section, key) => {\r\n  const questionMap = {\r\n    'About Me': aboutMeQuestions,\r\n    'Interview': interviewQuestions\r\n  };\r\n  const questions = questionMap[section];\r\n  if (!questions) return removePrefix(key, section);\r\n\r\n  const match = key.match(/^(about_me_q|interview_q)(\\d+)/i);\r\n  if (match) {\r\n    const index = parseInt(match[2], 10) - 1; // Convert to 0-based index\r\n    return questions[index] || removePrefix(key, section);\r\n  }\r\n  return removePrefix(key, section);\r\n};\r\n\r\n// Get current date and time\r\nconst getCurrentDateTime = () => {\r\n  const now = new Date();\r\n  return now.toLocaleString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    hour12: true\r\n  });\r\n};\r\n\r\n// Student Details Section\r\nconst StudentDetailsSection = ({ data }) => {\r\n  const entries = Object.entries(data || {}).filter(([k, v]) => v !== null && v !== '');\r\n  const rows = [];\r\n  for (let i = 0; i < entries.length; i += 2) {\r\n    rows.push(entries.slice(i, i + 2));\r\n  }\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>Student Details</Text>\r\n      {rows.map((row, rowIdx) => (\r\n        <View key={rowIdx} style={styles.studentDetailsRow}>\r\n          {row.map(([key, value]) => (\r\n            <View key={key} style={styles.studentDetailsField}>\r\n              <Text style={styles.studentDetailsLabel}>{removePrefix(key, 'Student Details')}</Text>\r\n              <Text style={styles.studentDetailsValue}>{value || '—'}</Text>\r\n            </View>\r\n          ))}\r\n          {row.length < 2 && <View style={styles.studentDetailsField} />}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\n// Single Object Section\r\nconst RenderSection = ({ title, data }) => {\r\n  if (!data || Object.keys(data).length === 0) return null;\r\n  const entries = Object.entries(data).filter(([k, v]) => v !== null && v !== '');\r\n  return (\r\n    <View>\r\n      <Text style={styles.sectionTitle}>{toSentenceCase(title)}</Text>\r\n      <View style={styles.table}>\r\n        {entries.map(([key, value], idx) => (\r\n          <View key={idx} style={styles.tableRow} wrap={false}>\r\n            <Text style={styles.tableCellLabel}>{mapQuestion(title, key)}</Text>\r\n            <Text style={styles.tableCellValue} numberOfLines={0}>{value || '—'}</Text> {/* Allow multiple lines */}\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Multiple Records Section\r\nconst RenderMultiple = ({ title, data }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const showNumbering = data.length > 1;\r\n\r\n  return (\r\n    <View>\r\n      {data.map((item, idx) => (\r\n        <View key={idx}>\r\n          <Text style={styles.sectionTitle}>\r\n            {toSentenceCase(title)}{showNumbering ? ` - ${idx + 1}` : ''}\r\n          </Text>\r\n          <View style={styles.table}>\r\n            {Object.entries(item).map(([key, val], i) => (\r\n              <View key={i} style={styles.tableRow}>\r\n                <Text style={styles.tableCellLabel}>\r\n                  {removePrefix(key, title)}\r\n                </Text>\r\n                <Text style={styles.tableCellValue}>\r\n                  {val || '—'}\r\n                </Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst StudentPDFDocument = ({ studentData }) => (\r\n  <Document>\r\n    <Page size=\"A4\" style={styles.page}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Image src={logo} style={styles.logo} />\r\n        <View style={styles.headerText}>\r\n          <Text style={styles.headerTitle1}>SANZAF Bursary</Text>\r\n          <Text style={styles.headerTitle2}>Student Detailed Report</Text>\r\n        </View>\r\n        <Text style={styles.reportTime}>{getCurrentDateTime()}</Text>\r\n      </View>\r\n\r\n      {/* Sections */}\r\n      <StudentDetailsSection data={studentData.student_details} />\r\n      <RenderSection title=\"About Me\" data={studentData.about_me} />\r\n      <RenderSection title=\"Assets & Liabilities\" data={studentData.assets_liabilities} />\r\n      <RenderSection title=\"Expense Details\" data={studentData.expense_details} />\r\n      <RenderSection title=\"Interview\" data={studentData.interview} />\r\n      <RenderSection title=\"University Details\" data={studentData.university_details} />\r\n      <RenderMultiple title=\"Parents Details\" data={studentData.parents_details} />\r\n      <RenderMultiple title=\"Attachments\" data={studentData.attachments} />\r\n      <RenderMultiple title=\"Payments\" data={studentData.payments} />\r\n      <RenderMultiple title=\"Results\" data={studentData.results} />\r\n      <RenderMultiple title=\"Tasks\" data={studentData.tasks} />\r\n      <RenderMultiple title=\"Voluntary Service\" data={studentData.voluntary_service} />\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nexport default StudentPDFDocument;","import React, { useState, useEffect, useCallback, useContext } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Tab,\r\n  Tabs,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DrawerForm from \"./Drawer/StudentDetailDrawer\";\r\nimport AboutusDrawer from \"./Drawer/AboutUsDrawer\";\r\nimport ParentsDrawer from \"./Drawer/ParentsDrawer\";\r\nimport UniversityDetailsDrawer from \"./Drawer/UniversityDetailsDrawer\";\r\nimport AttachmentsDrawer from \"./Drawer/AttachmentsDrawer\";\r\nimport ExpenseDetailsDrawer from \"./Drawer/ExpenseDetailsDrawer\";\r\nimport AssetsLiabilitiesDrawer from \"./Drawer/AssetsLiabilitiesDrawer\";\r\nimport AcademicResultsDrawer from \"./Drawer/AcademicResultsDrawer\";\r\nimport VoluntaryServiceDrawer from \"./Drawer/VoluntaryServiceDrawer\";\r\nimport PaymentDrawer from \"./Drawer/PaymentDrawer\";\r\nimport InterviewDrawer from \"./Drawer/InterviewDrawer\";\r\nimport TaskDetailsDrawer from \"./Drawer/TaskDetailsDrawer\";\r\nimport { ThemeContext } from \"../config/ThemeContext\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport StudentPDFDocument from \"./StudentPDFDocument\";\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst StudentDetails = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [studentDetails, setStudentDetails] = useState([]);\r\n  const [selectedStudent, setSelectedStudent] = useState(null);\r\n  const [selectedStudentid, setSelectedStudentid] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [aboutMeDrawerOpen, setAboutMeDrawerOpen] = useState(false);\r\n  const [editingAboutMeId, setEditingAboutMeId] = useState(null);\r\n  const [parentsDrawerOpen, setParentsDrawerOpen] = useState(false);\r\n  const [editingParentId, setEditingParentId] = useState(null);\r\n  const [universityDetailsDrawerOpen, setUniversityDetailsDrawerOpen] = useState(false);\r\n  const [editingUniversityId, setEditingUniversityId] = useState(null);\r\n  const [attachmentsDrawerOpen, setAttachmentsDrawerOpen] = useState(false);\r\n  const [editingAttachmentId, setEditingAttachmentId] = useState(null);\r\n  const [expenseDetailsDrawerOpen, setExpensesSummaryDrawerOpen] = useState(false);\r\n  const [editingExpenseDetailsId, setEditingExpenseDetailsId] = useState(null);\r\n  const [assetsLiabilitiesDrawerOpen, setAssetsLiabilitiesDrawerOpen] = useState(false);\r\n  const [editingAssetLiabilityId, setEditingAssetLiabilityId] = useState(null);\r\n  const [academicResultsDrawerOpen, setAcademicResultsDrawerOpen] = useState(false);\r\n  const [editingAcademicResultId, setEditingAcademicResultId] = useState(null);\r\n  const [voluntaryServiceDrawerOpen, setVoluntaryServiceDrawerOpen] = useState(false);\r\n  const [editingVoluntaryServiceId, setEditingVoluntaryServiceId] = useState(null);\r\n  const [paymentDrawerOpen, setPaymentDrawerOpen] = useState(false);\r\n  const [editingPaymentId, setEditingPaymentId] = useState(null);\r\n  const [interviewDrawerOpen, setInterviewDrawerOpen] = useState(false);\r\n  const [editingInterviewId, setEditingInterviewId] = useState(null);\r\n  const [tasksDrawerOpen, setTasksDrawerOpen] = useState(false);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [aboutMe, setAboutMe] = useState(null);\r\n  const [parentsDetails, setParentsDetails] = useState(null);\r\n  const [universityDetails, setUniversityDetails] = useState(null);\r\n  const [attachments, setAttachments] = useState(null);\r\n  const [expensesSummary, setExpensesSummary] = useState(null);\r\n  const [assetsLiabilities, setAssetsLiabilities] = useState(null);\r\n  const [academicResults, setAcademicResults] = useState(null);\r\n  const [voluntaryServices, setVoluntaryServices] = useState(null);\r\n  const [payments, setPayments] = useState(null);\r\n  const [interviews, setInterviews] = useState(null);\r\n  const [tasks, setTasks] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\")) || {};\r\n  const isAdmin = user?.user_type === \"admin\";\r\n  const isStudent = user?.user_type === \"student\";\r\n\r\n  const pageStyle = {\r\n    backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n    color: isDarkMode ? \"#ffffff\" : \"#000000\",\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const options = {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n      year: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    };\r\n    const formattedDate = date.toLocaleString(\"en-GB\", options).replace(\",\", \"\");\r\n    return formattedDate.replace(/\\//g, \"/\");\r\n  };\r\n\r\n  const fetchStudentDetails = useCallback(async () => {\r\n    try {\r\n      const userId = user.user_id;\r\n      let response;\r\n      if (isAdmin) {\r\n        response = await fetch(`${API_BASE_URL}/student-details`);\r\n      } else if (isStudent && userId) {\r\n        response = await fetch(`${API_BASE_URL}/student-detail/${userId}`);\r\n      } else {\r\n        console.error(\"User type is neither admin nor student or user ID is missing\");\r\n        return {};\r\n      }\r\n\r\n      const data = await response.json();\r\n      if (data) {\r\n        const updatedStudent = Array.isArray(data) ? data[0] : data;\r\n        Object.keys(updatedStudent).forEach((key) => {\r\n          if (key.toLowerCase().includes(\"date_stamp\")) {\r\n            updatedStudent[key] = formatDate(updatedStudent[key]);\r\n          }\r\n        });\r\n        setStudentDetails(Array.isArray(data) ? data : [updatedStudent]);\r\n        setSelectedStudent(updatedStudent);\r\n        setSelectedStudentid(updatedStudent.id);\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching student details:\", error);\r\n      return {};\r\n    }\r\n  }, [isAdmin, isStudent, user.user_id]);\r\n\r\n  const fetchStudentData = async (studentId) => {\r\n    if (!studentId) {\r\n      setStudentData(null);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/student-data/${studentId}`);\r\n      const data = await response.json();\r\n      setStudentData(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching student data:\", error);\r\n      setStudentData(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const initializeData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await fetchStudentDetails();\r\n        if (mounted && data.length > 0) {\r\n          setSelectedStudent(data[0]);\r\n          setSelectedStudentid(data[0].id);\r\n          await fetchStudentData(data[0].id);\r\n        }\r\n      } finally {\r\n        if (mounted) setIsLoading(false);\r\n      }\r\n    };\r\n    initializeData();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [fetchStudentDetails]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    if (selectedStudent) {\r\n      setIsLoading(true);\r\n      const fetchAllData = async () => {\r\n        try {\r\n          const responses = await Promise.all(\r\n            [\r\n              \"about-me\",\r\n              \"parents-details\",\r\n              \"university-details\",\r\n              \"attachments\",\r\n              \"expenses-summary\",\r\n              \"assets-liabilities\",\r\n              \"academic-results\",\r\n              \"voluntary-services\",\r\n              \"payments\",\r\n              \"interviews\",\r\n              \"tasks\",\r\n            ].map((key) =>\r\n              fetch(`${API_BASE_URL}/${key}/${selectedStudent.id}`)\r\n                .then((res) => res.json())\r\n                .catch(() => [])\r\n            )\r\n          );\r\n\r\n          const formatResponseData = (data) => {\r\n            if (!Array.isArray(data)) return [];\r\n            return data.map((item) => {\r\n              const updatedItem = { ...item };\r\n              Object.keys(updatedItem).forEach((key) => {\r\n                if (key.toLowerCase().endsWith(\"date_stamp\") && updatedItem[key]) {\r\n                  updatedItem[key] = formatDate(updatedItem[key]);\r\n                }\r\n              });\r\n              return updatedItem;\r\n            });\r\n          };\r\n\r\n          if (mounted) {\r\n            setAboutMe(formatResponseData(responses[0]));\r\n            setParentsDetails(formatResponseData(responses[1]));\r\n            setUniversityDetails(formatResponseData(responses[2]));\r\n            setAttachments(formatResponseData(responses[3]));\r\n            setExpensesSummary(formatResponseData(responses[4]));\r\n            setAssetsLiabilities(formatResponseData(responses[5]));\r\n            setAcademicResults(formatResponseData(responses[6]));\r\n            setVoluntaryServices(formatResponseData(responses[7]));\r\n            setPayments(formatResponseData(responses[8]));\r\n            setInterviews(formatResponseData(responses[9]));\r\n            setTasks(formatResponseData(responses[10]));\r\n            await fetchStudentData(selectedStudent.id); // Fetch student data after other data\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching section data:\", error);\r\n        } finally {\r\n          if (mounted) setIsLoading(false);\r\n        }\r\n      };\r\n      fetchAllData();\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [selectedStudent]);\r\n\r\n  const handleDeleteStudent = async (studentId) => {\r\n    if (isStudent) {\r\n      setSelectedStudent(null);\r\n      setSelectedStudentid(null);\r\n      setStudentData(null);\r\n    } else if (isAdmin) {\r\n      const remainingStudents = studentDetails.filter((student) => student.id !== studentId);\r\n      if (remainingStudents.length > 0) {\r\n        const nextStudent = remainingStudents[0];\r\n        setSelectedStudent(nextStudent);\r\n        setSelectedStudentid(nextStudent.id);\r\n        await fetchStudentData(nextStudent.id);\r\n      } else {\r\n        setSelectedStudent(null);\r\n        setSelectedStudentid(null);\r\n        setStudentData(null);\r\n      }\r\n      await fetchStudentDetails();\r\n    }\r\n  };\r\n\r\n  const isStudentWithNoData = isStudent && !selectedStudent;\r\n  const isUserWithData = (isAdmin || isStudent) && selectedStudent;\r\n  const isSelectedStudent = selectedStudent;\r\n\r\n  const fetchAboutMe = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/about-me/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setAboutMe(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error refetching About Me:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchParentsDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/parents-details/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setParentsDetails(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching parent details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchUniversityDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/university-details/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setUniversityDetails(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching university details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAttachmentsDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/attachments/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setAttachments(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching attachments:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchExpenseDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/expense-details/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setExpensesSummary(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching expense details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAssetsLiabilities = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/assets-liabilities/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setAssetsLiabilities(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching assets & liabilities:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAcademicResults = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/academic-results/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setAcademicResults(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching academic results:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchVoluntaryServices = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/voluntary-service/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setVoluntaryServices(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching voluntary services:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPaymentsDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/payments/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setPayments(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching payments details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchInterviewsDetails = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/interviews/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setInterviews(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching interview details:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchTasks = async (studentId) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/tasks/${studentId}`);\r\n      const data = await response.json();\r\n      const formattedData = Array.isArray(data)\r\n        ? data.map((item) => {\r\n            const updatedItem = { ...item };\r\n            Object.keys(updatedItem).forEach((key) => {\r\n              if (key.toLowerCase().endsWith(\"date_stamp\")) {\r\n                updatedItem[key] = formatDate(updatedItem[key]);\r\n              }\r\n            });\r\n            return updatedItem;\r\n          })\r\n        : [];\r\n      setTasks(formattedData);\r\n      await fetchStudentData(studentId); // Refresh student data\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => setTabValue(newValue);\r\n\r\n  const renderDrawer = () => (\r\n    <DrawerForm\r\n      open={drawerOpen}\r\n      onClose={() => setDrawerOpen(false)}\r\n      studentId={selectedStudentid}\r\n      onSave={async (savedStudent) => {\r\n        if (savedStudent && typeof savedStudent === \"object\" && savedStudent.id) {\r\n          const formattedStudent = {\r\n            ...savedStudent,\r\n            ...Object.keys(savedStudent).reduce((acc, key) => {\r\n              if (key.toLowerCase().includes(\"date\") && savedStudent[key]) {\r\n                acc[key] = formatDate(savedStudent[key]);\r\n              } else {\r\n                acc[key] = savedStudent[key];\r\n              }\r\n              return acc;\r\n            }, {}),\r\n          };\r\n          setStudentDetails((prev) => {\r\n            const existingIndex = prev.findIndex((s) => s.id === savedStudent.id);\r\n            if (existingIndex >= 0) {\r\n              const updatedDetails = [...prev];\r\n              updatedDetails[existingIndex] = formattedStudent;\r\n              return updatedDetails;\r\n            } else {\r\n              return [...prev, formattedStudent];\r\n            }\r\n          });\r\n          setSelectedStudent(formattedStudent);\r\n          setSelectedStudentid(formattedStudent.id);\r\n          await fetchStudentData(formattedStudent.id); // Refresh student data\r\n        } else {\r\n          console.error(\"Invalid savedStudent data:\", savedStudent);\r\n        }\r\n        setDrawerOpen(false);\r\n        await fetchStudentDetails();\r\n      }}\r\n      onDelete={handleDeleteStudent}\r\n    />\r\n  );\r\n\r\n  const tabSections = [\r\n    { label: \"Show all\", key: \"show_all\" },\r\n    { label: \"About Me\", key: \"about-me\" },\r\n    { label: \"Parents Details\", key: \"parents-details\" },\r\n    { label: \"University Details\", key: \"university-details\" },\r\n    { label: \"Attachments\", key: \"attachments\" },\r\n    { label: \"Financial Details\", key: \"expenses-summary\" },\r\n    { label: \"Assets & Liabilities\", key: \"assets-liabilities\" },\r\n    { label: \"Academic Results\", key: \"academic-results\" },\r\n    { label: \"Voluntary Services\", key: \"voluntary-services\" },\r\n    { label: \"Tasks\", key: \"tasks\" },\r\n  ];\r\n\r\n  if (isAdmin) {\r\n    tabSections.splice(9, 0, { label: \"Payments\", key: \"payments\" }, { label: \"Interviews\", key: \"interviews\" });\r\n  }\r\n\r\n  const capitalizeWords = (str) => {\r\n    if (str.toLowerCase() === \"student id passport number\") {\r\n      return \"ID/Passport Number\";\r\n    }\r\n    if (str.toLowerCase() === \"student willow relationship\") {\r\n      return \"Willowton Group Relationship\";\r\n    }\r\n    const formattedStr = str.replace(/^student /i, \"\").replace(/_/g, \"\");\r\n    return formattedStr.replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n  };\r\n\r\n  const dataForSection = (key) => {\r\n    const mapping = {\r\n      \"about-me\": aboutMe,\r\n      \"parents-details\": parentsDetails,\r\n      \"university-details\": universityDetails,\r\n      \"attachments\": attachments,\r\n      \"expenses-summary\": expensesSummary,\r\n      \"assets-liabilities\": assetsLiabilities,\r\n      \"academic-results\": academicResults,\r\n      \"voluntary-services\": voluntaryServices,\r\n      \"payments\": payments,\r\n      \"interviews\": interviews,\r\n      \"tasks\": tasks,\r\n    };\r\n    return mapping[key] || [];\r\n  };\r\n\r\n  const renderRegion = (sectionKey, data) => {\r\n    if (!data) return null;\r\n\r\n    const isAboutMe = sectionKey === \"about-me\";\r\n    const isParents = sectionKey === \"parents-details\";\r\n    const isUniversityDetails = sectionKey === \"university-details\";\r\n    const isAttachments = sectionKey === \"attachments\";\r\n    const isExpenses = sectionKey === \"expenses-summary\";\r\n    const isAssetsLiabilities = sectionKey === \"assets-liabilities\";\r\n    const isAcademicResults = sectionKey === \"academic-results\";\r\n    const isVoluntaryServices = sectionKey === \"voluntary-services\";\r\n    const isPayments = sectionKey === \"payments\";\r\n    const isInterview = sectionKey === \"interviews\";\r\n    const isTasks = sectionKey === \"tasks\";\r\n\r\n    if ((isPayments || isInterview) && !isAdmin) return null;\r\n\r\n    return (\r\n      <Box sx={{ padding: 0, border: \"1px solid #ccc\", marginBottom: 2, backgroundColor: isDarkMode ? \"#1e293b\" : \"white\", color: pageStyle.color }}>\r\n        <Box sx={{ padding: 1, display: \"flex\", alignItems: \"center\", marginBottom: 0.5, borderBottom: 1, borderBottomColor: \"#ccc\", height: 40, backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\" }}>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", marginLeft: 1 }}>\r\n            {capitalizeWords(sectionKey === \"expenses-summary\" ? \"financial-details\" : sectionKey)}\r\n          </Typography>\r\n          {isSelectedStudent &&\r\n            (isAboutMe ||\r\n              isParents ||\r\n              isUniversityDetails ||\r\n              isAttachments ||\r\n              isExpenses ||\r\n              isAssetsLiabilities ||\r\n              isAcademicResults ||\r\n              isVoluntaryServices ||\r\n              isPayments ||\r\n              isInterview ||\r\n              isTasks) && (\r\n              <Button\r\n                sx={{ marginLeft: \"auto\", color: isDarkMode ? \"white\" : \"black\" }}\r\n                onClick={() => {\r\n                  if (isAboutMe) {\r\n                    setEditingAboutMeId(null);\r\n                    setAboutMeDrawerOpen(true);\r\n                  }\r\n                  if (isParents) {\r\n                    setEditingParentId(null);\r\n                    setParentsDrawerOpen(true);\r\n                  }\r\n                  if (isUniversityDetails) {\r\n                    setEditingUniversityId(null);\r\n                    setUniversityDetailsDrawerOpen(true);\r\n                  }\r\n                  if (isAttachments) {\r\n                    setEditingAttachmentId(null);\r\n                    setAttachmentsDrawerOpen(true);\r\n                  }\r\n                  if (isExpenses) {\r\n                    setEditingExpenseDetailsId(null);\r\n                    setExpensesSummaryDrawerOpen(true);\r\n                  }\r\n                  if (isAssetsLiabilities) {\r\n                    setEditingAssetLiabilityId(null);\r\n                    setAssetsLiabilitiesDrawerOpen(true);\r\n                  }\r\n                  if (isAcademicResults) {\r\n                    setEditingAcademicResultId(null);\r\n                    setAcademicResultsDrawerOpen(true);\r\n                  }\r\n                  if (isVoluntaryServices) {\r\n                    setEditingVoluntaryServiceId(null);\r\n                    setVoluntaryServiceDrawerOpen(true);\r\n                  }\r\n                  if (isPayments) {\r\n                    setEditingPaymentId(null);\r\n                    setPaymentDrawerOpen(true);\r\n                  }\r\n                  if (isInterview) {\r\n                    setEditingInterviewId(null);\r\n                    setInterviewDrawerOpen(true);\r\n                  }\r\n                  if (isTasks) {\r\n                    setEditingTaskId(null);\r\n                    setTasksDrawerOpen(true);\r\n                  }\r\n                }}\r\n              >\r\n                <AddIcon fontSize=\"small\" />\r\n              </Button>\r\n            )}\r\n        </Box>\r\n        {data.length > 0 && (\r\n          <Table sx={{ maxHeight: 400, overflowY: \"auto\", display: \"block\" }}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: \"bold\", width: \"50px\" }} />\r\n                {Object.keys(data[0])\r\n                  .filter((field) => field !== \"id\" && field !== \"student_details_portal_id\")\r\n                  .map((field, idx) => (\r\n                    <TableCell\r\n                      key={idx}\r\n                      sx={{\r\n                        whiteSpace: \"nowrap\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\",\r\n                        maxWidth: 300,\r\n                        fontWeight: \"bold\",\r\n                        textTransform: \"capitalize\",\r\n                        color: isDarkMode ? \"white\" : \"black\",\r\n                      }}\r\n                    >\r\n                      {capitalizeWords(field.replace(/_/g, \" \"))}\r\n                    </TableCell>\r\n                  ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.map((row, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell sx={{ width: \"50px\" }}>\r\n                    {(isAboutMe ||\r\n                      isParents ||\r\n                      isUniversityDetails ||\r\n                      isAttachments ||\r\n                      isExpenses ||\r\n                      isAssetsLiabilities ||\r\n                      isAcademicResults ||\r\n                      isVoluntaryServices ||\r\n                      isPayments ||\r\n                      isInterview ||\r\n                      isTasks) && (\r\n                      <EditIcon\r\n                        sx={{ cursor: \"pointer\", fontSize: \"large\", color: isDarkMode ? \"white\" : \"black\" }}\r\n                        onClick={() => {\r\n                          if (isAboutMe) {\r\n                            setEditingAboutMeId(row.id);\r\n                            setAboutMeDrawerOpen(true);\r\n                          }\r\n                          if (isParents) {\r\n                            setEditingParentId(row.id);\r\n                            setParentsDrawerOpen(true);\r\n                          }\r\n                          if (isUniversityDetails) {\r\n                            setEditingUniversityId(row.id);\r\n                            setUniversityDetailsDrawerOpen(true);\r\n                          }\r\n                          if (isAttachments) {\r\n                            setEditingAttachmentId(row.id);\r\n                            setAttachmentsDrawerOpen(true);\r\n                          }\r\n                          if (isExpenses) {\r\n                            setEditingExpenseDetailsId(row.id);\r\n                            setExpensesSummaryDrawerOpen(true);\r\n                          }\r\n                          if (isAssetsLiabilities) {\r\n                            setEditingAssetLiabilityId(row.id);\r\n                            setAssetsLiabilitiesDrawerOpen(true);\r\n                          }\r\n                          if (isAcademicResults) {\r\n                            setEditingAcademicResultId(row.id);\r\n                            setAcademicResultsDrawerOpen(true);\r\n                          }\r\n                          if (isVoluntaryServices) {\r\n                            setEditingVoluntaryServiceId(row.id);\r\n                            setVoluntaryServiceDrawerOpen(true);\r\n                          }\r\n                          if (isPayments) {\r\n                            setEditingPaymentId(row.id);\r\n                            setPaymentDrawerOpen(true);\r\n                          }\r\n                          if (isInterview) {\r\n                            setEditingInterviewId(row.id);\r\n                            setInterviewDrawerOpen(true);\r\n                          }\r\n                          if (isTasks) {\r\n                            setEditingTaskId(row.id);\r\n                            setTasksDrawerOpen(true);\r\n                          }\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  {Object.entries(row).map(([key, val], j) =>\r\n                    key !== \"id\" && key !== \"student_details_portal_id\" && (\r\n                      <TableCell key={j} sx={{ color: isDarkMode ? \"white\" : \"black\" }}>\r\n                        {typeof val === \"object\" && val !== null\r\n                          ? key.toLowerCase().includes(\"attachment\") ||\r\n                            key.toLowerCase().includes(\"proof_of_service\") ||\r\n                            key.toLowerCase().includes(\"proof_of_payment\")\r\n                            ? \"📎 File attached\"\r\n                            : JSON.stringify(val)\r\n                          : val}\r\n                      </TableCell>\r\n                    )\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const TabContent = ({ sectionKey, data }) => renderRegion(sectionKey, data);\r\n\r\n  const renderTabContent = (tabValue) => {\r\n    const section = tabSections[tabValue];\r\n    return section.key === \"show_all\"\r\n      ? tabSections\r\n          .filter((s) => s.key !== \"show_all\")\r\n          .map((sec, i) => (\r\n            (isAdmin || (sec.key !== \"payments\" && sec.key !== \"interviews\")) && (\r\n              <TabContent key={i} sectionKey={sec.key} data={dataForSection(sec.key)} />\r\n            )\r\n          ))\r\n      : <TabContent sectionKey={section.key} data={dataForSection(section.key)} />;\r\n  };\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (!selectedStudent || !studentData) {\r\n      console.error(\"No selected student or student data available for PDF generation\");\r\n      return;\r\n    }\r\n    try {\r\n      const blob = await pdf(<StudentPDFDocument studentData={studentData} />).toBlob();\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      const firstName = selectedStudent.student_name || \"Unknown\";\r\n      const lastName = selectedStudent.student_surname || \"User\";\r\n      a.download = `${firstName} ${lastName} - Student Details PDF.pdf`;\r\n      a.click();\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(\"Failed to generate PDF:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          padding: \"12px\",\r\n          backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n          borderRadius: \"8px\",\r\n          marginBottom: \"12px\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          border: \"1px solid #ccc\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"black\" }}\r\n        >\r\n          Student Details\r\n        </Typography>\r\n        {isStudentWithNoData && (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              setSelectedStudentid(null);\r\n              setDrawerOpen(true);\r\n            }}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n              color: isDarkMode ? \"black\" : \"white\",\r\n              padding: \"2px 6px\",\r\n              textTransform: \"none\",\r\n            }}\r\n          >\r\n            <AddIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n            Start Application\r\n          </Button>\r\n        )}\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {isAdmin && (\r\n          <Grid item xs={12} sm={3} md={2}>\r\n            <Paper\r\n              sx={{\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                color: pageStyle.color,\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                  padding: \"6px\",\r\n                  borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  sx={{\r\n                    fontWeight: \"bold\",\r\n                    color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    marginLeft: 1,\r\n                  }}\r\n                >\r\n                  Search\r\n                </Typography>\r\n              </Box>\r\n              <Box sx={{ padding: 2 }}>\r\n                <TextField\r\n                  label=\"Search\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                  sx={{\r\n                    mb: 1,\r\n                    borderRadius: 1,\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n                      \"& fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&:hover fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                      \"&.Mui-focused fieldset\": {\r\n                        borderColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                      },\r\n                    },\r\n                    \"& .MuiInputBase-input\": {\r\n                      color: isDarkMode ? \"white\" : \"#1e293b\",\r\n                    },\r\n                    \"& .MuiInputBase-input::placeholder\": {\r\n                      color: isDarkMode ? \"#B0B0B0\" : \"#666\",\r\n                    },\r\n                  }}\r\n                  placeholder=\"Search\"\r\n                  InputLabelProps={{ style: { color: isDarkMode ? \"#ffffff\" : \"#000000\" } }}\r\n                />\r\n                <div style={{ maxHeight: \"300px\", overflowY: \"auto\" }}>\r\n                  {studentDetails\r\n                    .filter(\r\n                      (s) =>\r\n                        s.student_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                        s.student_surname.toLowerCase().includes(searchQuery.toLowerCase())\r\n                    )\r\n                    .map((student, idx) => (\r\n                      <Card\r\n                        key={idx}\r\n                        sx={{\r\n                          mb: 0.5,\r\n                          boxShadow: 0,\r\n                          height: 55,\r\n                          cursor: \"pointer\",\r\n                          backgroundColor:\r\n                            selectedStudent?.id === student.id\r\n                              ? isDarkMode\r\n                                ? \"white\"\r\n                                : \"#1e293b\"\r\n                              : \"transparent\",\r\n                          color:\r\n                            selectedStudent?.id === student.id\r\n                              ? isDarkMode\r\n                                ? \"#1e293b\"\r\n                                : \"white\"\r\n                              : \"inherit\",\r\n                          \"&:hover\": {\r\n                            backgroundColor: isDarkMode ? \"white\" : \"#1e293b\",\r\n                            color: isDarkMode ? \"#1e293b\" : \"white\",\r\n                          },\r\n                        }}\r\n                        onClick={async () => {\r\n                          setSelectedStudent(student);\r\n                          setSelectedStudentid(student.id);\r\n                          await fetchStudentData(student.id);\r\n                        }}\r\n                      >\r\n                        <CardContent sx={{ padding: \"10px\" }}>\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: \"bold\" }}>\r\n                            {student.student_name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">{student.student_surname}</Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                </div>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12} sm={9} md={isStudent ? 12 : 10}>\r\n          <Paper\r\n            sx={{\r\n              border: \"1px solid #ccc\",\r\n              backgroundColor: isDarkMode ? \"#1e293b\" : \"white\",\r\n              color: pageStyle.color,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                backgroundColor: isDarkMode ? \"#1e293b\" : \"#e1f5fe\",\r\n                borderBottom: isDarkMode ? \"1px solid white\" : \"1px solid #ccc\",\r\n                padding: \"6px\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                sx={{ fontWeight: \"bold\", color: isDarkMode ? \"white\" : \"#1e293b\", marginLeft: 1 }}\r\n              >\r\n                Student Details Portal\r\n              </Typography>\r\n              {isUserWithData && (\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 0, margin: 0, padding: 0 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setDrawerOpen(false);\r\n                      setTimeout(() => setDrawerOpen(true), 50);\r\n                      setSelectedStudentid(selectedStudent?.id);\r\n                    }}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                      color: isDarkMode ? \"black\" : \"white\",\r\n                      padding: \"2px 6px\",\r\n                      margin: 0,\r\n                      textTransform: \"none\",\r\n                    }}\r\n                  >\r\n                    <EditIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleDownloadPDF}\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      backgroundColor: isDarkMode ? \"white\" : \"black\",\r\n                      color: isDarkMode ? \"black\" : \"white\",\r\n                      padding: \"2px 6px\",\r\n                      margin: 0,\r\n                      textTransform: \"none\",\r\n                      marginLeft: 1,\r\n                    }}\r\n                  >\r\n                    <DownloadIcon sx={{ marginRight: 1, fontSize: \"small\" }} />\r\n                    Download PDF\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n\r\n            {isLoading ? (\r\n              <Box sx={{ padding: 2 }}>\r\n                <Typography variant=\"body1\" sx={{ textAlign: \"center\" }}>\r\n                  Loading...\r\n                </Typography>\r\n              </Box>\r\n            ) : selectedStudent ? (\r\n              <Box sx={{ padding: 1.5 }}>\r\n                <Grid container spacing={1}>\r\n                  {Object.entries(selectedStudent).map(([key, value], i) => (\r\n                    key !== \"id\" &&\r\n                    key !== \"user_id\" &&\r\n                    key !== \"employment_status_attachment\" && (\r\n                      <React.Fragment key={i}>\r\n                        <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                          <Typography variant=\"body1\">\r\n                            <strong>{capitalizeWords(key.replace(/_/g, \" \"))}</strong>\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} sx={{ borderBottom: \"1px solid #ccc\", pb: \"6px\" }}>\r\n                          <Typography variant=\"body1\">{value}</Typography>\r\n                        </Grid>\r\n                      </React.Fragment>\r\n                    )\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            ) : (\r\n              <Typography variant=\"body1\" sx={{ m: 2, fontWeight: \"bold\" }}>\r\n                No Record Selected\r\n              </Typography>\r\n            )}\r\n\r\n            <Box sx={{ p: 1, overflowX: \"auto\" }}>\r\n              <Tabs\r\n                value={tabValue}\r\n                onChange={handleTabChange}\r\n                aria-label=\"tabs\"\r\n                sx={{\r\n                  \"& .MuiTab-root\": {\r\n                    fontWeight: \"600\",\r\n                    textTransform: \"capitalize\",\r\n                    mr: -2,\r\n                    color: isDarkMode ? \"white\" : \"black\",\r\n                  },\r\n                }}\r\n              >\r\n                {tabSections.map((section, i) => (\r\n                  <Tab key={i} label={section.label} />\r\n                ))}\r\n              </Tabs>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 2 }}>{renderTabContent(tabValue)}</Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {renderDrawer()}\r\n\r\n      <AboutusDrawer\r\n        open={aboutMeDrawerOpen}\r\n        onClose={() => {\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        aboutMeId={editingAboutMeId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAboutMe(selectedStudentid);\r\n          }\r\n          setAboutMeDrawerOpen(false);\r\n          setEditingAboutMeId(null);\r\n        }}\r\n      />\r\n\r\n      <ParentsDrawer\r\n        open={parentsDrawerOpen}\r\n        onClose={() => {\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        parentId={editingParentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchParentsDetails(selectedStudentid);\r\n          }\r\n          setParentsDrawerOpen(false);\r\n          setEditingParentId(null);\r\n        }}\r\n      />\r\n\r\n      <UniversityDetailsDrawer\r\n        open={universityDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        universityDetailsId={editingUniversityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchUniversityDetails(selectedStudentid);\r\n          }\r\n          setUniversityDetailsDrawerOpen(false);\r\n          setEditingUniversityId(null);\r\n        }}\r\n      />\r\n\r\n      <AttachmentsDrawer\r\n        open={attachmentsDrawerOpen}\r\n        onClose={() => {\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        attachmentId={editingAttachmentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchAttachmentsDetails(selectedStudentid);\r\n          }\r\n          setAttachmentsDrawerOpen(false);\r\n          setEditingAttachmentId(null);\r\n        }}\r\n      />\r\n\r\n      <ExpenseDetailsDrawer\r\n        open={expenseDetailsDrawerOpen}\r\n        onClose={() => {\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        expenseDetailsId={editingExpenseDetailsId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchExpenseDetails(selectedStudentid);\r\n          }\r\n          setExpensesSummaryDrawerOpen(false);\r\n          setEditingExpenseDetailsId(null);\r\n        }}\r\n      />\r\n\r\n      <AssetsLiabilitiesDrawer\r\n        open={assetsLiabilitiesDrawerOpen}\r\n        onClose={() => {\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        assetLiabilityId={editingAssetLiabilityId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAssetsLiabilities(selectedStudentid);\r\n          setAssetsLiabilitiesDrawerOpen(false);\r\n          setEditingAssetLiabilityId(null);\r\n        }}\r\n      />\r\n\r\n      <AcademicResultsDrawer\r\n        open={academicResultsDrawerOpen}\r\n        onClose={() => {\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        resultId={editingAcademicResultId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchAcademicResults(selectedStudentid);\r\n          setAcademicResultsDrawerOpen(false);\r\n          setEditingAcademicResultId(null);\r\n        }}\r\n      />\r\n\r\n      <VoluntaryServiceDrawer\r\n        open={voluntaryServiceDrawerOpen}\r\n        onClose={() => {\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        recordId={editingVoluntaryServiceId}\r\n        onSave={() => {\r\n          if (selectedStudentid) fetchVoluntaryServices(selectedStudentid);\r\n          setVoluntaryServiceDrawerOpen(false);\r\n          setEditingVoluntaryServiceId(null);\r\n        }}\r\n      />\r\n\r\n      <PaymentDrawer\r\n        open={paymentDrawerOpen}\r\n        onClose={() => setPaymentDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingPaymentId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchPaymentsDetails(selectedStudentid);\r\n          }\r\n          setPaymentDrawerOpen(false);\r\n          setEditingPaymentId(null);\r\n        }}\r\n      />\r\n\r\n      <InterviewDrawer\r\n        open={interviewDrawerOpen}\r\n        onClose={() => setInterviewDrawerOpen(false)}\r\n        studentId={selectedStudentid}\r\n        recordId={editingInterviewId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchInterviewsDetails(selectedStudentid);\r\n          }\r\n          setInterviewDrawerOpen(false);\r\n          setEditingInterviewId(null);\r\n        }}\r\n      />\r\n\r\n      <TaskDetailsDrawer\r\n        open={tasksDrawerOpen}\r\n        onClose={() => {\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n        studentId={selectedStudentid}\r\n        taskId={editingTaskId}\r\n        onSave={() => {\r\n          if (selectedStudentid) {\r\n            fetchTasks(selectedStudentid);\r\n          }\r\n          setTasksDrawerOpen(false);\r\n          setEditingTaskId(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDetails;"],"names":["races","provinces","maritalStatus","yes_no","employmentStatus","highestEducation","semesters","financeType","religions","studentType","nationality","parentRelationship","API_BASE_URL","process","_ref","open","onClose","studentId","onSave","onDelete","isDarkMode","useContext","ThemeContext","selectedDate","setSelectedDate","useState","emailError","setEmailError","whatsappError","setWhatsappError","alternativeError","setAlternativeError","emergencyError","setEmergencyError","emergencyContactOption","setEmergencyContactOption","deleteConfirmationOpen","setDeleteConfirmationOpen","deleteAttachmentConfirmationOpen","setDeleteAttachmentConfirmationOpen","errorMessage","setErrorMessage","isLoading","setIsLoading","drawerWidth","useMediaQuery","user","JSON","parse","localStorage","getItem","isAdmin","user_type","relationshipTypes","formData","setFormData","student_name","student_surname","student_nationality","student_id_passport_number","student_type","student_religion","student_finance_type","student_whatsapp_number","student_alternative_number","student_email_address","student_highest_education","student_home_address","student_suburb","student_area_code","student_province","student_date_of_birth","student_race","student_marital_status","student_employment_status","student_job_title","student_company_of_employment","student_current_salary","student_number_of_siblings","student_siblings_bursary","student_willow_relationship","relation_type","relation_hr_contact","relation_branch","relation_name","relation_surname","relation_employee_code","relation_reference","student_emergency_contact_name","student_emergency_contact_number","student_emergency_contact_relationship","student_emergency_contact_address","student_status","student_status_comment","employment_status_attachment","employment_status_attachment_name","statusOptions","validateEmail","email","test","validateNumber","number","useEffect","async","response","fetch","ok","Error","statusText","data","json","dates","Date","prev","error","console","fetchStudentData","handleDateChange","newDate","formattedDate","format","handleChange","e","name","value","target","sanitizedValue","includes","replace","slice","prevState","handleFileChange","file","files","fileNameWithoutExtension","handleViewFile","window","handleDeleteAttachmentClick","handleDeleteAttachmentCancel","handleEmergencyContactChange","newValue","handleSave","userId","user_id","url","method","body","FormData","Object","keys","forEach","key","undefined","append","savedStudent","cleanStudent","handleDeleteCancel","filteredFinanceType","filter","type","_jsx","Drawer","anchor","children","_jsxs","Box","sx","width","height","display","flexDirection","backgroundColor","padding","borderBottom","Typography","variant","fontWeight","color","mt","flex","overflowY","justifyContent","alignItems","CircularProgress","Grid","container","spacing","map","index","renderField","fieldStyles","borderRadius","inputLabelProps","style","item","xs","Autocomplete","onChange","options","renderInput","params","TextField","label","InputLabelProps","labels","fullWidth","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","wrapperClassName","className","helperText","inputProps","maxLength","pattern","marginTop","disabled","multiline","rows","WebkitTextFillColor","Button","component","borderColor","hidden","_Fragment","onClick","startIcon","VisibilityIcon","DeleteIcon","toLowerCase","split","word","charAt","toUpperCase","join","Divider","borderTop","gap","size","CloseIcon","handleDeleteClick","SaveIcon","AddIcon","Dialog","DialogTitle","DialogContent","DialogActions","err","aboutMeId","then","res","initialData","student_details_portal_id","i","toString","padStart","p","question","id","isUpdate","dataToSend","headers","stringify","result","parentId","cellNumberError","setCellNumberError","validateCellNumber","parent_email_address","parent_cell_number","parent_relationship","parent_name","parent_surname","parent_employment_status","parent_industry","parent_highest_education","parent_salary","parent_grant","parent_other_income","numericValue","entries","_ref2","universityDetailsId","normalizedData","Institution_Name","Name_of_Course","Intake_Year","Semester","NQF_Level","Current_Year","Student_Number","previously_funded","previously_funded_amount","tuition","tuition_amount","accommodation","accommodation_fee","textbooks","textbooks_fee","travel","travel_fee","Total_University_Expense","Other_Bursary_Org_1","Other_Bursary_Org_1_Contact","Other_Bursary_Org_2","Other_Bursary_Org_2_Contact","Other_Bursary_Org_3","Other_Bursary_Org_3_Contact","Previous_Bursary_Org_1","Previous_Bursary_Org_1_Amount","Previous_Bursary_Org_1_Contact","Previous_Bursary_Org_2","Previous_Bursary_Org_2_Amount","Previous_Bursary_Org_2_Contact","Previous_Bursary_Org_3","Previous_Bursary_Org_3_Amount","Previous_Bursary_Org_3_Contact","Application_Process_Status","handleAutocompleteChange","newFormData","conditionalField","conditionalFields","find","field","select","amount","yesNoOptions","isConditionalSelect","some","isConditionalAmount","relatedSelect","attachmentId","Attachments_Name","attachments_name","Attachments_Description","attachments_description","Attachment","Student_Details_Portal_id","expenseDetailsId","Father_Monthly_Salary","Mother_Monthly_Salary","Spouse_Monthly_Salary","Applicant_Monthly_Salary","Rent_Income","Grants","Other_Income","Rent_Bond_Expense","Rates_Expense","Utilities_Expense","Groceries_Expense","Transport_Petrol_Expense","Telephone_Expense","Medical_Aid_Expense","Insurance_Expense","Other_Expense","total_income","total_expenses","father_monthly_salary","mother_monthly_salary","spouse_monthly_salary","applicant_monthly_salary","rent_income","grants","other_income","rent_bond_expense","rates_expense","utilities_expense","groceries_expense","transport_petrol_expense","telephone_expense","medical_aid_expense","insurance_expense","other_expense","Number","catch","totalIncome","reduce","total","parseFloat","totalExpenses","idx","char","InputProps","inputMode","toFixed","readOnly","updatedFormData","stringFormData","acc","savedData","assetLiabilityId","Gold_Silver","Cash_in_Bank","Investments","Liabilities","gold_silver","cash_in_bank","investments","liabilities","resultId","Results_Module","results_module","Results_Percentage","results_percentage","Results_Attachment","Results_Attachment_Name","results_attachment_name","recordId","Organisation","organisation","Contact_Person","contact_person","Contact_Person_Number","contact_person_number","Hours_Contributed","hours_contributed","Proof_of_Service","Service_Attachment_Name","service_attachment_name","createdBy","first_name","last_name","date","payments_date","Payments_Expense_Type","payments_expense_type","Payments_Vendor","payments_vendor","Payments_Expense_Amount","payments_expense_amount","Payments_Date","Payments_ET_Number","payments_et_number","Payments_Attachment_Name","payments_attachment_name","Proof_of_Payment","Payment_Created_By","payment_created_by","Interviewer_Name","interviewer_name","Year_of_Interview","year_of_interview","Interview_Q01","interview_q01","Interview_Q02","interview_q02","Interview_Q03","interview_q03","Interview_Q04","interview_q04","Interview_Q05","interview_q05","Interview_Q06","interview_q06","Interview_Q07","interview_q07","Interview_Q08","interview_q08","Interview_Q09","interview_q09","Interview_Q10","interview_q10","Interview_Q11","interview_q11","Interview_Q12","interview_q12","Interview_Q13","interview_q13","Interview_Q14","interview_q14","Interview_Q15","interview_q15","Interview_Q16","interview_q16","Interview_Q17","interview_q17","Interview_Q18","interview_q18","Interview_Q19","interview_q19","Interview_Q20","interview_q20","Interview_Q21","interview_q21","Interview_Q22","interview_q22","Interview_Q23","interview_q23","Interview_Q24","interview_q24","Interview_Created_By","interview_created_by","Date_Stamp","date_stamp","questionNumber","taskId","useMemo","isStudent","created_by","task_description","task_status","task_comment","taskStatusOptions","aboutMeQuestions","interviewQuestions","styles","StyleSheet","create","page","fontSize","fontFamily","lineHeight","header","marginBottom","paddingBottom","logo","objectFit","headerText","textAlign","headerTitle1","headerTitle2","fontStyle","reportTime","sectionTitle","studentDetailsRow","studentDetailsField","borderBottomWidth","borderBottomColor","borderBottomStyle","studentDetailsLabel","studentDetailsValue","table","borderStyle","borderWidth","tableRow","minHeight","tableCellLabel","borderRightWidth","borderRightColor","wordBreak","minWidth","overflow","tableCellValue","toSentenceCase","str","removePrefix","cleanLabel","cleanSection","startsWith","length","mapQuestion","section","questions","match","parseInt","StudentDetailsSection","k","v","push","View","Text","row","rowIdx","_ref3","RenderSection","_ref4","title","_ref5","_ref6","wrap","numberOfLines","RenderMultiple","_ref7","showNumbering","_ref8","val","_ref9","studentData","Document","Page","Image","src","toLocaleString","year","month","day","hour","minute","hour12","student_details","about_me","assets_liabilities","expense_details","interview","university_details","parents_details","attachments","payments","results","tasks","voluntary_service","StudentDetails","searchQuery","setSearchQuery","studentDetails","setStudentDetails","selectedStudent","setSelectedStudent","selectedStudentid","setSelectedStudentid","tabValue","setTabValue","drawerOpen","setDrawerOpen","aboutMeDrawerOpen","setAboutMeDrawerOpen","editingAboutMeId","setEditingAboutMeId","parentsDrawerOpen","setParentsDrawerOpen","editingParentId","setEditingParentId","universityDetailsDrawerOpen","setUniversityDetailsDrawerOpen","editingUniversityId","setEditingUniversityId","attachmentsDrawerOpen","setAttachmentsDrawerOpen","editingAttachmentId","setEditingAttachmentId","expenseDetailsDrawerOpen","setExpensesSummaryDrawerOpen","editingExpenseDetailsId","setEditingExpenseDetailsId","assetsLiabilitiesDrawerOpen","setAssetsLiabilitiesDrawerOpen","editingAssetLiabilityId","setEditingAssetLiabilityId","academicResultsDrawerOpen","setAcademicResultsDrawerOpen","editingAcademicResultId","setEditingAcademicResultId","voluntaryServiceDrawerOpen","setVoluntaryServiceDrawerOpen","editingVoluntaryServiceId","setEditingVoluntaryServiceId","paymentDrawerOpen","setPaymentDrawerOpen","editingPaymentId","setEditingPaymentId","interviewDrawerOpen","setInterviewDrawerOpen","editingInterviewId","setEditingInterviewId","tasksDrawerOpen","setTasksDrawerOpen","editingTaskId","setEditingTaskId","setStudentData","aboutMe","setAboutMe","parentsDetails","setParentsDetails","universityDetails","setUniversityDetails","setAttachments","expensesSummary","setExpensesSummary","assetsLiabilities","setAssetsLiabilities","academicResults","setAcademicResults","voluntaryServices","setVoluntaryServices","setPayments","interviews","setInterviews","setTasks","pageStyle","formatDate","dateString","fetchStudentDetails","useCallback","updatedStudent","Array","isArray","mounted","initializeData","responses","Promise","all","formatResponseData","updatedItem","endsWith","fetchAllData","handleDeleteStudent","remainingStudents","student","nextStudent","isStudentWithNoData","isUserWithData","isSelectedStudent","tabSections","splice","capitalizeWords","dataForSection","TabContent","sectionKey","renderRegion","isAboutMe","isParents","isUniversityDetails","isAttachments","isExpenses","isAssetsLiabilities","isAcademicResults","isVoluntaryServices","isPayments","isInterview","isTasks","border","marginLeft","Table","maxHeight","TableHead","TableRow","TableCell","whiteSpace","textOverflow","maxWidth","textTransform","TableBody","EditIcon","cursor","j","marginRight","sm","md","Paper","mb","placeholder","s","Card","boxShadow","CardContent","margin","setTimeout","blob","pdf","StudentPDFDocument","toBlob","URL","createObjectURL","a","document","createElement","href","firstName","lastName","download","click","revokeObjectURL","DownloadIcon","React","pb","m","overflowX","Tabs","handleTabChange","event","mr","Tab","sec","renderTabContent","DrawerForm","formattedStudent","existingIndex","findIndex","updatedDetails","AboutusDrawer","formattedData","fetchAboutMe","ParentsDrawer","fetchParentsDetails","UniversityDetailsDrawer","fetchUniversityDetails","AttachmentsDrawer","fetchAttachmentsDetails","ExpenseDetailsDrawer","fetchExpenseDetails","AssetsLiabilitiesDrawer","fetchAssetsLiabilities","AcademicResultsDrawer","fetchAcademicResults","VoluntaryServiceDrawer","fetchVoluntaryServices","PaymentDrawer","fetchPaymentsDetails","InterviewDrawer","fetchInterviewsDetails","TaskDetailsDrawer","fetchTasks"],"sourceRoot":""}