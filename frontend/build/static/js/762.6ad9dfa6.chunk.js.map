{"version":3,"file":"static/js/762.6ad9dfa6.chunk.js","mappings":"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","sources":["components/Breadcrumb.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Alert/alertClasses.js","../node_modules/@mui/material/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/Alert/Alert.js","pages/reports/ActivityReport.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Typography, Box } from \"@mui/material\";\r\nimport { ThemeContext } from '../config/ThemeContext'; // Import ThemeContext\r\n\r\nconst Breadcrumb = ({ title }) => {\r\n  // Move the useContext inside the component\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <Box sx={{ padding: \"12px\", backgroundColor: isDarkMode ? '#1e293b' : '#e1f5fe', borderRadius: \"8px\", marginBottom: \"12px\", border: '1px solid #ccc' }}>\r\n      <Typography variant=\"h6\" sx={{ color: isDarkMode ? 'white' : 'black', fontWeight: \"bold\" }}>\r\n        {title}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","'use client';\r\n\r\nimport * as React from 'react';\r\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\r\n\r\n/**\r\n * @ignore - internal component.\r\n *\r\n * Alias to `Clear`.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\r\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\r\n}), 'Close');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getAlertUtilityClass(slot) {\r\n  return generateUtilityClass('MuiAlert', slot);\r\n}\r\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\r\nexport default alertClasses;","'use client';\r\n\r\nimport * as React from 'react';\r\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\r\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\r\n}), 'SuccessOutlined');","'use client';\r\n\r\nimport * as React from 'react';\r\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\r\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\r\n}), 'ReportProblemOutlined');","'use client';\r\n\r\nimport * as React from 'react';\r\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\r\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\r\n}), 'ErrorOutline');","'use client';\r\n\r\nimport * as React from 'react';\r\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\r\n\r\n/**\r\n * @ignore - internal component.\r\n */\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\r\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\r\n}), 'InfoOutlined');","'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport { darken, lighten } from '@mui/system/colorManipulator';\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport useSlot from \"../utils/useSlot.js\";\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\r\nimport Paper from \"../Paper/index.js\";\r\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\r\nimport IconButton from \"../IconButton/index.js\";\r\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\r\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\r\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\r\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\r\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    variant,\r\n    color,\r\n    severity,\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\r\n    icon: ['icon'],\r\n    message: ['message'],\r\n    action: ['action']\r\n  };\r\n  return composeClasses(slots, getAlertUtilityClass, classes);\r\n};\r\nconst AlertRoot = styled(Paper, {\r\n  name: 'MuiAlert',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\r\n  }\r\n})(memoTheme(({\r\n  theme\r\n}) => {\r\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\r\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\r\n  return {\r\n    ...theme.typography.body2,\r\n    backgroundColor: 'transparent',\r\n    display: 'flex',\r\n    padding: '6px 16px',\r\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\r\n      props: {\r\n        colorSeverity: color,\r\n        variant: 'standard'\r\n      },\r\n      style: {\r\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\r\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\r\n        [`& .${alertClasses.icon}`]: theme.vars ? {\r\n          color: theme.vars.palette.Alert[`${color}IconColor`]\r\n        } : {\r\n          color: theme.palette[color].main\r\n        }\r\n      }\r\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\r\n      props: {\r\n        colorSeverity: color,\r\n        variant: 'outlined'\r\n      },\r\n      style: {\r\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\r\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\r\n        [`& .${alertClasses.icon}`]: theme.vars ? {\r\n          color: theme.vars.palette.Alert[`${color}IconColor`]\r\n        } : {\r\n          color: theme.palette[color].main\r\n        }\r\n      }\r\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\r\n      props: {\r\n        colorSeverity: color,\r\n        variant: 'filled'\r\n      },\r\n      style: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n        ...(theme.vars ? {\r\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\r\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\r\n        } : {\r\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\r\n          color: theme.palette.getContrastText(theme.palette[color].main)\r\n        })\r\n      }\r\n    }))]\r\n  };\r\n}));\r\nconst AlertIcon = styled('div', {\r\n  name: 'MuiAlert',\r\n  slot: 'Icon',\r\n  overridesResolver: (props, styles) => styles.icon\r\n})({\r\n  marginRight: 12,\r\n  padding: '7px 0',\r\n  display: 'flex',\r\n  fontSize: 22,\r\n  opacity: 0.9\r\n});\r\nconst AlertMessage = styled('div', {\r\n  name: 'MuiAlert',\r\n  slot: 'Message',\r\n  overridesResolver: (props, styles) => styles.message\r\n})({\r\n  padding: '8px 0',\r\n  minWidth: 0,\r\n  overflow: 'auto'\r\n});\r\nconst AlertAction = styled('div', {\r\n  name: 'MuiAlert',\r\n  slot: 'Action',\r\n  overridesResolver: (props, styles) => styles.action\r\n})({\r\n  display: 'flex',\r\n  alignItems: 'flex-start',\r\n  padding: '4px 0 0 16px',\r\n  marginLeft: 'auto',\r\n  marginRight: -8\r\n});\r\nconst defaultIconMapping = {\r\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\r\n    fontSize: \"inherit\"\r\n  }),\r\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\r\n    fontSize: \"inherit\"\r\n  }),\r\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\r\n    fontSize: \"inherit\"\r\n  }),\r\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\r\n    fontSize: \"inherit\"\r\n  })\r\n};\r\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiAlert'\r\n  });\r\n  const {\r\n    action,\r\n    children,\r\n    className,\r\n    closeText = 'Close',\r\n    color,\r\n    components = {},\r\n    componentsProps = {},\r\n    icon,\r\n    iconMapping = defaultIconMapping,\r\n    onClose,\r\n    role = 'alert',\r\n    severity = 'success',\r\n    slotProps = {},\r\n    slots = {},\r\n    variant = 'standard',\r\n    ...other\r\n  } = props;\r\n  const ownerState = {\r\n    ...props,\r\n    color,\r\n    severity,\r\n    variant,\r\n    colorSeverity: color || severity\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const externalForwardedProps = {\r\n    slots: {\r\n      closeButton: components.CloseButton,\r\n      closeIcon: components.CloseIcon,\r\n      ...slots\r\n    },\r\n    slotProps: {\r\n      ...componentsProps,\r\n      ...slotProps\r\n    }\r\n  };\r\n  const [RootSlot, rootSlotProps] = useSlot('root', {\r\n    ref,\r\n    shouldForwardComponentProp: true,\r\n    className: clsx(classes.root, className),\r\n    elementType: AlertRoot,\r\n    externalForwardedProps: {\r\n      ...externalForwardedProps,\r\n      ...other\r\n    },\r\n    ownerState,\r\n    additionalProps: {\r\n      role,\r\n      elevation: 0\r\n    }\r\n  });\r\n  const [IconSlot, iconSlotProps] = useSlot('icon', {\r\n    className: classes.icon,\r\n    elementType: AlertIcon,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  const [MessageSlot, messageSlotProps] = useSlot('message', {\r\n    className: classes.message,\r\n    elementType: AlertMessage,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\r\n    className: classes.action,\r\n    elementType: AlertAction,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\r\n    elementType: IconButton,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\r\n    elementType: CloseIcon,\r\n    externalForwardedProps,\r\n    ownerState\r\n  });\r\n  return /*#__PURE__*/_jsxs(RootSlot, {\r\n    ...rootSlotProps,\r\n    children: [icon !== false ? /*#__PURE__*/_jsx(IconSlot, {\r\n      ...iconSlotProps,\r\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\r\n    }) : null, /*#__PURE__*/_jsx(MessageSlot, {\r\n      ...messageSlotProps,\r\n      children: children\r\n    }), action != null ? /*#__PURE__*/_jsx(ActionSlot, {\r\n      ...actionSlotProps,\r\n      children: action\r\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(ActionSlot, {\r\n      ...actionSlotProps,\r\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\r\n        size: \"small\",\r\n        \"aria-label\": closeText,\r\n        title: closeText,\r\n        color: \"inherit\",\r\n        onClick: onClose,\r\n        ...closeButtonProps,\r\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\r\n          fontSize: \"small\",\r\n          ...closeIconProps\r\n        })\r\n      })\r\n    }) : null]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The action to display. It renders after the message, at the end of the alert.\r\n   */\r\n  action: PropTypes.node,\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Override the default label for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @default 'Close'\r\n   */\r\n  closeText: PropTypes.string,\r\n  /**\r\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * The components used for each slot inside.\r\n   *\r\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   *\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    CloseButton: PropTypes.elementType,\r\n    CloseIcon: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\r\n   *\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    closeButton: PropTypes.object,\r\n    closeIcon: PropTypes.object\r\n  }),\r\n  /**\r\n   * Override the icon displayed before the children.\r\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\r\n   * Set to `false` to remove the `icon`.\r\n   */\r\n  icon: PropTypes.node,\r\n  /**\r\n   * The component maps the `severity` prop to a range of different icons,\r\n   * for instance success to `<SuccessOutlined>`.\r\n   * If you wish to change this mapping, you can provide your own.\r\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\r\n   */\r\n  iconMapping: PropTypes.shape({\r\n    error: PropTypes.node,\r\n    info: PropTypes.node,\r\n    success: PropTypes.node,\r\n    warning: PropTypes.node\r\n  }),\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\r\n   * @param {React.SyntheticEvent} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * The ARIA role attribute of the element.\r\n   * @default 'alert'\r\n   */\r\n  role: PropTypes.string,\r\n  /**\r\n   * The severity of the alert. This defines the color and icon used.\r\n   * @default 'success'\r\n   */\r\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * The props used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    message: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    action: PropTypes.elementType,\r\n    closeButton: PropTypes.elementType,\r\n    closeIcon: PropTypes.elementType,\r\n    icon: PropTypes.elementType,\r\n    message: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * @default 'standard'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\r\n} : void 0;\r\nexport default Alert;","import Breadcrumb from \"../../components/Breadcrumb.js\";\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Box, CircularProgress, Alert } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { ThemeContext } from '../../config/ThemeContext.js';\r\nimport './GenericTable.css';\r\n\r\nfunction ActivityLogTable() {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [logs, setLogs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [columns, setColumns] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch activity logs when the component mounts\r\n  useEffect(() => {\r\n    const fetchActivityLogs = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('https://willowtonbursary.co.za/api/activity-log');\r\n        \r\n        if (response.data.length > 0) {\r\n          // Set columns based on the keys of the first log entry\r\n          setColumns(['username', 'email_address', 'act_type', 'act_date', 'act_time']);\r\n        }\r\n        \r\n        setLogs(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching activity logs:', err);\r\n        setError('Failed to fetch activity logs. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchActivityLogs();\r\n  }, []);\r\n\r\n  // Filter logs based on search term\r\n  const filteredLogs = logs.filter((log) =>\r\n    columns.some((column) => {\r\n      const value = log[column];\r\n      return value && typeof value === 'string' && value.toLowerCase().includes(searchTerm.toLowerCase());\r\n    })\r\n  );\r\n\r\n  // Convert string to sentence case or custom header names\r\n  const formatColumnName = (column) => {\r\n    switch (column) {\r\n      case 'act_type':\r\n        return 'Activity';\r\n      case 'act_date':\r\n        return 'Date';\r\n      case 'act_time':\r\n        return 'Time';\r\n      default:\r\n        return column\r\n          .replace(/_/g, ' ')\r\n          .replace(/\\b\\w/g, (char) => char.toUpperCase());\r\n    }\r\n  };\r\n\r\n  // Determine styles for activity type\r\n  const getActivityStyles = (activity) => {\r\n    if (activity === 'Login') {\r\n      return {\r\n        backgroundColor: '#22C55E', // Green\r\n        color: '#FFFFFF', // White text\r\n        padding: '4px 8px',\r\n        borderRadius: '4px',\r\n        display: 'inline-block',\r\n      };\r\n    } else if (activity === 'Logout') {\r\n      return {\r\n        backgroundColor: '#EF4444', // Red\r\n        color: '#FFFFFF', // White text\r\n        padding: '4px 8px',\r\n        borderRadius: '4px',\r\n        display: 'inline-block',\r\n      };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC',\r\n        minHeight: '100vh',\r\n        padding: '20px',\r\n      }}\r\n    >\r\n      <Breadcrumb title=\"Activity Logs\" />\r\n\r\n      {/* Generic Search Input */}\r\n      <div className=\"generic-search-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"generic-search-input\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>      \r\n\r\n      {/* Loading State */}\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', padding: '20px' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n\r\n      {/* Error State */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ marginBottom: '20px' }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Table */}\r\n      {!loading && !error && (\r\n        <div className=\"generic-table-container\" style={{ overflowX: 'auto' }}>\r\n          <table\r\n            className=\"generic-table\"\r\n            style={{\r\n              backgroundColor: isDarkMode ? '#1E293B' : '#FFFFFF',\r\n              width: '100%',\r\n              borderCollapse: 'collapse',\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                {columns.map((column) => (\r\n                  <th\r\n                    key={column}\r\n                    style={{\r\n                      color: isDarkMode ? '#FFFFFF' : '#1E293B',\r\n                      padding: '12px',\r\n                      borderBottom: isDarkMode ? '1px solid #4B5563' : '1px solid #E2E8F0',\r\n                      textAlign: 'left',\r\n                    }}\r\n                  >\r\n                    {formatColumnName(column)}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredLogs.length > 0 ? (\r\n                filteredLogs.map((log, index) => (\r\n                  <tr\r\n                    key={`${log.username}-${log.act_date}-${index}`}\r\n                    style={{ borderBottom: isDarkMode ? '1px solid #4B5563' : '1px solid #E2E8F0' }}\r\n                  >\r\n                    {columns.map((column) => (\r\n                      <td\r\n                        key={column}\r\n                        style={{\r\n                          color: isDarkMode ? '#FFFFFF' : '#1E293B',\r\n                          padding: '12px',\r\n                        }}\r\n                      >\r\n                        {column === 'act_type' ? (\r\n                          <span style={getActivityStyles(log[column])}>\r\n                            {log[column] || 'N/A'}\r\n                          </span>\r\n                        ) : (\r\n                          log[column] || 'N/A'\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td\r\n                    colSpan={columns.length}\r\n                    style={{\r\n                      textAlign: 'center',\r\n                      padding: '20px',\r\n                      color: isDarkMode ? '#9CA3AF' : '#6B7280',\r\n                    }}\r\n                  >\r\n                    No matching records found\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ActivityLogTable;"],"names":["_ref","title","isDarkMode","useContext","ThemeContext","_jsx","Box","sx","padding","backgroundColor","borderRadius","marginBottom","border","children","Typography","variant","color","fontWeight","createSvgIcon","d","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","AlertRoot","styled","Paper","name","overridesResolver","props","styles","ownerState","root","capitalize","severity","memoTheme","theme","getColor","palette","mode","darken","lighten","getBackgroundColor","typography","body2","display","variants","Object","entries","filter","createSimplePaletteValueFilter","map","_ref2","colorSeverity","style","vars","Alert","light","alertClasses","icon","main","_ref3","_ref4","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","message","minWidth","overflow","AlertAction","action","alignItems","marginLeft","defaultIconMapping","success","SuccessOutlinedIcon","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","React","inProps","ref","useDefaultProps","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","slots","other","classes","composeClasses","useUtilityClasses","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseIcon","RootSlot","rootSlotProps","useSlot","shouldForwardComponentProp","clsx","elementType","additionalProps","elevation","IconSlot","iconSlotProps","MessageSlot","messageSlotProps","ActionSlot","actionSlotProps","CloseButtonSlot","closeButtonProps","IconButton","CloseIconSlot","closeIconProps","_jsxs","size","onClick","logs","setLogs","useState","searchTerm","setSearchTerm","columns","setColumns","loading","setLoading","setError","useEffect","async","response","axios","get","data","length","err","console","fetchActivityLogs","filteredLogs","log","some","column","value","toLowerCase","includes","formatColumnName","replace","char","toUpperCase","minHeight","Breadcrumb","type","placeholder","onChange","e","target","justifyContent","CircularProgress","overflowX","width","borderCollapse","borderBottom","textAlign","index","activity","username","act_date","colSpan"],"sourceRoot":""}