{"version":3,"file":"static/js/914.f49bf452.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroupContext.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroupButtonContext.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../node_modules/@mui/icons-material/esm/PersonAdd.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","pages/logreg.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getInputAdornmentUtilityClass(slot) {\r\n  return generateUtilityClass('MuiInputAdornment', slot);\r\n}\r\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\r\nexport default inputAdornmentClasses;","'use client';\r\n\r\nvar _span;\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport Typography from \"../Typography/index.js\";\r\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\r\nimport useFormControl from \"../FormControl/useFormControl.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    ownerState\r\n  } = props;\r\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    disablePointerEvents,\r\n    hiddenLabel,\r\n    position,\r\n    size,\r\n    variant\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\r\n  };\r\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\r\n};\r\nconst InputAdornmentRoot = styled('div', {\r\n  name: 'MuiInputAdornment',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  display: 'flex',\r\n  maxHeight: '2em',\r\n  alignItems: 'center',\r\n  whiteSpace: 'nowrap',\r\n  color: (theme.vars || theme).palette.action.active,\r\n  variants: [{\r\n    props: {\r\n      variant: 'filled'\r\n    },\r\n    style: {\r\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\r\n        marginTop: 16\r\n      }\r\n    }\r\n  }, {\r\n    props: {\r\n      position: 'start'\r\n    },\r\n    style: {\r\n      marginRight: 8\r\n    }\r\n  }, {\r\n    props: {\r\n      position: 'end'\r\n    },\r\n    style: {\r\n      marginLeft: 8\r\n    }\r\n  }, {\r\n    props: {\r\n      disablePointerEvents: true\r\n    },\r\n    style: {\r\n      pointerEvents: 'none'\r\n    }\r\n  }]\r\n})));\r\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiInputAdornment'\r\n  });\r\n  const {\r\n    children,\r\n    className,\r\n    component = 'div',\r\n    disablePointerEvents = false,\r\n    disableTypography = false,\r\n    position,\r\n    variant: variantProp,\r\n    ...other\r\n  } = props;\r\n  const muiFormControl = useFormControl() || {};\r\n  let variant = variantProp;\r\n  if (variantProp && muiFormControl.variant) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (variantProp === muiFormControl.variant) {\r\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\r\n      }\r\n    }\r\n  }\r\n  if (muiFormControl && !variant) {\r\n    variant = muiFormControl.variant;\r\n  }\r\n  const ownerState = {\r\n    ...props,\r\n    hiddenLabel: muiFormControl.hiddenLabel,\r\n    size: muiFormControl.size,\r\n    disablePointerEvents,\r\n    position,\r\n    variant\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\r\n    value: null,\r\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\r\n      as: component,\r\n      ownerState: ownerState,\r\n      className: clsx(classes.root, className),\r\n      ref: ref,\r\n      ...other,\r\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\r\n        color: \"textSecondary\",\r\n        children: children\r\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\r\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\r\n          className: \"notranslate\",\r\n          \"aria-hidden\": true,\r\n          children: \"\\u200B\"\r\n        }))) : null, children]\r\n      })\r\n    })\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component, normally an `IconButton` or string.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n  /**\r\n   * Disable pointer events on the root.\r\n   * This allows for the content of the adornment to focus the `input` on click.\r\n   * @default false\r\n   */\r\n  disablePointerEvents: PropTypes.bool,\r\n  /**\r\n   * If children is a string then disable wrapping in a Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n  /**\r\n   * The position this adornment should appear relative to the `Input`.\r\n   */\r\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The variant to use.\r\n   * Note: If you are using the `TextField` component or the `FormControl` component\r\n   * you do not have to set this manually.\r\n   */\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\r\n} : void 0;\r\nexport default InputAdornment;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getToggleButtonGroupUtilityClass(slot) {\r\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\r\n}\r\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'horizontal', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical', 'fullWidth', 'firstButton', 'lastButton', 'middleButton']);\r\nexport default toggleButtonGroupClasses;","'use client';\r\n\r\nimport * as React from 'react';\r\n/**\r\n * @ignore - internal component.\r\n */\r\nconst ToggleButtonGroupContext = /*#__PURE__*/React.createContext({});\r\nif (process.env.NODE_ENV !== 'production') {\r\n  ToggleButtonGroupContext.displayName = 'ToggleButtonGroupContext';\r\n}\r\nexport default ToggleButtonGroupContext;","'use client';\r\n\r\nimport * as React from 'react';\r\n/**\r\n * @ignore - internal component.\r\n */\r\nconst ToggleButtonGroupButtonContext = /*#__PURE__*/React.createContext(undefined);\r\nif (process.env.NODE_ENV !== 'production') {\r\n  ToggleButtonGroupButtonContext.displayName = 'ToggleButtonGroupButtonContext';\r\n}\r\nexport default ToggleButtonGroupButtonContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getToggleButtonUtilityClass(slot) {\r\n  return generateUtilityClass('MuiToggleButton', slot);\r\n}\r\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'fullWidth']);\r\nexport default toggleButtonClasses;","'use client';\r\n\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport getValidReactChildren from '@mui/utils/getValidReactChildren';\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from \"./toggleButtonGroupClasses.js\";\r\nimport ToggleButtonGroupContext from \"./ToggleButtonGroupContext.js\";\r\nimport ToggleButtonGroupButtonContext from \"./ToggleButtonGroupButtonContext.js\";\r\nimport toggleButtonClasses from \"../ToggleButton/toggleButtonClasses.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    orientation,\r\n    fullWidth,\r\n    disabled\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', orientation, fullWidth && 'fullWidth'],\r\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled'],\r\n    firstButton: ['firstButton'],\r\n    lastButton: ['lastButton'],\r\n    middleButton: ['middleButton']\r\n  };\r\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\r\n};\r\nconst ToggleButtonGroupRoot = styled('div', {\r\n  name: 'MuiToggleButtonGroup',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [{\r\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\r\n    }, {\r\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\r\n    }, {\r\n      [`& .${toggleButtonGroupClasses.firstButton}`]: styles.firstButton\r\n    }, {\r\n      [`& .${toggleButtonGroupClasses.lastButton}`]: styles.lastButton\r\n    }, {\r\n      [`& .${toggleButtonGroupClasses.middleButton}`]: styles.middleButton\r\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\r\n  }\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  display: 'inline-flex',\r\n  borderRadius: (theme.vars || theme).shape.borderRadius,\r\n  variants: [{\r\n    props: {\r\n      orientation: 'vertical'\r\n    },\r\n    style: {\r\n      flexDirection: 'column',\r\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\r\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\r\n          borderTop: 0,\r\n          marginTop: 0\r\n        }\r\n      },\r\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\r\n        borderBottomLeftRadius: 0,\r\n        borderBottomRightRadius: 0\r\n      },\r\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\r\n        marginTop: -1,\r\n        borderTop: '1px solid transparent',\r\n        borderTopLeftRadius: 0,\r\n        borderTopRightRadius: 0\r\n      },\r\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\r\n        borderTop: '1px solid transparent'\r\n      }\r\n    }\r\n  }, {\r\n    props: {\r\n      fullWidth: true\r\n    },\r\n    style: {\r\n      width: '100%'\r\n    }\r\n  }, {\r\n    props: {\r\n      orientation: 'horizontal'\r\n    },\r\n    style: {\r\n      [`& .${toggleButtonGroupClasses.grouped}`]: {\r\n        [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\r\n          borderLeft: 0,\r\n          marginLeft: 0\r\n        }\r\n      },\r\n      [`& .${toggleButtonGroupClasses.firstButton},& .${toggleButtonGroupClasses.middleButton}`]: {\r\n        borderTopRightRadius: 0,\r\n        borderBottomRightRadius: 0\r\n      },\r\n      [`& .${toggleButtonGroupClasses.lastButton},& .${toggleButtonGroupClasses.middleButton}`]: {\r\n        marginLeft: -1,\r\n        borderLeft: '1px solid transparent',\r\n        borderTopLeftRadius: 0,\r\n        borderBottomLeftRadius: 0\r\n      },\r\n      [`& .${toggleButtonGroupClasses.lastButton}.${toggleButtonClasses.disabled},& .${toggleButtonGroupClasses.middleButton}.${toggleButtonClasses.disabled}`]: {\r\n        borderLeft: '1px solid transparent'\r\n      }\r\n    }\r\n  }]\r\n})));\r\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiToggleButtonGroup'\r\n  });\r\n  const {\r\n    children,\r\n    className,\r\n    color = 'standard',\r\n    disabled = false,\r\n    exclusive = false,\r\n    fullWidth = false,\r\n    onChange,\r\n    orientation = 'horizontal',\r\n    size = 'medium',\r\n    value,\r\n    ...other\r\n  } = props;\r\n  const ownerState = {\r\n    ...props,\r\n    disabled,\r\n    fullWidth,\r\n    orientation,\r\n    size\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const handleChange = React.useCallback((event, buttonValue) => {\r\n    if (!onChange) {\r\n      return;\r\n    }\r\n    const index = value && value.indexOf(buttonValue);\r\n    let newValue;\r\n    if (value && index >= 0) {\r\n      newValue = value.slice();\r\n      newValue.splice(index, 1);\r\n    } else {\r\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\r\n    }\r\n    onChange(event, newValue);\r\n  }, [onChange, value]);\r\n  const handleExclusiveChange = React.useCallback((event, buttonValue) => {\r\n    if (!onChange) {\r\n      return;\r\n    }\r\n    onChange(event, value === buttonValue ? null : buttonValue);\r\n  }, [onChange, value]);\r\n  const context = React.useMemo(() => ({\r\n    className: classes.grouped,\r\n    onChange: exclusive ? handleExclusiveChange : handleChange,\r\n    value,\r\n    size,\r\n    fullWidth,\r\n    color,\r\n    disabled\r\n  }), [classes.grouped, exclusive, handleExclusiveChange, handleChange, value, size, fullWidth, color, disabled]);\r\n  const validChildren = getValidReactChildren(children);\r\n  const childrenCount = validChildren.length;\r\n  const getButtonPositionClassName = index => {\r\n    const isFirstButton = index === 0;\r\n    const isLastButton = index === childrenCount - 1;\r\n    if (isFirstButton && isLastButton) {\r\n      return '';\r\n    }\r\n    if (isFirstButton) {\r\n      return classes.firstButton;\r\n    }\r\n    if (isLastButton) {\r\n      return classes.lastButton;\r\n    }\r\n    return classes.middleButton;\r\n  };\r\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, {\r\n    role: \"group\",\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    ...other,\r\n    children: /*#__PURE__*/_jsx(ToggleButtonGroupContext.Provider, {\r\n      value: context,\r\n      children: validChildren.map((child, index) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (isFragment(child)) {\r\n            console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n          }\r\n        }\r\n        return /*#__PURE__*/_jsx(ToggleButtonGroupButtonContext.Provider, {\r\n          value: getButtonPositionClassName(index),\r\n          children: child\r\n        }, index);\r\n      })\r\n    })\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the button when it is selected.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\r\n   * @default 'standard'\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * If `true`, only allow one of the child ToggleButton values to be selected.\r\n   * @default false\r\n   */\r\n  exclusive: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button group will take up the full width of its container.\r\n   * @default false\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\r\n   * @param {any} value of the selected buttons. When `exclusive` is true\r\n   * this is a single value; when false an array of selected values. If no value\r\n   * is selected and `exclusive` is true the value is null; when false an empty array.\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * The component orientation (layout flow direction).\r\n   * @default 'horizontal'\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  /**\r\n   * The size of the component.\r\n   * @default 'medium'\r\n   */\r\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The currently selected value within the group or an array of selected\r\n   * values when `exclusive` is false.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default ToggleButtonGroup;","import * as React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport default function getValidReactChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}","// Determine if the toggle button value matches, or is contained in, the\r\n// candidate group value.\r\nexport default function isValueSelected(value, candidate) {\r\n  if (candidate === undefined || value === undefined) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(candidate)) {\r\n    return candidate.includes(value);\r\n  }\r\n  return value === candidate;\r\n}","'use client';\r\n\r\n// @inheritedComponent ButtonBase\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport resolveProps from '@mui/utils/resolveProps';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport { alpha } from '@mui/system/colorManipulator';\r\nimport ButtonBase from \"../ButtonBase/index.js\";\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport { styled } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from \"./toggleButtonClasses.js\";\r\nimport ToggleButtonGroupContext from \"../ToggleButtonGroup/ToggleButtonGroupContext.js\";\r\nimport ToggleButtonGroupButtonContext from \"../ToggleButtonGroup/ToggleButtonGroupButtonContext.js\";\r\nimport isValueSelected from \"../ToggleButtonGroup/isValueSelected.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    fullWidth,\r\n    selected,\r\n    disabled,\r\n    size,\r\n    color\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\r\n  };\r\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\r\n};\r\nconst ToggleButtonRoot = styled(ButtonBase, {\r\n  name: 'MuiToggleButton',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\r\n  }\r\n})(memoTheme(({\r\n  theme\r\n}) => ({\r\n  ...theme.typography.button,\r\n  borderRadius: (theme.vars || theme).shape.borderRadius,\r\n  padding: 11,\r\n  border: `1px solid ${(theme.vars || theme).palette.divider}`,\r\n  color: (theme.vars || theme).palette.action.active,\r\n  [`&.${toggleButtonClasses.disabled}`]: {\r\n    color: (theme.vars || theme).palette.action.disabled,\r\n    border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\r\n  },\r\n  '&:hover': {\r\n    textDecoration: 'none',\r\n    // Reset on mouse devices\r\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\r\n    '@media (hover: none)': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  },\r\n  variants: [{\r\n    props: {\r\n      color: 'standard'\r\n    },\r\n    style: {\r\n      [`&.${toggleButtonClasses.selected}`]: {\r\n        color: (theme.vars || theme).palette.text.primary,\r\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity),\r\n        '&:hover': {\r\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\r\n    props: {\r\n      color\r\n    },\r\n    style: {\r\n      [`&.${toggleButtonClasses.selected}`]: {\r\n        color: (theme.vars || theme).palette[color].main,\r\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity),\r\n        '&:hover': {\r\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\r\n          // Reset on touch devices, it doesn't add specificity\r\n          '@media (hover: none)': {\r\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette[color].main, theme.palette.action.selectedOpacity)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  })), {\r\n    props: {\r\n      fullWidth: true\r\n    },\r\n    style: {\r\n      width: '100%'\r\n    }\r\n  }, {\r\n    props: {\r\n      size: 'small'\r\n    },\r\n    style: {\r\n      padding: 7,\r\n      fontSize: theme.typography.pxToRem(13)\r\n    }\r\n  }, {\r\n    props: {\r\n      size: 'large'\r\n    },\r\n    style: {\r\n      padding: 15,\r\n      fontSize: theme.typography.pxToRem(15)\r\n    }\r\n  }]\r\n})));\r\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\r\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\r\n  const {\r\n    value: contextValue,\r\n    ...contextProps\r\n  } = React.useContext(ToggleButtonGroupContext);\r\n  const toggleButtonGroupButtonContextPositionClassName = React.useContext(ToggleButtonGroupButtonContext);\r\n  const resolvedProps = resolveProps({\r\n    ...contextProps,\r\n    selected: isValueSelected(inProps.value, contextValue)\r\n  }, inProps);\r\n  const props = useDefaultProps({\r\n    props: resolvedProps,\r\n    name: 'MuiToggleButton'\r\n  });\r\n  const {\r\n    children,\r\n    className,\r\n    color = 'standard',\r\n    disabled = false,\r\n    disableFocusRipple = false,\r\n    fullWidth = false,\r\n    onChange,\r\n    onClick,\r\n    selected,\r\n    size = 'medium',\r\n    value,\r\n    ...other\r\n  } = props;\r\n  const ownerState = {\r\n    ...props,\r\n    color,\r\n    disabled,\r\n    disableFocusRipple,\r\n    fullWidth,\r\n    size\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  const handleChange = event => {\r\n    if (onClick) {\r\n      onClick(event, value);\r\n      if (event.defaultPrevented) {\r\n        return;\r\n      }\r\n    }\r\n    if (onChange) {\r\n      onChange(event, value);\r\n    }\r\n  };\r\n  const positionClassName = toggleButtonGroupButtonContextPositionClassName || '';\r\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, {\r\n    className: clsx(contextProps.className, classes.root, className, positionClassName),\r\n    disabled: disabled,\r\n    focusRipple: !disableFocusRipple,\r\n    ref: ref,\r\n    onClick: handleChange,\r\n    onChange: onChange,\r\n    value: value,\r\n    ownerState: ownerState,\r\n    \"aria-pressed\": selected,\r\n    ...other,\r\n    children: children\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the button when it is in an active state.\r\n   * It supports both default and custom theme colors, which can be added as shown in the\r\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\r\n   * @default 'standard'\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * If `true`, the  keyboard focus ripple is disabled.\r\n   * @default false\r\n   */\r\n  disableFocusRipple: PropTypes.bool,\r\n  /**\r\n   * If `true`, the ripple effect is disabled.\r\n   *\r\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\r\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\r\n   * @default false\r\n   */\r\n  disableRipple: PropTypes.bool,\r\n  /**\r\n   * If `true`, the button will take up the full width of its container.\r\n   * @default false\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n  /**\r\n   * Callback fired when the state changes.\r\n   *\r\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\r\n   * @param {any} value of the selected button.\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * Callback fired when the button is clicked.\r\n   *\r\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\r\n   * @param {any} value of the selected button.\r\n   */\r\n  onClick: PropTypes.func,\r\n  /**\r\n   * If `true`, the button is rendered in an active state.\r\n   */\r\n  selected: PropTypes.bool,\r\n  /**\r\n   * The size of the component.\r\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\r\n   * @default 'medium'\r\n   */\r\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The value to associate with the button when selected in a\r\n   * ToggleButtonGroup.\r\n   */\r\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\r\n} : void 0;\r\nexport default ToggleButton;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","import React, { useState } from \"react\";\r\nimport { Box, Button, TextField, Typography, ToggleButtonGroup, ToggleButton, IconButton, InputAdornment, Dialog, DialogActions, DialogTitle, DialogContent, Link, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { AccountCircle, Lock, PersonAdd, Email, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport axios from \"axios\";\r\nimport footerImage from '../images/footer.png';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Whitelist of known valid email domains\r\nconst validDomains = [\r\n  \"gmail.com\",\r\n  \"yahoo.com\",\r\n  \"outlook.com\",\r\n  \"hotmail.com\",\r\n  \"aol.com\",\r\n  \"icloud.com\",\r\n  // Add more domains as needed\r\n];\r\n\r\nconst LoginSignup = () => {\r\n  const [authMode, setAuthMode] = useState(\"login\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email_address: \"\",\r\n    password: \"\",\r\n    user_type: \"student\",\r\n  });\r\n  const [isTermsAccepted, setIsTermsAccepted] = useState(false);\r\n  // Define font sizes as variables\r\n  const fontSizes = {\r\n    h4: '2.5rem',\r\n    body1: '1.2rem',\r\n    h6: '1.2rem',\r\n    listItemText: '1.1rem',\r\n    caption: '1rem',\r\n  };\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [openForgotPassword, setOpenForgotPassword] = useState(false);\r\n  const [forgotPasswordEmail, setForgotPasswordEmail] = useState(\"\");\r\n  const [forgotPasswordError, setForgotPasswordError] = useState(\"\");\r\n  const [forgotPasswordSuccess, setForgotPasswordSuccess] = useState(\"\");\r\n\r\n  // Basic email format validation\r\n  const validateEmailFormat = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Check if email domain exists via DNS MX record lookup\r\n  const checkEmailDomainExists = async (email) => {\r\n    const domain = email.split(\"@\")[1];\r\n    if (validDomains.includes(domain)) {\r\n      console.log(`Skipping DNS check for whitelisted domain: ${domain}`);\r\n      return true; // Bypass DNS check for known domains\r\n    }\r\n    try {\r\n      const response = await fetch(`https://dns.google/resolve?name=${domain}&type=MX`);\r\n      const data = await response.json();\r\n      console.log(`DNS Response for ${domain}:`, data); // Debug logging\r\n      return data?.Answer && data.Answer.length > 0;\r\n    } catch (error) {\r\n      console.error(`DNS Lookup Error for ${domain}:`, error);\r\n      return false; // Fallback to false on error\r\n    }\r\n  };\r\n\r\n  const handleAuthToggle = (_, newAuthMode) => {\r\n    if (newAuthMode !== null) setAuthMode(newAuthMode);\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword((prevState) => !prevState);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleTermsChange = (e) => {\r\n    setIsTermsAccepted(e.target.checked);\r\n  };\r\n\r\n  const handleForgotPasswordChange = (e) => {\r\n    setForgotPasswordEmail(e.target.value);\r\n    setForgotPasswordError(\"\");\r\n  };\r\n\r\n  const handleForgotPasswordSubmit = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/users`);\r\n      const users = response.data;\r\n      const userExists = users.some(user => user.email_address === forgotPasswordEmail);\r\n\r\n      if (!userExists) {\r\n        setForgotPasswordError(\"Email does not exist.\");\r\n        setForgotPasswordSuccess(\"\");\r\n      } else {\r\n        setForgotPasswordSuccess(\"Password reset email has been sent.\");\r\n        setForgotPasswordError(\"\");\r\n        setTimeout(() => setOpenForgotPassword(false), 3000);\r\n      }\r\n    } catch (error) {\r\n      setForgotPasswordError(error.response?.data?.msg);\r\n    }\r\n  };\r\n\r\n  const logActivity = async (userId, activityType) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/activity-log/insert`, {\r\n        user_id: userId,\r\n        activity_type: activityType,\r\n      });\r\n      console.log(`${activityType} activity logged for user ${userId}`);\r\n    } catch (err) {\r\n      console.error(\"Error logging activity:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors({ email: \"\", password: \"\" });\r\n\r\n    let formValid = true;\r\n    const newErrors = { email: \"\", password: \"\" };\r\n\r\n    if (authMode === \"signup\") {\r\n      if (!formData.email_address) {\r\n        newErrors.email = \"Email is required\";\r\n        formValid = false;\r\n      } else if (!validateEmailFormat(formData.email_address)) {\r\n        newErrors.email = \"Invalid email format\";\r\n        formValid = false;\r\n      } else {\r\n        const domainExists = await checkEmailDomainExists(formData.email_address);\r\n        if (!domainExists) {\r\n          newErrors.email = \"Email domain does not exist. Please enter a valid email.\";\r\n          formValid = false;\r\n        }\r\n      }\r\n\r\n      if (formData.password.length < 8) {\r\n        newErrors.password = \"Password must be at least 8 characters\";\r\n        formValid = false;\r\n      }\r\n\r\n      if (!isTermsAccepted) {\r\n        newErrors.terms = \"You must agree to the Terms & Conditions and POPIA consent.\";\r\n        formValid = false;\r\n      }\r\n    }\r\n\r\n    if (!formValid) {\r\n      setErrors(newErrors);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      let response;\r\n      if (authMode === \"login\") {\r\n        response = await axios.post(`${API_BASE_URL}/login`, {\r\n          email_address: formData.email_address,\r\n          password: formData.password,\r\n        });\r\n\r\n        if (response.data.msg === \"User not found\") {\r\n          setErrors({\r\n            email: \"User does not exist\",\r\n            password: \"\",\r\n          });\r\n          return;\r\n        } else if (response.data.msg === \"Incorrect password\") {\r\n          setErrors({\r\n            email: \"\",\r\n            password: \"Incorrect password. Please try again.\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        localStorage.setItem(\"token\", response.data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n\r\n        await logActivity(response.data.user.user_id, \"login\");\r\n\r\n        if (response.data.user.user_type === 'student') {\r\n          window.location.href = \"/student-details\";\r\n        } else if (response.data.user.user_type === 'admin') {\r\n          window.location.href = \"/dashboard\";\r\n        }\r\n      } else {\r\n        response = await axios.post(`${API_BASE_URL}/users`, formData);\r\n\r\n        const loginResponse = await axios.post(`${API_BASE_URL}/login`, {\r\n          email_address: formData.email_address,\r\n          password: formData.password,\r\n        });\r\n\r\n        localStorage.setItem(\"token\", loginResponse.data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(loginResponse.data.user));\r\n\r\n        await logActivity(loginResponse.data.user.user_id, \"login\");\r\n\r\n        if (loginResponse.data.user.user_type === 'student') {\r\n          window.location.href = \"/student-details\";\r\n        } else if (loginResponse.data.user.user_type === 'admin') {\r\n          window.location.href = \"/dashboard\";\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting form\", error);\r\n      const msg = error.response?.data?.msg?.toLowerCase();\r\n\r\n      if (msg?.includes(\"password\")) {\r\n        setErrors({ email: \"\", password: error.response.data.msg });\r\n      } else if (msg?.includes(\"email\") || msg?.includes(\"user\")) {\r\n        setErrors({ email: error.response.data.msg, password: \"\" });\r\n      } else {\r\n        setErrors({ email: \"\", password: \"\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"space-between\"\r\n      minHeight=\"100vh\"\r\n      mt={5}\r\n      bgcolor=\"#FFB612\"\r\n      position=\"relative\"\r\n    >\r\n      <ToggleButtonGroup\r\n        value={authMode}\r\n        exclusive\r\n        onChange={handleAuthToggle}\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <ToggleButton value=\"login\" sx={{ fontFamily: \"Sansation Light\", fontSize: { xs: '0.8rem', sm: '0.8rem', md: '1rem' } }}>\r\n          <AccountCircle sx={{ mr: 1 }} /> Login\r\n        </ToggleButton>\r\n        <ToggleButton value=\"signup\" sx={{ fontFamily: \"Sansation Light\", fontSize: { xs: '0.8rem', sm: '0.8rem', md: '1rem' } }}>\r\n          <PersonAdd sx={{ mr: 1 }} /> Register\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        mb={4}\r\n        sx={{\r\n          backgroundColor: '#FFB612',\r\n          width: '90%',\r\n          maxWidth: '700px',\r\n          height: 'auto',\r\n          borderRadius: 2,\r\n          position: \"relative\",\r\n          padding: '20px',\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit}>\r\n          {authMode === \"login\" ? (\r\n            <>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Sansation Light\", textAlign: 'center', fontSize: { xs: '1.2rem', sm: '1.5rem', md: '1.8rem' }, color: 'black', mb: 3 }}>\r\n                SET SOME GOALS\r\n              </Typography>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Sansation Light\", textAlign: 'center', fontSize: { xs: '1.2rem', sm: '1.5rem', md: '1.8rem' }, color: 'black', mb: 3 }}>\r\n                THEN DEMOLISH THEM\r\n              </Typography>\r\n\r\n              <Box width=\"100%\" textAlign=\"center\" maxWidth=\"400px\">\r\n                <TextField\r\n                  name=\"email_address\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={formData.email_address}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Email Address\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 2, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <Email sx={{ mr: 1 }} />,\r\n                  }}\r\n                  error={!!errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n                <TextField\r\n                  name=\"password\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Password\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 3, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <Lock sx={{ mr: 1 }} />,\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton onClick={togglePasswordVisibility}>\r\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n                <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ backgroundColor: 'black', fontFamily: \"Sansation Light\", mt: 1, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}>\r\n                  LOGIN\r\n                </Button>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ cursor: 'pointer', fontFamily: \"Sansation Light\", mt: 2, color: 'black', fontWeight: 'bold', fontSize: { xs: '0.8rem', sm: '0.8rem', md: '0.8rem' } }}\r\n                  onClick={() => setOpenForgotPassword(true)}\r\n                >\r\n                  FORGOT PASSWORD?\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"h6\" mb={2} sx={{ fontFamily: \"Sansation Light\", textAlign: 'center', fontSize: { xs: '1.2rem', sm: '1.5rem', md: '1.8rem' }, color: 'black' }}>\r\n                REGISTER\r\n              </Typography>\r\n\r\n              <Box width=\"100%\" textAlign=\"center\" maxWidth=\"400px\">\r\n                <TextField\r\n                  name=\"first_name\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={formData.first_name}\r\n                  onChange={handleChange}\r\n                  placeholder=\"First Name\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 2, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <AccountCircle sx={{ mr: 1 }} />,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  name=\"last_name\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={formData.last_name}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Last Name\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 2, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <AccountCircle sx={{ mr: 1 }} />,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  name=\"email_address\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  value={formData.email_address}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Email Address\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 2, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <Email sx={{ mr: 1 }} />,\r\n                  }}\r\n                  error={!!errors.email}\r\n                  helperText={errors.email}\r\n                />\r\n                <TextField\r\n                  name=\"password\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Password\"\r\n                  variant=\"outlined\"\r\n                  sx={{ fontFamily: \"Sansation Light\", mb: 3, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}\r\n                  InputProps={{\r\n                    startAdornment: <Lock sx={{ mr: 1 }} />,\r\n                  }}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password}\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={isTermsAccepted}\r\n                      onChange={handleTermsChange}\r\n                      sx={{ color: 'black', '&.Mui-checked': { color: 'black' } }}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <Typography sx={{ fontFamily: \"Sansation Light\", fontSize: { xs: '0.8rem', sm: '0.9rem', md: '1rem' }, color: 'black', textAlign: 'left' }}>\r\n                      By continuing, you agree to our Terms & Conditions and give consent in terms of the POPIA Act to process and store your personal information for service delivery purposes.\r\n                    </Typography>\r\n                  }\r\n                  sx={{ mb: 2 }}\r\n                />\r\n                {errors.terms && (\r\n                  <Typography color=\"error\" sx={{ fontFamily: \"Sansation Light\", fontSize: { xs: '0.8rem', sm: '0.9rem', md: '1rem' }, mb: 2 }}>\r\n                    {errors.terms}\r\n                  </Typography>\r\n                )}\r\n                <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ backgroundColor: 'black', fontFamily: \"Sansation Light\", mt: 1, fontSize: { xs: '0.9rem', sm: '1rem', md: '1.2rem' } }}>\r\n                  REGISTER\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </form>\r\n      </Box>\r\n\r\n      <Dialog\r\n        open={openForgotPassword}\r\n        onClose={() => setOpenForgotPassword(false)}\r\n        sx={{\r\n          '& .MuiDialog-paper': {\r\n            maxWidth: '300px',\r\n            width: '100%',\r\n            margin: 'auto',\r\n            padding: '5px',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" sx={{ padding: '5px 10px' }}>\r\n            <Typography variant=\"h6\">Forgot Password</Typography>\r\n            <IconButton onClick={() => setOpenForgotPassword(false)}>\r\n              ×\r\n            </IconButton>\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent sx={{ padding: '0px 20px 0px 20px' }}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={forgotPasswordEmail}\r\n            onChange={handleForgotPasswordChange}\r\n            placeholder=\"Enter your email address\"\r\n            error={!!forgotPasswordError}\r\n            helperText={forgotPasswordError || forgotPasswordSuccess}\r\n            sx={{ marginBottom: '10px' }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions sx={{ padding: '5px 20px 20px 20px' }}>\r\n          <Button\r\n            onClick={handleForgotPasswordSubmit}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ backgroundColor: 'black', fontFamily: \"Sansation Light\", padding: '10px' }}\r\n          >\r\n            Request Password\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Box\r\n        component=\"img\"\r\n        src={footerImage}\r\n        alt=\"footer\"\r\n        sx={{ width: '100%', height: 'auto', mt: 'auto', mb: 1 }}\r\n      />\r\n      <Box sx={{ textAlign: 'center', py: 2, mt: 0, color: 'black' }}>\r\n        <Typography\r\n          variant=\"caption\"\r\n          sx={{\r\n            color: 'black',\r\n            fontFamily: 'Sansation Light, Arial, sans-serif',\r\n            fontSize: fontSizes.caption,\r\n          }}\r\n        >\r\n          Developed by{' '}\r\n          <Link\r\n            href=\"https://uchakide.co.za\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            underline=\"hover\"\r\n            sx={{ color: 'black' }}\r\n          >\r\n            uchakide.co.za\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginSignup;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\r\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\r\nexport function getLinkUtilityClass(slot) {\r\n  return generateUtilityClass('MuiLink', slot);\r\n}\r\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\r\nexport default linkClasses;","import { getPath } from '@mui/system/style';\r\nimport { alpha } from '@mui/system/colorManipulator';\r\nconst getTextDecoration = ({\r\n  theme,\r\n  ownerState\r\n}) => {\r\n  const transformedColor = ownerState.color;\r\n  // check the `main` color first for a custom palette, then fallback to the color itself\r\n  const color = getPath(theme, `palette.${transformedColor}.main`, false) || getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\r\n  const channelColor = getPath(theme, `palette.${transformedColor}.mainChannel`) || getPath(theme, `palette.${transformedColor}Channel`);\r\n  if ('vars' in theme && channelColor) {\r\n    return `rgba(${channelColor} / 0.4)`;\r\n  }\r\n  return alpha(color, 0.4);\r\n};\r\nexport default getTextDecoration;","'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { alpha } from '@mui/system/colorManipulator';\r\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\r\nimport composeClasses from '@mui/utils/composeClasses';\r\nimport isFocusVisible from '@mui/utils/isFocusVisible';\r\nimport capitalize from \"../utils/capitalize.js\";\r\nimport { styled, useTheme } from \"../zero-styled/index.js\";\r\nimport memoTheme from \"../utils/memoTheme.js\";\r\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\r\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\r\nimport Typography from \"../Typography/index.js\";\r\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\r\nimport getTextDecoration from \"./getTextDecoration.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst v6Colors = {\r\n  primary: true,\r\n  secondary: true,\r\n  error: true,\r\n  info: true,\r\n  success: true,\r\n  warning: true,\r\n  textPrimary: true,\r\n  textSecondary: true,\r\n  textDisabled: true\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes,\r\n    component,\r\n    focusVisible,\r\n    underline\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\r\n  };\r\n  return composeClasses(slots, getLinkUtilityClass, classes);\r\n};\r\nconst LinkRoot = styled(Typography, {\r\n  name: 'MuiLink',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => {\r\n    const {\r\n      ownerState\r\n    } = props;\r\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\r\n  }\r\n})(memoTheme(({\r\n  theme\r\n}) => {\r\n  return {\r\n    variants: [{\r\n      props: {\r\n        underline: 'none'\r\n      },\r\n      style: {\r\n        textDecoration: 'none'\r\n      }\r\n    }, {\r\n      props: {\r\n        underline: 'hover'\r\n      },\r\n      style: {\r\n        textDecoration: 'none',\r\n        '&:hover': {\r\n          textDecoration: 'underline'\r\n        }\r\n      }\r\n    }, {\r\n      props: {\r\n        underline: 'always'\r\n      },\r\n      style: {\r\n        textDecoration: 'underline',\r\n        '&:hover': {\r\n          textDecorationColor: 'inherit'\r\n        }\r\n      }\r\n    }, {\r\n      props: ({\r\n        underline,\r\n        ownerState\r\n      }) => underline === 'always' && ownerState.color !== 'inherit',\r\n      style: {\r\n        textDecorationColor: 'var(--Link-underlineColor)'\r\n      }\r\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\r\n      props: {\r\n        underline: 'always',\r\n        color\r\n      },\r\n      style: {\r\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.4)` : alpha(theme.palette[color].main, 0.4)\r\n      }\r\n    })), {\r\n      props: {\r\n        underline: 'always',\r\n        color: 'textPrimary'\r\n      },\r\n      style: {\r\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\r\n      }\r\n    }, {\r\n      props: {\r\n        underline: 'always',\r\n        color: 'textSecondary'\r\n      },\r\n      style: {\r\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.secondaryChannel} / 0.4)` : alpha(theme.palette.text.secondary, 0.4)\r\n      }\r\n    }, {\r\n      props: {\r\n        underline: 'always',\r\n        color: 'textDisabled'\r\n      },\r\n      style: {\r\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\r\n      }\r\n    }, {\r\n      props: {\r\n        component: 'button'\r\n      },\r\n      style: {\r\n        position: 'relative',\r\n        WebkitTapHighlightColor: 'transparent',\r\n        backgroundColor: 'transparent',\r\n        // Reset default value\r\n        // We disable the focus ring for mouse, touch and keyboard users.\r\n        outline: 0,\r\n        border: 0,\r\n        margin: 0,\r\n        // Remove the margin in Safari\r\n        borderRadius: 0,\r\n        padding: 0,\r\n        // Remove the padding in Firefox\r\n        cursor: 'pointer',\r\n        userSelect: 'none',\r\n        verticalAlign: 'middle',\r\n        MozAppearance: 'none',\r\n        // Reset\r\n        WebkitAppearance: 'none',\r\n        // Reset\r\n        '&::-moz-focus-inner': {\r\n          borderStyle: 'none' // Remove Firefox dotted outline.\r\n        },\r\n        [`&.${linkClasses.focusVisible}`]: {\r\n          outline: 'auto'\r\n        }\r\n      }\r\n    }]\r\n  };\r\n}));\r\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\r\n  const props = useDefaultProps({\r\n    props: inProps,\r\n    name: 'MuiLink'\r\n  });\r\n  const theme = useTheme();\r\n  const {\r\n    className,\r\n    color = 'primary',\r\n    component = 'a',\r\n    onBlur,\r\n    onFocus,\r\n    TypographyClasses,\r\n    underline = 'always',\r\n    variant = 'inherit',\r\n    sx,\r\n    ...other\r\n  } = props;\r\n  const [focusVisible, setFocusVisible] = React.useState(false);\r\n  const handleBlur = event => {\r\n    if (!isFocusVisible(event.target)) {\r\n      setFocusVisible(false);\r\n    }\r\n    if (onBlur) {\r\n      onBlur(event);\r\n    }\r\n  };\r\n  const handleFocus = event => {\r\n    if (isFocusVisible(event.target)) {\r\n      setFocusVisible(true);\r\n    }\r\n    if (onFocus) {\r\n      onFocus(event);\r\n    }\r\n  };\r\n  const ownerState = {\r\n    ...props,\r\n    color,\r\n    component,\r\n    focusVisible,\r\n    underline,\r\n    variant\r\n  };\r\n  const classes = useUtilityClasses(ownerState);\r\n  return /*#__PURE__*/_jsx(LinkRoot, {\r\n    color: color,\r\n    className: clsx(classes.root, className),\r\n    classes: TypographyClasses,\r\n    component: component,\r\n    onBlur: handleBlur,\r\n    onFocus: handleFocus,\r\n    ref: ref,\r\n    ownerState: ownerState,\r\n    variant: variant,\r\n    ...other,\r\n    sx: [...(v6Colors[color] === undefined ? [{\r\n      color\r\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\r\n    style: {\r\n      ...other.style,\r\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\r\n        '--Link-underlineColor': getTextDecoration({\r\n          theme,\r\n          ownerState\r\n        })\r\n      })\r\n    }\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * The color of the link.\r\n   * @default 'primary'\r\n   */\r\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: elementTypeAcceptingRef,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\r\n   */\r\n  TypographyClasses: PropTypes.object,\r\n  /**\r\n   * Controls when the link should have an underline.\r\n   * @default 'always'\r\n   */\r\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\r\n  /**\r\n   * Applies the theme typography styles.\r\n   * @default 'inherit'\r\n   */\r\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\r\n} : void 0;\r\nexport default Link;"],"names":["createSvgIcon","_jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","memoTheme","_ref","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","children","className","component","disableTypography","variantProp","other","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","getToggleButtonGroupUtilityClass","undefined","getToggleButtonUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","orientation","firstButton","lastButton","middleButton","vertical","fullWidth","borderRadius","shape","flexDirection","selected","borderTop","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","toggleButtonClasses","disabled","width","borderLeft","exclusive","onChange","handleChange","event","buttonValue","index","indexOf","newValue","slice","splice","concat","handleExclusiveChange","context","validChildren","toArray","filter","child","getValidReactChildren","childrenCount","length","getButtonPositionClassName","isFirstButton","isLastButton","role","ToggleButtonGroupContext","map","ToggleButtonGroupButtonContext","isValueSelected","candidate","Array","isArray","includes","ToggleButtonRoot","ButtonBase","typography","button","padding","border","divider","disabledBackground","textDecoration","backgroundColor","text","primaryChannel","hoverOpacity","alpha","primary","selectedOpacity","Object","entries","createSimplePaletteValueFilter","_ref2","main","mainChannel","fontSize","pxToRem","contextValue","contextProps","toggleButtonGroupButtonContextPositionClassName","resolvedProps","resolveProps","disableFocusRipple","onClick","positionClassName","focusRipple","defaultPrevented","API_BASE_URL","process","validDomains","LoginSignup","authMode","setAuthMode","useState","showPassword","setShowPassword","formData","setFormData","first_name","last_name","email_address","password","user_type","isTermsAccepted","setIsTermsAccepted","errors","setErrors","email","openForgotPassword","setOpenForgotPassword","forgotPasswordEmail","setForgotPasswordEmail","forgotPasswordError","setForgotPasswordError","forgotPasswordSuccess","setForgotPasswordSuccess","e","target","logActivity","async","userId","activityType","axios","post","user_id","activity_type","console","log","err","error","Box","justifyContent","minHeight","mt","bgcolor","ToggleButtonGroup","handleAuthToggle","_","newAuthMode","sx","ToggleButton","fontFamily","xs","sm","md","AccountCircle","mr","PersonAdd","mb","maxWidth","height","onSubmit","preventDefault","formValid","newErrors","test","domainExists","domain","split","response","fetch","data","json","Answer","checkEmailDomainExists","terms","msg","localStorage","setItem","token","JSON","stringify","user","window","location","href","loginResponse","_error$response2","_error$response2$data","_error$response2$data2","toLowerCase","_Fragment","textAlign","TextField","margin","placeholder","InputProps","startAdornment","Email","helperText","type","Lock","endAdornment","InputAdornment","IconButton","togglePasswordVisibility","prevState","VisibilityOff","Visibility","Button","cursor","fontWeight","FormControlLabel","control","Checkbox","checked","label","Dialog","open","onClose","DialogTitle","DialogContent","marginBottom","DialogActions","users","get","some","setTimeout","_error$response","_error$response$data","src","footerImage","alt","py","Link","rel","underline","getLinkUtilityClass","transformedColor","getPath","channelColor","v6Colors","secondary","info","success","warning","textPrimary","textSecondary","textDisabled","LinkRoot","textDecorationColor","_ref3","secondaryChannel","WebkitTapHighlightColor","outline","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","useTheme","onBlur","onFocus","TypographyClasses","setFocusVisible","isFocusVisible","getTextDecoration"],"sourceRoot":""}