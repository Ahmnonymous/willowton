{"version":3,"file":"static/js/479.02ad4095.chunk.js","mappings":"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","sources":["pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card, CardContent, Typography, Grid, Box, useTheme, useMediaQuery } from '@mui/material';\r\nimport { People, Payment, VolunteerActivism, Work } from '@mui/icons-material';\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer, Legend } from 'recharts';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext } from '../config/ThemeContext';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\nconst Dashboard = () => {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [nationalityData, setNationalityData] = useState([]);\r\n  const [educationData, setEducationData] = useState([]);\r\n  const [currentEducationData, setCurrentEducationData] = useState([]);\r\n  const [raceData, setRaceData] = useState([]);\r\n  const [maritalData, setMaritalData] = useState([]);\r\n  const [employmentData, setEmploymentData] = useState([]);\r\n  const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n  const userName = storedUser ? `${storedUser.first_name} ${storedUser.last_name}` : \"Guest\";\r\n\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const isMediumScreen = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n\r\n  const chartColors = ['#4E79A7', '#A0CBE8', '#F28E2B', '#FFBE7D', '#59A14F', '#8CD17D', '#B6992D', '#F1CE63', '#499894', '#86BCB6'];\r\n\r\n  const getOuterRadius = () => {\r\n    if (isSmallScreen) return 55;\r\n    if (isMediumScreen) return 65;\r\n    return 75;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/dashboard`);\r\n        setDashboardData(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchNationalityData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-nationality-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_nationality && item.student_nationality.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_nationality: item.student_nationality\r\n          }));\r\n        setNationalityData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching nationality data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchEducationData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-highest-education-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_highest_education && item.student_highest_education.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_highest_education: item.student_highest_education\r\n          }));\r\n        setEducationData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching education data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCurrentEducationData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-current-education-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_type && item.student_type.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_type: item.student_type\r\n          }));\r\n        setCurrentEducationData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching current education data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchRaceData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-race-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_race && item.student_race.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_race: item.student_race\r\n          }));\r\n        setRaceData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching race data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchMaritalData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-marital-status-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_marital_status && item.student_marital_status.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_marital_status: item.student_marital_status\r\n          }));\r\n        setMaritalData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching marital data:', error);\r\n      }\r\n    };\r\n\r\n    const fetchEmploymentData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/student-employment-status-distribution`);\r\n        const updatedData = response.data\r\n          .filter(item => item.student_employment_status && item.student_employment_status.toLowerCase() !== 'unknown')\r\n          .map(item => ({\r\n            ...item,\r\n            count: Number(item.count) || 0,\r\n            student_employment_status: item.student_employment_status\r\n          }));\r\n        setEmploymentData(updatedData);\r\n      } catch (error) {\r\n        console.error('Error fetching employment data:', error);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n    fetchNationalityData();\r\n    fetchEducationData();\r\n    fetchCurrentEducationData();\r\n    fetchRaceData();\r\n    fetchMaritalData();\r\n    fetchEmploymentData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  // Custom legend formatter to set label color based on theme\r\n  const renderLegend = (props) => {\r\n    const { payload } = props;\r\n    return (\r\n      <ul style={{ listStyle: 'none', padding: 0, textAlign: 'center', marginTop: 10 }}>\r\n        {payload.map((entry, index) => (\r\n          <li key={`item-${index}`} style={{ display: 'inline-block', margin: '0 10px' }}>\r\n            <span\r\n              style={{\r\n                display: 'inline-block',\r\n                width: 10,\r\n                height: 10,\r\n                borderRadius: '50%',\r\n                backgroundColor: entry.color,\r\n                marginRight: 5,\r\n              }}\r\n            />\r\n            <span style={{ color: isDarkMode ? '#FFFFFF' : '#000000', fontSize: '12px' }}>\r\n              {entry.value}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ backgroundColor: isDarkMode ? '#2D3748' : '#F7FAFC', padding: '1px' }}>\r\n      {/* Header Section */}\r\n      <Box sx={{ backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', padding: '20px', borderRadius: '8px', marginBottom: '20px', border: '1px solid #ccc' }}>\r\n        <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: isDarkMode ? 'white' : 'black' }}>Dashboard</Typography>\r\n        <Typography variant=\"body1\" sx={{ color: isDarkMode ? 'white' : 'black', marginTop: 1 }}>\r\n          Welcome, {userName}! 👋\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Student Count Card */}\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Student Count</Typography>\r\n                <People sx={{ fontSize: 40, color: \"#4B8BBE\" }} />\r\n              </Box>\r\n              <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: isDarkMode ? '#FFFFFF' : '#000000' }}>\r\n                {dashboardData.studentCount}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Student Payments Card */}\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Student Payments</Typography>\r\n                <Payment sx={{ fontSize: 40, color: \"#F79C42\" }} />\r\n              </Box>\r\n              <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: isDarkMode ? '#FFFFFF' : '#000000' }}>\r\n                {dashboardData.totalPayments}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Student Voluntary Services Card */}\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Voluntary Services</Typography>\r\n                <VolunteerActivism sx={{ fontSize: 40, color: \"#61C0BF\" }} />\r\n              </Box>\r\n              <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: isDarkMode ? '#FFFFFF' : '#000000' }}>\r\n                {dashboardData.voluntaryServicesCount}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Student Interviews Card */}\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Student Interviews</Typography>\r\n                <Work sx={{ fontSize: 40, color: \"#F04E23\" }} />\r\n              </Box>\r\n              <Typography variant=\"h4\" sx={{ fontWeight: 'bold', color: isDarkMode ? '#FFFFFF' : '#000000' }}>\r\n                {dashboardData.interviewsCount}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Nationality Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Nationalities</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={nationalityData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_nationality\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {nationalityData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={nationalityData.map((entry, index) => ({\r\n                        value: entry.student_nationality,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Current Education Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Current Education</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={currentEducationData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_type\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {currentEducationData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={currentEducationData.map((entry, index) => ({\r\n                        value: entry.student_type,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Highest Education Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Highest Education</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={educationData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_highest_education\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {educationData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={educationData.map((entry, index) => ({\r\n                        value: entry.student_highest_education,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Race Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Race</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={raceData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_race\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {raceData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={raceData.map((entry, index) => ({\r\n                        value: entry.student_race,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Marital Status Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Marital Status</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={maritalData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_marital_status\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {maritalData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={maritalData.map((entry, index) => ({\r\n                        value: entry.student_marital_status,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Employment Status Chart */}\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card sx={{ ...cardStyles, backgroundColor: isDarkMode ? '#1E293B' : '#E1F5FE', border: '1px solid #ccc' }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ color: isDarkMode ? '#FFFFFF' : '#000000' }}>Employment Status</Typography>\r\n              <Box sx={{ height: 260 }}>\r\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={employmentData}\r\n                      dataKey=\"count\"\r\n                      nameKey=\"student_employment_status\"\r\n                      cx=\"50%\"\r\n                      cy=\"50%\"\r\n                      outerRadius={getOuterRadius()}\r\n                    >\r\n                      {employmentData.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\r\n                      ))}\r\n                    </Pie>\r\n                    <Tooltip />\r\n                    <Legend\r\n                      content={renderLegend}\r\n                      layout=\"horizontal\"\r\n                      align=\"center\"\r\n                      verticalAlign=\"bottom\"\r\n                      payload={employmentData.map((entry, index) => ({\r\n                        value: entry.student_employment_status,\r\n                        type: 'circle',\r\n                        color: chartColors[index % chartColors.length],\r\n                      }))}\r\n                    />\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst cardStyles = {\r\n  borderRadius: 2,\r\n  boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n  padding: 2,\r\n  color: '#212121',\r\n};\r\n\r\nexport default Dashboard;"],"names":["API_BASE_URL","process","cardStyles","borderRadius","boxShadow","padding","color","Dashboard","isDarkMode","useContext","ThemeContext","dashboardData","setDashboardData","useState","loading","setLoading","nationalityData","setNationalityData","educationData","setEducationData","currentEducationData","setCurrentEducationData","raceData","setRaceData","maritalData","setMaritalData","employmentData","setEmploymentData","storedUser","JSON","parse","localStorage","getItem","userName","first_name","last_name","theme","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","isMediumScreen","between","chartColors","getOuterRadius","useEffect","async","response","axios","get","data","error","console","fetchDashboardData","updatedData","filter","item","student_nationality","toLowerCase","map","count","Number","fetchNationalityData","student_highest_education","fetchEducationData","student_type","fetchCurrentEducationData","student_race","fetchRaceData","student_marital_status","fetchMaritalData","student_employment_status","fetchEmploymentData","renderLegend","props","payload","_jsx","style","listStyle","textAlign","marginTop","children","entry","index","_jsxs","display","margin","width","height","backgroundColor","marginRight","fontSize","value","Box","sx","marginBottom","border","Typography","variant","fontWeight","Grid","container","spacing","xs","sm","md","Card","CardContent","justifyContent","People","studentCount","Payment","totalPayments","VolunteerActivism","voluntaryServicesCount","Work","interviewsCount","ResponsiveContainer","PieChart","Pie","dataKey","nameKey","cx","cy","outerRadius","Cell","fill","length","Tooltip","Legend","content","layout","align","verticalAlign","type"],"sourceRoot":""}